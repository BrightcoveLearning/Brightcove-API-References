{
  "swagger": "2.0",
  "info": {
    "title": "Delivery System API Reference",
    "version": "1.0.0",
    "description": "Reference for the Delivery System API, used to manage and deploy a group of files, called a repository. These files are managed through REST APIs and through git. These files are delivered, on every <code>git push</code>, to players.brightcove.com. To test API requests, you can use our <a href=\"https://support.brightcove.com/developer-tools-and-concepts\" target=\"_blank\">API Testing Tools</a>"
  },
  "paths": {
    "/accounts/{accountId}/repos/{repoName}/files/{filename}": {
      "put": {
        "tags": [
          "FilesGroup"
        ],
        "summary": "Add/Update File",
        "description": "This will add or update a file. The wanted file name is at the end of the endpoint. The form contents can be a file name, including relative path, or any string. If the file has a .json extension, it will be checked for valid JSON format. ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "repoName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the repo for which to list details. "
          },
          {
            "name": "filename",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the file in the repo, it can be different than the name of locally read file. "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Add_Update_File200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          }
        },
        "operationId": "Add_Update_File"
      },
      "delete": {
        "tags": [
          "FilesGroup"
        ],
        "summary": "Delete File",
        "description": "Deletes a file in a repo. ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "repoName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the repo for which to list details. "
          },
          {
            "name": "filename",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the file in the repo to delete. "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          }
        },
        "operationId": "Delete_File"
      }
    },
    "/accounts/{accountId}/repos/{repoName}/files": {
      "get": {
        "tags": [
          "FilesGroup"
        ],
        "summary": "List Files",
        "description": "Lists all the files in a repo. ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "repoName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the repo for which to list details. "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          }
        },
        "operationId": "List_Files"
      }
    },
    "/accounts/{accountId}/repos/{repoName}": {
      "put": {
        "tags": [
          "Repositories"
        ],
        "summary": "Create Repository",
        "description": "This will create a Repositories, if it does not exist. A response of 200 means the repository already existed. A response of 201 means repository was successfully created. ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "repoName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the repo for which to list details. "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Create_Repository200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          }
        },
        "operationId": "Create_Repository"
      },
      "delete": {
        "tags": [
          "Repositories"
        ],
        "summary": "Delete Repository",
        "description": "This will delete a Repositories. ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "repoName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the repo for which to list details. "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Delete_Repository200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          }
        },
        "operationId": "Delete_Repository"
      },
      "get": {
        "tags": [
          "Repositories"
        ],
        "summary": "Get Repository",
        "description": "This will retrieve the details for a Repositories. ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "repoName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the repo for which to list details. "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Get_Repository200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          }
        },
        "operationId": "Get_Repository"
      },
    "/accounts/{accountId}/repos": {
      "get": {
        "tags": [
          "Repositories"
        ],
        "summary": "List Repositories",
        "description": "This will list the details for all repositories in an account. ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Get_All_Repositories200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          }
        },
        "operationId": "Get_All_Repositories"
      }
    }
  },
  "definitions": {
    "Form Contents Value - Note: The value can be a file or a JSON string; If using a file it must be proceeded with the @ sign": {
      "properties": {
        "sourceFilename": {
          "type": "string",
          "description": "Name of the file in the local folder, or a JSON string. "
        }
      },
      "required": [
        "sourceFilename"
      ]
    },
    "Add_Update_File200": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Destination filename "
        },
        "public_url": {
          "type": "string",
          "description": "URL to use for referencing the file (contrasted to the repo URL) "
        }
      },
      "required": [
        "name",
        "public_url"
      ]
    },
    "Create_Repository200": {
      "properties": {
        "name": {
          "type": "string",
          "description": "repo name "
        },
        "public_url": {
          "type": "string",
          "description": "URL for the public player "
        },
        "repo_url": {
          "type": "string",
          "description": "URL for the repository "
        }
      },
      "required": [
        "name",
        "public_url",
        "repo_url"
      ]
    },
    "Delete_Repository200": {
      "properties": {
        "name": {
          "type": "string",
          "description": "repo name "
        }
      },
      "required": [
        "name"
      ]
    },
    "Get_Repository200": {
      "properties": {
        "name": {
          "type": "string",
          "description": "repo name "
        },
        "public_url": {
          "type": "string",
          "description": "URL for the public player "
        },
        "repo_url": {
          "type": "string",
          "description": "URL for the repository "
        }
      },
      "required": [
        "name",
        "public_url",
        "repo_url"
      ]
    },
    "Get_All_Repositories200": {
      "properties": {
        "items": {
          "type": "array",
          "description": "array of items ",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "items"
      ]
    },
    "items": {
      "properties": {
        "name": {
          "type": "string",
          "description": "repo name "
        },
        "public_url": {
          "type": "string",
          "description": "URL for the public player "
        },
        "repo_url": {
          "type": "string",
          "description": "URL for the repository "
        }
      },
      "required": [
        "name",
        "public_url",
        "repo_url"
      ]
    }
  },
  "schemes": [
    "https"
  ],
  "host": "repos.api.brightcove.com",
  "basePath": "/v1"
}
