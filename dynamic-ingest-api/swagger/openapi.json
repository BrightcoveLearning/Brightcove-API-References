{
  "openapi": "3.0.0",
  "info": {
    "title": "Dynamic Ingest API Reference",
    "description": "Reference for the Brightcove Dynamic Ingest API, used to add videos, images, and captions to your media library, and to replace existing media assets. **NOTE THAT BEFORE YOU INGEST A NEW VIDEO, YOU MUST FIRST MAKE A [CREATE VIDEO REQUEST](https://brightcovelearning.github.io/Brightcove-API-References/cms-api/v1/doc/swagger.html#/Videos/Create_Video).** To test API requests, you can use our <a href=\"https://support.brightcove.com/developer-tools-and-concepts\" target=\"_blank\">API Testing Tools</a>",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://ingest.api.brightcove.com/v1",
      "variables": {}
    }
  ],
  "paths": {
    "/accounts/{account_id}/videos/{video_id}/upload-urls/{source_name}": {
      "get": {
        "tags": [
          "Ingest"
        ],
        "summary": "AccountsVideosUploadUrlsSourceNameByAccountIdAndVideoIdGet",
        "description": "Get temporary S3 URLs to upload source files for ingestion into Video Cloud. See Source File Upload for more information. NOTE that before you ingest a new video, you must first make a Create Video request. ",
        "operationId": "AccountsVideosUploadUrlsSourceNameByAccountIdAndVideoIdGet",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "Video Cloud account ID.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "video_id",
            "in": "path",
            "description": "Video Cloud video ID; if this is a new video ingest, the ID will be the one returned by the Create Video request",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "source_name",
            "in": "path",
            "description": "the video source filename - the name should not contain any URL-reserved characters such as ?, &amp;, # or spaces",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type: application/json",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization: Bearer access_token (see [Getting Access Tokens](https://support.brightcove.com/getting-access-tokens))",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "description": "200",
                  "$ref": "#/components/schemas/GetS3Urls200"
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "429": {
            "description": "RATE_LIMIT_EXCEEDED: Dynamic Ingest job not created. Reduce the number of concurrent jobs for this account before trying again. This error has been logged "
          },
          "default": {
            "description": "INTERNAL_ERROR: Internal error, please try again later "
          }
        },
        "deprecated": false,
        "security": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/accounts/{account_id}/videos/{video_id}/ingest-requests": {
      "post": {
        "tags": [
          "Ingest"
        ],
        "summary": "AccountsVideosIngestRequestsByAccountIdAndVideoIdPost",
        "description": "Uploads a video, images, and/or text track (WebVTT files) and adds them to your media library. NOTE that before you ingest a new video, you must first make a Create Video request. ",
        "operationId": "AccountsVideosIngestRequestsByAccountIdAndVideoIdPost",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "Video Cloud account ID.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "video_id",
            "in": "path",
            "description": "Video Cloud video ID; if this is a new video ingest, the ID will be the one returned by the Create Video request",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type: application/json",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization: Bearer access_token (see [Getting Access Tokens](https://support.brightcove.com/getting-access-tokens))",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Uploads a video, images, and/or text track (WebVTT files) and adds them to your media library. NOTE that before you ingest a new video, you must first make a Create Video request.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Uploads a video, images, and/or text track (WebVTT files) and adds them to your media library. NOTE that before you ingest a new video, you must first make a Create Video request.",
                "$ref": "#/components/schemas/IngestMediaAssetbody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "description": "200",
                  "$ref": "#/components/schemas/IngestMediaAsset200"
                }
              }
            }
          },
          "400": {
            "description": "PROFILE: Unable to find profile by name \nNOT_SUBMITTED: Unable to submit job, please try again later \nNO_SUCH_VIDEO: Unable to find the referenced video \nNO_SOURCE: Unable to find a source to use \nCDN_CREDENTIALS: Unable to fetch CDN credentials \nBAD_CALLBACKS: Callbacks were not in expected format \nBAD_REQUEST: Unable to parse request body. "
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "DYNAMIC_DELIVERY_NOT_ALLOWED: This account is not enabled for Dynamic Delivery, but a Dynamic Delivery profile was specified. \nCONTEXT_AWARE_ENCODING_NOT_ALLOWED: This account is not enabled for Context Aware Encoding, but a Context Aware Encoding profile was specified. "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "422": {
            "description": "MALFORMED_SOURCE_URL: source url is malformed. \nBAD_PROTOCOL_SOURCE_URL: source url uses a unsupported protocol. \nEXCEED_MAXIMUM_VTT_SOURCES: vtt sources exceed the maximum size. \nINVALID_VTT_KIND: vtt kind is invalid. \nCONSTRAINT_VIOLATION: capture-image is not allowed if an image source is provided. \nUNPROCESSABLE_ENTITY: request data contains some unprocessable entity. "
          },
          "429": {
            "description": "RATE_LIMIT_EXCEEDED: Dynamic Ingest job not created. Reduce the number of concurrent jobs for this account before trying again. This error has been logged "
          },
          "default": {
            "description": "SUBMISSION_FAILURE: Unable to submit job please try again later. \nINTERNAL_ERROR: Internal error, please try again later "
          }
        },
        "deprecated": false,
        "security": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    }
  },
  "components": {
    "schemas": {
      "GetS3Urls200": {
        "title": "Get_S3_URLs200",
        "required": [
          "bucket",
          "object_key",
          "access_key_id",
          "secret_access_key",
          "session_token",
          "SignedUrl",
          "ApiRequestUrl"
        ],
        "type": "object",
        "properties": {
          "bucket": {
            "type": "string",
            "description": "the S3 bucket name"
          },
          "object_key": {
            "type": "string",
            "description": "the access key used for authenticating the upload request (used for multipart uploads)"
          },
          "access_key_id": {
            "type": "string",
            "description": "the access key used for authenticating the upload request (used for multipart uploads)"
          },
          "secret_access_key": {
            "type": "string",
            "description": "the secret access key used for authenticating the upload request (used for multipart uploads)"
          },
          "session_token": {
            "type": "string",
            "description": "the secret access key used for authenticating the upload request (used for multipart uploads)"
          },
          "SignedUrl": {
            "type": "string",
            "description": "this is a shorthand S3 url that you can PUT your source file(s) to if you have relatively small videos and are not implementing multipart upload"
          },
          "ApiRequestUrl": {
            "type": "string",
            "description": "this is the URL you will include in your Dynamic Ingest POST request for the Master url or url for the image/text_tracks assets"
          }
        }
      },
      "IngestMediaAssetbody": {
        "title": "Ingest_Media_AssetBody",
        "type": "object",
        "properties": {
          "master": {
            "$ref": "#/components/schemas/IngestMediaAssetbody.master"
          },
          "profile": {
            "type": "string",
            "description": "ingest profile to use for transcoding; if absent, account default profile will be used"
          },
          "text_tracks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IngestMediaAssetbody.textTracks"
            },
            "description": "array of text_track maps"
          },
          "audio_tracks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IngestMediaAssetbody.audioTracks"
            },
            "description": "array of audio track objects Dynanic Delivery only"
          },
          "poster": {
            "$ref": "#/components/schemas/IngestMediaAssetbody.poster"
          },
          "thumbnail": {
            "$ref": "#/components/schemas/IngestMediaAssetbody.thumbnail"
          },
          "capture-images": {
            "type": "boolean",
            "description": "whether poster and thumbnail should be captured during transcoding; defaults to true if the the profile has image renditions, false if it does not"
          },
          "callbacks": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "array of URLs that notifications should be sent to"
          }
        }
      },
      "IngestMediaAssetbody.master": {
        "title": "Ingest_Media_AssetBody.master",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "URL for the video source; required except for re-transcoding where a digital master has been archived, or you are adding images or text tracks to an existing video"
          },
          "use_archived_master": {
            "type": "boolean",
            "description": "For retranscode requests, will use the archived master if set to true; if set to false, you must also include the url for the source video"
          }
        }
      },
      "IngestMediaAssetbody.textTracks": {
        "title": "Ingest_Media_AssetBody.text_tracks",
        "required": [
          "url",
          "srclang"
        ],
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "URL for a WebVTT file"
          },
          "srclang": {
            "type": "string",
            "description": "ISO 639 2-letter (alpha-2) language code for the text tracks"
          },
          "kind": {
            "type": "string",
            "description": "how the vtt file is meant to be used"
          },
          "label": {
            "type": "string",
            "description": "user-readable title"
          },
          "default": {
            "type": "boolean",
            "description": "sets the default language for captions/subtitles"
          }
        }
      },
      "IngestMediaAssetbody.audioTracks": {
        "title": "Ingest_Media_AssetBody.audio_tracks",
        "type": "object",
        "properties": {
          "language": {
            "type": "string",
            "description": "Language code for the muxed in audio from the subtags in http://www.iana.org/assignments/language-subtag-registry/language-subtag-registry (default can be set for the account by contacting Brightcove Support) Dynanic Delivery only"
          },
          "merge_with_existing": {
            "type": "boolean",
            "description": "whether to replace existing audio tracks or add the new ones (currently only false is supported) Dynanic Delivery only"
          },
          "masters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IngestMediaAssetbody.audioTracks.masters"
            },
            "description": "array of audio track objects Dynanic Delivery only"
          }
        }
      },
      "IngestMediaAssetbody.audioTracks.masters": {
        "title": "Ingest_Media_AssetBody.audio_tracks.masters",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "URL for the audio file Dynanic Delivery only"
          },
          "language": {
            "type": "string",
            "description": "Language code for the audio track from the subtags in http://www.iana.org/assignments/language-subtag-registry/language-subtag-registry (default can be set for the account by contacting Brightcove Support) Dynanic Delivery only"
          },
          "variant": {
            "type": "string",
            "description": "the type of audio track (default can be set for the account by contacting Brightcove Support) Dynanic Delivery only"
          }
        }
      },
      "IngestMediaAssetbody.poster": {
        "title": "Ingest_Media_AssetBody.poster",
        "required": [
          "url"
        ],
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "URL for the video poster image"
          },
          "height": {
            "type": "number",
            "description": "pixel height of the image"
          },
          "width": {
            "type": "number",
            "description": "pixel width of the image"
          }
        }
      },
      "IngestMediaAssetbody.thumbnail": {
        "title": "Ingest_Media_AssetBody.thumbnail",
        "required": [
          "url"
        ],
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "URL for the video thumbnail image"
          },
          "height": {
            "type": "number",
            "description": "pixel height of the image"
          },
          "width": {
            "type": "number",
            "description": "pixel width of the image"
          }
        }
      },
      "IngestMediaAsset200": {
        "title": "Ingest_Media_Asset200",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "job id for the request"
          }
        }
      }
    }
  }
}