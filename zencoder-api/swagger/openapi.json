{
  "openapi": "3.0.0",
  "info": {
    "title": "Zencoder API Reference",
    "description": "Reference for the Brightcove Zencoder API, used to create and manage Zencoder encoding jobs.",
    "version": "2.0.0"
  },
  "servers": [{
    "url": "https://app.zencoder.com/api/v2",
    "variables": {}
  }],
  "paths": {
    "/jobs": {
      "post": {
        "tags": [
          "Jobs"
        ],
        "summary": "Create an encoding job",
        "description": "Encoding jobs are created by sending an HTTP POST request to https://app.zencoder.com/api/v2/jobs. The post body must include two things: the URL of a video to process and your API key. It may also include output settings for the job, including an output destination, notification settings, and transcoding settings.",
        "operationId": "CreateJob",
        "parameters": [{
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type: application/json",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Zencoder-Api-Key",
            "in": "header",
            "description": "Zencoder-Api-Key: {your Zencoder API key}",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Create a new encoding job",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "api_key": {
                    "type": "string",
                    "description": "Zencoder api key (must be included here if not passed in a header, which is the recommended way)",
                    "required": false
                  },
                  "input": {
                    "type": "string",
                    "description": "A valid URL to a media file (HTTP/HTTPS, FTP/FTPS, SFTP, Azure, GCS, CF or S3), with or without authentication",
                    "required": true
                  },
                  "live_stream": {
                    "type": "boolean",
                    "description": "Create a Live streaming job",
                    "required": false,
                    "default": false
                  },
                  "region": {
                    "type": "string",
                    "description": "The AWS region where Zencoder should process the job",
                    "required": false,
                    "default": "us",
                    "enum": [
                      "us", "europe", "asia", "sa", "australia", "us-virginia", "us-oregon", "us-n-california", "eu-dublin", "asia-singapore", "asia-tokyo", "sa-saopaulo", "australia-sydney", "us-central-gce", "eu-west-gce", "asia-east-gce"
                    ]
                  },
                  "test": {
                    "type": "boolean",
                    "description": "Enable test mode (\"Integration Mode\") for a job",
                    "required": false,
                    "default": false
                  },
                  "private": {
                    "type": "boolean",
                    "description": "Enable privacy mode for a job",
                    "required": false,
                    "default": false
                  },
                  "download_connections": {
                    "type": "integer",
                    "description": "Utilize multiple, simultaneous connections for download acceleration (in some circumstances)",
                    "required": false,
                    "default": 5
                  },
                  "pass_through": {
                    "type": "string",
                    "description": "Optional information to store alongside this job",
                    "required": false
                  },
                  "mock": {
                    "type": "boolean",
                    "description": "Send a mocked job request",
                    "required": false,
                    "default": false
                  },
                  "grouplng": {
                    "type": "string",
                    "description": "A report grouping for this job",
                    "required": false
                  },
                  "aspera_transfer_policy": {
                    "type": "string",
                    "description": "How to allocate available bandwidth for Aspera file transfers",
                    "required": false,
                    "default": "fair"
                  },
                  "transfer_minimum_rate": {
                    "type": "integer",
                    "description": "A targeted rate in Kbps for data transfer minimums",
                    "required": false,
                    "default": 1000
                  },
                  "transfer_maximum_rate": {
                    "type": "integer",
                    "description": "A targeted rate in Kbps for data transfer maximums",
                    "required": false,
                    "default": 250000
                  },
                  "credentials": {
                    "type": "string",
                    "description": "References saved credentials by a nickname",
                    "required": false
                  },
                  "notifications": {
                    "type": "array",
                    "description": "An array of notification strings (valid email addresses or URLs), or hashes of url and format",
                    "required": false,
                    "items": {
                      "oneOf": [{
                          "type": "string",
                          "description": "A valid email address or URL to send the notification to"
                        },
                        {
                          "type": "object",
                          "description": "An object describing the destination and format for notifications regarding the job",
                          "properties": {

                              "url": {
                                "type": "string",
                                "description": "A valid HTTP or HTTPS URL to notify, optionally including HTTP Auth credentials"
                              },
                              "format": {
                                "type": "string",
                                "description": "A format and content type for notifications",
                                "enum": [
                                  "json",
                                  "xml"
                                ]
                              },
                              "headers": {
                                "type": "object",
                                "description": "By default, HTTP notifications are sent with an HTTP Content-Type, along with a User-Agent; if your application requires additional headers, they can be specified here as `header_name/value` pairs",
                                "example": "headers: {\"Content-Type\": \"application/json\"}"
                              },
                              "event": {
                                "type": "string",
                                "description": "Live outputs have additional notification events corresponding to the progress of the file",
                                "enum": [
                                  "first_segment_uploaded",
                                  "seamless_playback"
                                ]
                              }
                          }
                        }
                      ]
                    }
                  },
                  "outputs": {
                    "type": "array",
                    "description": "An array of Array of output specifications for the encoding job",
                    "required": false,
                    "items": {
                      "type": "object",
                      "description": "An object describing the destination and format for notifications regarding the job",
                      "properties": {
                          "type": {
                            "type": "string",
                            "description": "The type of file to output",
                            "default": "standard",
                            "enum": [
                              "standard", "segmented", "playlist", "transfer-only"
                            ]
                          },
                          "label": {
                            "type": "string",
                            "description": "An optional label for this output - should be unique for the job"
                          },
                          "url": {
                            "type": "string",
                            "description": "An S3, Cloud Files, GCS, FTP, FTPS, SFTP, Aspera, Azure, HTTP, or RTMP URL where Zencoder will put the transcoded file"
                          },
                          "secondary_url": {
                            "type": "string",
                            "description": "An S3, Cloud Files, GCS, FTP, FTPS, SFTP, Aspera, Azure, HTTP, or RTMP URL where Zencoder will put the transcoded file"
                          },
                          "base_url": {
                            "type": "string",
                            "description": "A base S3, Cloud Files, GCS, FTP, FTPS, SFTP, Azure, or Aspera directory URL where Zencoder put the transcoded file, without a filename"
                          },
                          "filename": {
                            "type": "string",
                            "description": "The filename of a finished file"
                          },
                          "package_filename": {
                            "type": "string",
                            "description": "The filename of a packaged output"
                          },
                          "package_format": {
                            "type": "string",
                            "description": "Zip/packaging format to use for the output file(s)",
                            "enum": [
                              "zip", "tar"
                            ]
                          },
                          "device_profile": {
                            "type": "string",
                            "description": "A device profile to use for mobile device compatibility",
                            "enum": [
                              "mobile/advanced", "mobile/baseline", "mobile/legacy", "v1/mobile/advanced", "v1/mobile/baseline", "v1/mobile/legacy", "v2/mobile/advanced", "v2/mobile/baseline", "v2/mobile/legacy"
                            ]
                          },
                          "strict": {
                            "type": "boolean",
                            "description": "Enable strict mode",
                            "default": false
                          }
                      }
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "description": "200",
                  "$ref": "#/components/schemas/CreateAPolicyKey200"
                }
              }
            }
          },
          "400": {
            "description": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable "
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your policy key is correct "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "deprecated": false,
        "security": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    }
  },
  "components": {
    "schemas": {
      "notification": {
        "title": "Notification Object",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "A valid HTTP or HTTPS URL to notify, optionally including HTTP Auth credentials"
          },
          "format": {
            "type": "string",
            "description": "A format and content type for notifications",
            "enum": [
              "json",
              "xml"
            ]
          },
          "headers": {
            "type": "object",
            "description": "By default, HTTP notifications are sent with an HTTP Content-Type, along with a User-Agent; if your application requires additional headers, they can be specified here as `header_name/value` pairs",
            "example": "headers: {\"Content-Type\": \"application/json\"}"
          },
          "event": {
            "type": "string",
            "description": "Live outputs have additional notification events corresponding to the progress of the file",
            "enum": [
              "first_segment_uploaded",
              "seamless_playback"
            ]
          }
        }
      },
      "output": {
        "title": "Output Object",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "The type of file to output",
            "default": "standard",
            "enum": [
              "standard", "segmented", "playlist", "transfer-only"
            ]
          },
          "label": {
            "type": "string",
            "description": "An optional label for this output - should be unique for the job"
          },
          "url": {
            "type": "string",
            "description": "An S3, Cloud Files, GCS, FTP, FTPS, SFTP, Aspera, Azure, HTTP, or RTMP URL where Zencoder will put the transcoded file"
          },
          "secondary_url": {
            "type": "string",
            "description": "An S3, Cloud Files, GCS, FTP, FTPS, SFTP, Aspera, Azure, HTTP, or RTMP URL where Zencoder will put the transcoded file"
          },
          "base_url": {
            "type": "string",
            "description": "A base S3, Cloud Files, GCS, FTP, FTPS, SFTP, Azure, or Aspera directory URL where Zencoder put the transcoded file, without a filename"
          },
          "filename": {
            "type": "string",
            "description": "The filename of a finished file"
          },
          "package_filename": {
            "type": "string",
            "description": "The filename of a packaged output"
          },
          "package_format": {
            "type": "string",
            "description": "Zip/packaging format to use for the output file(s)",
            "enum": [
              "zip", "tar"
            ]
          },
          "device_profile": {
            "type": "string",
            "description": "A device profile to use for mobile device compatibility",
            "enum": [
              "mobile/advanced", "mobile/baseline", "mobile/legacy", "v1/mobile/advanced", "v1/mobile/baseline", "v1/mobile/legacy", "v2/mobile/advanced", "v2/mobile/baseline", "v2/mobile/legacy"
            ]
          },
          "strict": {
            "type": "boolean",
            "description": "Enable strict mode",
            "default": false
          }
        }
      }
    }
  }
}
