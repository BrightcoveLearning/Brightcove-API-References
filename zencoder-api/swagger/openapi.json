{
  "openapi": "3.0.0",
  "info": {
    "title": "Zencoder API Reference",
    "description": "Reference for the Brightcove Zencoder API, used to create and manage Zencoder encoding jobs.",
    "version": "2.0.0"
  },
  "servers": [
    {
      "url": "https://app.zencoder.com/api/v2",
      "variables": {}
    }
  ],
  "paths": {
    "/jobs": {
      "post": {
        "tags": [
          "Jobs"
        ],
        "summary": "Create an encoding job",
        "description": "Encoding jobs are created by sending an HTTP POST request to https://app.zencoder.com/api/v2/jobs. The post body must include two things: the URL of a video to process and your API key. It may also include output settings for the job, including an output destination, notification settings, and transcoding settings.",
        "operationId": "CreateJob",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type: application/json",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Zencoder-Api-Key",
            "in": "header",
            "description": "Zencoder-Api-Key: {your Zencoder API key}",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Create a new encoding job",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "api_key": {
                    "type": "string",
                    "description": "Zencoder api key (must be included here if not passed in a header, which is the recommended way)",
                    "required": false
                  },
                  "input": {
                    "type": "string",
                    "description": "A valid URL to a media file (HTTP/HTTPS, FTP/FTPS, SFTP, Azure, GCS, CF or S3), with or without authentication",
                    "required": true
                  },
                  "live_stream": {
                    "type": "boolean",
                    "description": "Create a Live streaming job",
                    "required": false,
                    "default": false
                  },
                  "region": {
                    "type": "string",
                    "description": "The AWS region where Zencoder should process the job",
                    "required": false,
                    "default": "us",
                    "enum": [
                      "us", "europe", "asia", "sa", "australia", "us-virginia", "us-oregon", "us-n-california", "eu-dublin", "asia-singapore", "asia-tokyo", "sa-saopaulo", "australia-sydney", "us-central-gce", "eu-west-gce", "asia-east-gce"
                    ]
                  },
                  "test": {
                    "type": "boolean",
                    "description": "Enable test mode (\"Integration Mode\") for a job",
                    "required": false,
                    "default": false
                  },
                  "private": {
                    "type": "boolean",
                    "description": "Enable privacy mode for a job",
                    "required": false,
                    "default": false
                  },
                  "download_connections": {
                    "type": "integer",
                    "description": "Utilize multiple, simultaneous connections for download acceleration (in some circumstances)",
                    "required": false,
                    "default": 5
                  },
                  "pass_through": {
                    "type": "string",
                    "description": "Optional information to store alongside this job",
                    "required": false
                  },
                  "mock": {
                    "type": "boolean",
                    "description": "Send a mocked job request",
                    "required": false,
                    "default": false
                  },
                  "grouplng": {
                    "type": "string",
                    "description": "A report grouping for this job",
                    "required": false
                  },
                  "aspera_transfer_policy": {
                    "type": "string",
                    "description": "How to allocate available bandwidth for Aspera file transfers",
                    "required": false,
                    "default": "fair"
                  },
                  "transfer_minimum_rate": {
                    "type": "integer",
                    "description": "A targeted rate in Kbps for data transfer minimums",
                    "required": false,
                    "default": 1000
                  },
                  "transfer_maximum_rate": {
                    "type": "integer",
                    "description": "A targeted rate in Kbps for data transfer maximums",
                    "required": false,
                    "default": 250000
                  },
                  "credentials": {
                    "type": "string",
                    "description": "References saved credentials by a nickname",
                    "required": false
                  },
                  "notifications": {
                    "type": "array",
                    "description": "An array of notification strings (valid email addresses or URLs), or hashes of url and format",
                    "required": false,
                    "items": {
                      "oneOf": [
                        {
                          "type": "string",
                          "description": "A valid email address or URL to send the notification to"
                        },
                        {
                          "type": "object",
                          "description": "An object describing the destination and format for notifications regarding the job",
                          "schema": {
                            "$ref": "#/components/schemas/notification"
                          }
                        }
                      ]
                    }
                  },
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "description": "200",
                  "$ref": "#/components/schemas/CreateAPolicyKey200"
                }
              }
            }
          },
          "400": {
            "description": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable "
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your policy key is correct "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "deprecated": false,
        "security": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    }
  },
  "components": {
    "schemas": {
      "notification": {
        "title": "Notification Object",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "A valid HTTP or HTTPS URL to notify, optionally including HTTP Auth credentials"
          },
          "format": {
            "type": "string",
            "description": "A format and content type for notifications",
            "enum": [
              "json",
              "xml"
            ]
          }
        }
      },
      "CreateAPolicyKeybody.key-data": {
        "title": "Create_a_Policy_KeyBody.key-data",
        "required": [
          "account-id"
        ],
        "type": "object",
        "properties": {
          "account-id": {
            "type": "string",
            "description": "Video Cloud account id"
          },
          "apis": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of APIs that are permitted for this key (currently &quot;search&quot; is the only one available - this must be included to use the search functionality for the Playback API)"
          },
          "allowed-domains": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "For domain restriction, the domains this key will work on"
          },
          "require-ad-config": {
            "type": "boolean",
            "description": "Whether Playback API requests require an ad-config-id URL parameter for server-side ad insertion"
          },
          "geo": {
            "description": "Map of geo-filtering properties",
            "$ref": "#/components/schemas/CreateAPolicyKeybody.key-data.geo"
          }
        }
      },
      "CreateAPolicyKeybody.key-data.geo": {
        "title": "Create_a_Policy_KeyBody.key-data.geo",
        "type": "object",
        "properties": {
          "countries": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of ISO 3166 list of 2- or 4-letter codes in lower-case (search for &quot;country codes&quot;)"
          },
          "exclude_countries": {
            "type": "boolean",
            "description": "If true, country array is treated as a list of countries excluded from viewing. If false, the country array is a list of countries included for viewing."
          }
        }
      },
      "CreateAPolicyKey200": {
        "title": "Create_a_Policy_Key200",
        "required": [
          "key_string",
          "key-data"
        ],
        "type": "object",
        "properties": {
          "key_string": {
            "type": "string",
            "description": "The policy key string"
          },
          "key-data": {
            "description": "Map of key data prescribing the policy",
            "$ref": "#/components/schemas/KeyData"
          }
        }
      },
      "KeyData": {
        "title": "key-data",
        "required": [
          "account-id",
          "apis",
          "allowed-domains",
          "require-ad-config",
          "geo"
        ],
        "type": "object",
        "properties": {
          "account-id": {
            "type": "string",
            "description": "The Video Cloud account id"
          },
          "apis": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of apis permitted for the key"
          },
          "allowed-domains": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of domains allowed to use this key"
          },
          "require-ad-config": {
            "type": "boolean",
            "description": "Whether Playback API requests require an ad-config-id URL parameter for server-side ad insertion"
          },
          "geo": {
            "description": "Map of geo-filtering properties",
            "$ref": "#/components/schemas/KeyData.geo"
          }
        }
      },
      "KeyData.geo": {
        "title": "key-data.geo",
        "required": [
          "countries",
          "exclude_countries"
        ],
        "type": "object",
        "properties": {
          "countries": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of ISO 3166 list of 2- or 4-letter codes in lower-case (search for &quot;country codes&quot;)"
          },
          "exclude_countries": {
            "type": "boolean",
            "description": "If true, country array is treated as a list of countries excluded from viewing. If false, the country array is a list of countries included for viewing."
          }
        }
      },
      "GetPolicy200": {
        "title": "Get_Policy200",
        "required": [
          "key_string",
          "key-data"
        ],
        "type": "object",
        "properties": {
          "key_string": {
            "type": "string",
            "description": "The policy key string"
          },
          "key-data": {
            "description": "Map of key data prescribing the policy",
            "$ref": "#/components/schemas/KeyData"
          }
        }
      }
    }
  }
}
