{
  "swagger": "2.0",
  "info": {
    "title": "CMS API Reference",
    "version": "1.0.0",
    "description": "Reference for the Brightcove CMS API, used to access and manage your media library. To test API requests, you can use our <a href=\"https://support.brightcove.com/node/17910\" target=\"_blank\">API Testing Tools</a>. For permissions needed for OAuth credentials, see <a href=\"https://support.brightcove.com/node/17922\" target=\"_blank\">API Operations</a>"
  },
  "paths": {
    "/accounts/{account_id}/videos/{video_id}/assets/caption": {
      "post": {
        "tags": [
          "assetGroup"
        ],
        "summary": "Add Caption",
        "description": "Adds a caption file for a remote asset (DFXP captions for the Smart Player). Note: 1) the caption endpoint is ONLY for working with DFXP captions used in the legacy Smart Player - WebVTT captions (text_tracks) for the new Brightcove Player are managed using the Update Video operation; 2) you can use /videos/ref:reference_id instead of /videos/video_id ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud video ID. You can also use ref:reference_id "
          },
          {
            "in": "body",
            "name": "Add_CaptionBody",
            "description": "Adds a caption file for a remote asset (DFXP captions for the Smart Player). Note: 1) the caption endpoint is ONLY for working with DFXP captions used in the legacy Smart Player - WebVTT captions (text_tracks) for the new Brightcove Player are managed using the Update Video operation; 2) you can use /videos/ref:reference_id instead of /videos/video_id ",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Add_CaptionBody"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Add_Caption200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "409": {
            "description": "REFERENCE_ID_IN_USE: The specified reference id is already in use "
          },
          "422": {
            "description": "VALIDATION_ERROR: &quot;remote_url"
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "Add_Caption"
      },
      "get": {
        "tags": [
          "assetGroup"
        ],
        "summary": "Get Caption List",
        "description": "Gets the caption file for a given video (DFXP captions for the Smart Player). Note: 1) the caption endpoint is ONLY for working with DFXP captions used in the legacy Smart Player - WebVTT captions (text_tracks) for the new Brightcove Player are managed using the Update Video operation; 2) you can use /videos/ref:reference_id instead of /videos/video_id ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud video ID. You can also use ref:reference_id "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Get_Caption_List200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "Get_Caption_List"
      }
    },
    "/accounts/{account_id}/videos/{video_id}/assets/dash_manifests": {
      "post": {
        "tags": [
          "assetGroup"
        ],
        "summary": "Add DASH Manifest",
        "description": "Adds a location for a remote DASH manifest Notes: 1. you can have multiple dash manifests with profiles; you can have only one dash manifest without a profile, but one manifest without a profile can be combined with muliple manifests with profiles; 2. all manifests intended to be used with the CMS API should include a profile - only DASH manifests with profiles will be returned by the CMS API &mdash; only a single DASH manifest without a profile will be returned by the Media API 3. you can use /videos/ref:reference_id instead of /videos/video_id ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud video ID. You can also use ref:reference_id "
          },
          {
            "in": "body",
            "name": "Add_DASH_ManifestBody",
            "description": "Adds a location for a remote DASH manifest Notes: 1. you can have multiple dash manifests with profiles; you can have only one dash manifest without a profile, but one manifest without a profile can be combined with muliple manifests with profiles; 2. all manifests intended to be used with the CMS API should include a profile - only DASH manifests with profiles will be returned by the CMS API &mdash; only a single DASH manifest without a profile will be returned by the Media API 3. you can use /videos/ref:reference_id instead of /videos/video_id ",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Add_DASH_ManifestBody"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Add_DASH_Manifest200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "422": {
            "description": "VALIDATION_ERROR: &quot;remote_url"
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "Add_DASH_Manifest"
      },
      "get": {
        "tags": [
          "assetGroup"
        ],
        "summary": "Get DASH Manifest List",
        "description": "Gets the dash_manifests for a given video. Notes: 1. you can have multiple dash manifests with profiles; you can have only one dash manifest without a profile, but one manifest without a profile can be combined with muliple manifests with profiles; 2. all manifests intended to be used with the CMS API should include a profile - only DASH manifests with profiles will be returned by the CMS API &mdash; only a single DASH manifest without a profile will be returned by the Media API 3. you can use /videos/ref:reference_id instead of /videos/video_id ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud video ID. You can also use ref:reference_id "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Get_DASH_Manifest_List200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "Get_DASH_Manifest_List"
      }
    },
    "/accounts/{account_id}/videos/{video_id}/assets/hds_manifest": {
      "post": {
        "tags": [
          "assetGroup"
        ],
        "summary": "Add HDS Manifest",
        "description": "Adds the location of an hds_manifest file for a remote asset. Note: you can use /videos/ref:reference_id instead of /videos/video_id ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud video ID. You can also use ref:reference_id "
          },
          {
            "in": "body",
            "name": "Add_HDS_ManifestBody",
            "description": "Adds the location of an hds_manifest file for a remote asset. Note: you can use /videos/ref:reference_id instead of /videos/video_id ",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Add_HDS_ManifestBody"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Add_HDS_Manifest200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "422": {
            "description": "VALIDATION_ERROR: &quot;remote_url"
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "Add_HDS_Manifest"
      },
      "get": {
        "tags": [
          "assetGroup"
        ],
        "summary": "Get HDS Manifest List",
        "description": "Gets the hds_manifest file for a given video. Note: you can use /videos/ref:reference_id instead of /videos/video_id ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud video ID. You can also use ref:reference_id "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Get_HDS_Manifest_List200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "Get_HDS_Manifest_List"
      }
    },
    "/accounts/{account_id}/videos/{video_id}/assets/hls_manifest": {
      "post": {
        "tags": [
          "assetGroup"
        ],
        "summary": "Add HLS Manifest",
        "description": "Adds the location of an hls_manifest file for a remote asset. Note: you can use /videos/ref:reference_id instead of /videos/video_id ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud video ID. You can also use ref:reference_id "
          },
          {
            "in": "body",
            "name": "Add_HLS_ManifestBody",
            "description": "Adds the location of an hls_manifest file for a remote asset. Note: you can use /videos/ref:reference_id instead of /videos/video_id ",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Add_HLS_ManifestBody"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Add_HLS_Manifest200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "422": {
            "description": "VALIDATION_ERROR: &quot;remote_url"
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "Add_HLS_Manifest"
      },
      "get": {
        "tags": [
          "assetGroup"
        ],
        "summary": "Get HLS Manifest List",
        "description": "Gets the hls_manifest for a given video. Notes: 1) you can use /videos/ref:reference_id instead of /videos/video_id 2) this method only returns a remote asset HTL manifest, not manifests for ingested videos ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud video ID. You can also use ref:reference_id "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Get_HLS_Manifest_List200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "Get_HLS_Manifest_List"
      }
    },
    "/accounts/{account_id}/videos/{video_id}/assets/ismc_manifest": {
      "post": {
        "tags": [
          "assetGroup"
        ],
        "summary": "Add ISMC Manifest",
        "description": "Adds the location of an ismc_manifest file for a remote asset. Note: you can use /videos/ref:reference_id instead of /videos/video_id ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud video ID. You can also use ref:reference_id "
          },
          {
            "in": "body",
            "name": "Add_ISMC_ManifestBody",
            "description": "Adds the location of an ismc_manifest file for a remote asset. Note: you can use /videos/ref:reference_id instead of /videos/video_id ",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Add_ISMC_ManifestBody"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Add_ISMC_Manifest200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "422": {
            "description": "VALIDATION_ERROR: &quot;remote_url"
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "Add_ISMC_Manifest"
      },
      "get": {
        "tags": [
          "assetGroup"
        ],
        "summary": "Get ISMC Manifest List",
        "description": "Gets the ismc_manifest files for a given video. Note: you can use /videos/ref:reference_id instead of /videos/video_id ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud video ID. You can also use ref:reference_id "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Get_ISMC_Manifest_List200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "Get_ISMC_Manifest_List"
      }
    },
    "/accounts/{account_id}/videos/{video_id}/assets/ism_manifest": {
      "post": {
        "tags": [
          "assetGroup"
        ],
        "summary": "Add ISM Manifest",
        "description": "Adds the location of an ism_manifest file for a remote asset. Note: you can use /videos/ref:reference_id instead of /videos/video_id ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud video ID. You can also use ref:reference_id "
          },
          {
            "in": "body",
            "name": "Add_ISM_ManifestBody",
            "description": "Adds the location of an ism_manifest file for a remote asset. Note: you can use /videos/ref:reference_id instead of /videos/video_id ",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Add_ISM_ManifestBody"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Add_ISM_Manifest200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "422": {
            "description": "VALIDATION_ERROR: &quot;remote_url"
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "Add_ISM_Manifest"
      },
      "get": {
        "tags": [
          "assetGroup"
        ],
        "summary": "Get ISM Manifest List",
        "description": "Gets the ism_manifest for a given video. Note: you can use /videos/ref:reference_id instead of /videos/video_id ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud video ID. You can also use ref:reference_id "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Get_ISM_Manifest_List200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "Get_ISM_Manifest_List"
      }
    },
    "/accounts/{account_id}/videos/{video_id}/assets/poster": {
      "post": {
        "tags": [
          "assetGroup"
        ],
        "summary": "Add Poster",
        "description": "Adds a poster file for a remote asset. Ingested assets must be added via the Dynamic Ingest API. Note: you can use /videos/ref:reference_id instead of /videos/video_id ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud video ID. You can also use ref:reference_id "
          },
          {
            "in": "body",
            "name": "Add_PosterBody",
            "description": "Adds a poster file for a remote asset. Ingested assets must be added via the Dynamic Ingest API. Note: you can use /videos/ref:reference_id instead of /videos/video_id ",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Add_PosterBody"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Add_Poster200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "409": {
            "description": "REFERENCE_ID_IN_USE: The specified reference id is already in use "
          },
          "422": {
            "description": "VALIDATION_ERROR: &quot;remote_url"
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "Add_Poster"
      },
      "get": {
        "tags": [
          "assetGroup"
        ],
        "summary": "Get Poster List",
        "description": "Gets the poster file for a given video. Note that you can only add one poster for a video. Note: you can use /videos/ref:reference_id instead of /videos/video_id ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud video ID. You can also use ref:reference_id "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Get_Poster_List200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "Get_Poster_List"
      }
    },
    "/accounts/{account_id}/videos/{video_id}/assets/renditions": {
      "post": {
        "tags": [
          "assetGroup"
        ],
        "summary": "Add Rendition",
        "description": "Add a remote rendition to the given video. Note: you can use /videos/ref:reference_id instead of /videos/video_id ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud video ID. You can also use ref:reference_id "
          },
          {
            "in": "body",
            "name": "Add_RenditionBody",
            "description": "Add a remote rendition to the given video. Note: you can use /videos/ref:reference_id instead of /videos/video_id ",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Add_RenditionBody"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Add_Rendition200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable \nMIXED_REMOTE_NOT_ALLOWED: Remote renditions may not be added to ingested videos "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "409": {
            "description": "REFERENCE_ID_IN_USE: The specified reference id is already in use "
          },
          "422": {
            "description": "VALIDATION_ERROR: &quot;remote_url"
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "Add_Rendition"
      },
      "get": {
        "tags": [
          "assetGroup"
        ],
        "summary": "Get Rendition List",
        "description": "Gets a list of renditions for a given video. Note: you can use /videos/ref:reference_id instead of /videos/video_id ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud video ID. You can also use ref:reference_id "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Get_Rendition_List200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "Get_Rendition_List"
      }
    },
    "/accounts/{account_id}/videos/{video_id}/assets/thumbnail": {
      "post": {
        "tags": [
          "assetGroup"
        ],
        "summary": "Add Thumbnail",
        "description": "Adds a thumbnail file for a remote asset. Ingested assets must be added via the Dynamic Ingest API. Note: you can use /videos/ref:reference_id instead of /videos/video_id ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud video ID. You can also use ref:reference_id "
          },
          {
            "in": "body",
            "name": "Add_ThumbnailBody",
            "description": "Adds a thumbnail file for a remote asset. Ingested assets must be added via the Dynamic Ingest API. Note: you can use /videos/ref:reference_id instead of /videos/video_id ",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Add_ThumbnailBody"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Add_Thumbnail200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "409": {
            "description": "REFERENCE_ID_IN_USE: The specified reference id is already in use "
          },
          "422": {
            "description": "VALIDATION_ERROR: &quot;remote_url"
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "Add_Thumbnail"
      },
      "get": {
        "tags": [
          "assetGroup"
        ],
        "summary": "Get Thumbnail List",
        "description": "Gets the thumbnail for a given video. Note that you can only add one thumbnail for a video. Note: you can use /videos/ref:reference_id instead of /videos/video_id ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud video ID. You can also use ref:reference_id "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Get_Thumbnail_List200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "Get_Thumbnail_List"
      }
    },
    "/accounts/{account_id}/videos/{video_id}/assets/caption/{asset_id}": {
      "delete": {
        "tags": [
          "assetGroup"
        ],
        "summary": "Delete Caption",
        "description": "Deletes a caption file for a remote asset (DFXP captions for the Smart Player). Note: 1) the caption endpoint is ONLY for working with DFXP captions used in the legacy Smart Player - WebVTT captions (text_tracks) for the new Brightcove Player are managed using the Update Video operation; 2) you can use /videos/ref:reference_id instead of /videos/video_id ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud video ID. You can also use ref:reference_id "
          },
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "the asset id "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "Delete_Caption"
      },
      "get": {
        "tags": [
          "assetGroup"
        ],
        "summary": "Get Caption",
        "description": "Gets a caption file for a given video (DFXP captions for the Smart Player). Note: 1) the caption endpoint is ONLY for working with DFXP captions used in the legacy Smart Player - WebVTT captions (text_tracks) for the new Brightcove Player are managed using the Update Video operation; 2) you can use /videos/ref:reference_id instead of /videos/video_id ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud video ID. You can also use ref:reference_id "
          },
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "the asset id "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Get_Caption200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "Get_Caption"
      },
      "patch": {
        "tags": [
          "assetGroup"
        ],
        "summary": "Update Caption",
        "description": "Updates the location of a remote caption file for a remote asset (DFXP captions for the Smart Player). Note: 1) the caption endpoint is ONLY for working with DFXP captions used in the legacy Smart Player - WebVTT captions (text_tracks) for the new Brightcove Player are managed using the Update Video operation; 2) you can use /videos/ref:reference_id instead of /videos/video_id ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud video ID. You can also use ref:reference_id "
          },
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "id for the asset "
          },
          {
            "in": "body",
            "name": "Update_CaptionBody",
            "description": "Updates the location of a remote caption file for a remote asset (DFXP captions for the Smart Player). Note: 1) the caption endpoint is ONLY for working with DFXP captions used in the legacy Smart Player - WebVTT captions (text_tracks) for the new Brightcove Player are managed using the Update Video operation; 2) you can use /videos/ref:reference_id instead of /videos/video_id ",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Update_CaptionBody"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Update_Caption200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "409": {
            "description": "REFERENCE_ID_IN_USE: The specified reference id is already in use "
          },
          "422": {
            "description": "VALIDATION_ERROR: &quot;remote_url"
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "Update_Caption"
      }
    },
    "/accounts/{account_id}/videos/{video_id}/assets/dash_manifests/{asset_id}": {
      "delete": {
        "tags": [
          "assetGroup"
        ],
        "summary": "Delete DASH Manifest",
        "description": "Deletes an dash_manifest file for a remote asset. Note: you can use /videos/ref:reference_id instead of /videos/video_id ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud video ID. You can also use ref:reference_id "
          },
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "the asset id "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "Delete_DASH_Manifest"
      },
      "get": {
        "tags": [
          "assetGroup"
        ],
        "summary": "Get DASH Manifest",
        "description": "Gets a dash_manifest for a given video. Note: you can use /videos/ref:reference_id instead of /videos/video_id ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud video ID. You can also use ref:reference_id "
          },
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "the asset id "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Get_DASH_Manifest200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "Get_DASH_Manifest"
      },
      "patch": {
        "tags": [
          "assetGroup"
        ],
        "summary": "Update DASH Manifest",
        "description": "Updates the location of a remote dash_manifest file for a remote asset. Note: you can use /videos/ref:reference_id instead of /videos/video_id ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud video ID. You can also use ref:reference_id "
          },
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "id for the asset "
          },
          {
            "in": "body",
            "name": "Update_DASH_ManifestBody",
            "description": "Updates the location of a remote dash_manifest file for a remote asset. Note: you can use /videos/ref:reference_id instead of /videos/video_id ",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Update_DASH_ManifestBody"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Update_DASH_Manifest200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "409": {
            "description": "REFERENCE_ID_IN_USE: The specified reference id is already in use "
          },
          "422": {
            "description": "VALIDATION_ERROR: &quot;remote_url"
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "Update_DASH_Manifest"
      }
    },
    "/accounts/{account_id}/videos/{video_id}/assets/hds_manifest/{asset_id}": {
      "delete": {
        "tags": [
          "assetGroup"
        ],
        "summary": "Delete HDS Manifest",
        "description": "Deletes an hds_manifest file for a remote asset. Note: you can use /videos/ref:reference_id instead of /videos/video_id ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud video ID. You can also use ref:reference_id "
          },
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "the asset id "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "Delete_HDS_Manifest"
      },
      "get": {
        "tags": [
          "assetGroup"
        ],
        "summary": "Get HDS Manifest",
        "description": "Gets the hds_manifest file for a given video. Note: you can use /videos/ref:reference_id instead of /videos/video_id ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud video ID. You can also use ref:reference_id "
          },
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "the asset id "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Get_HDS_Manifest200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "Get_HDS_Manifest"
      },
      "patch": {
        "tags": [
          "assetGroup"
        ],
        "summary": "Update HDS Manifest",
        "description": "Updates the location of a remote hds_manifest file for a remote asset. Note: you can use /videos/ref:reference_id instead of /videos/video_id ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud video ID. You can also use ref:reference_id "
          },
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "id for the asset "
          },
          {
            "in": "body",
            "name": "Update_HDS_ManifestBody",
            "description": "Updates the location of a remote hds_manifest file for a remote asset. Note: you can use /videos/ref:reference_id instead of /videos/video_id ",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Update_HDS_ManifestBody"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Update_HDS_Manifest200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "409": {
            "description": "REFERENCE_ID_IN_USE: The specified reference id is already in use "
          },
          "422": {
            "description": "VALIDATION_ERROR: &quot;remote_url"
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "Update_HDS_Manifest"
      }
    },
    "/accounts/{account_id}/videos/{video_id}/assets/hls_manifest/{asset_id}": {
      "delete": {
        "tags": [
          "assetGroup"
        ],
        "summary": "Delete HLS Manifest",
        "description": "Deletes an hls_manifest file for a remote asset. Note: you can use /videos/ref:reference_id instead of /videos/video_id ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud video ID. You can also use ref:reference_id "
          },
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "the asset id "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "Delete_HLS_Manifest"
      },
      "get": {
        "tags": [
          "assetGroup"
        ],
        "summary": "Get HLS Manifest",
        "description": "Gets an hls_manifest for a given video. Note: you can use /videos/ref:reference_id instead of /videos/video_id ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud video ID. You can also use ref:reference_id "
          },
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "the asset id "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Get_HLS_Manifest200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "Get_HLS_Manifest"
      },
      "patch": {
        "tags": [
          "assetGroup"
        ],
        "summary": "Update HLS Manifest",
        "description": "Updates the location of a remote hls_manifest file for a remote asset. Note: you can use /videos/ref:reference_id instead of /videos/video_id ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud video ID. You can also use ref:reference_id "
          },
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "id for the asset "
          },
          {
            "in": "body",
            "name": "Update_HLS_ManifestBody",
            "description": "Updates the location of a remote hls_manifest file for a remote asset. Note: you can use /videos/ref:reference_id instead of /videos/video_id ",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Update_HLS_ManifestBody"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Update_HLS_Manifest200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "409": {
            "description": "REFERENCE_ID_IN_USE: The specified reference id is already in use "
          },
          "422": {
            "description": "VALIDATION_ERROR: &quot;remote_url"
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "Update_HLS_Manifest"
      }
    },
    "/accounts/{account_id}/videos/{video_id}/assets/ismc_manifest/{asset_id}": {
      "delete": {
        "tags": [
          "assetGroup"
        ],
        "summary": "Delete ISMC Manifest",
        "description": "Deletes an ismc_manifest file for a remote asset. Note: you can use /videos/ref:reference_id instead of /videos/video_id ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud video ID. You can also use ref:reference_id "
          },
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "the asset id "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens "
          }
        ],
        "responses": {
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "Delete_ISMC_Manifest"
      },
      "get": {
        "tags": [
          "assetGroup"
        ],
        "summary": "Get ISMC Manifest",
        "description": "Gets the ismc_manifest file for a given video. Note: you can use /videos/ref:reference_id instead of /videos/video_id ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud video ID. You can also use ref:reference_id "
          },
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "the asset id "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Get_ISMC_Manifest200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "Get_ISMC_Manifest"
      },
      "patch": {
        "tags": [
          "assetGroup"
        ],
        "summary": "Update ISMC Manifest",
        "description": "Updates the location of a remote ismc_manifest file for a remote asset. Note: you can use /videos/ref:reference_id instead of /videos/video_id ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud video ID. You can also use ref:reference_id "
          },
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "id for the asset "
          },
          {
            "in": "body",
            "name": "Update_ISMC_ManifestBody",
            "description": "Updates the location of a remote ismc_manifest file for a remote asset. Note: you can use /videos/ref:reference_id instead of /videos/video_id ",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Update_ISMC_ManifestBody"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Update_ISMC_Manifest200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "409": {
            "description": "REFERENCE_ID_IN_USE: The specified reference id is already in use "
          },
          "422": {
            "description": "VALIDATION_ERROR: &quot;remote_url"
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "Update_ISMC_Manifest"
      }
    },
    "/accounts/{account_id}/videos/{video_id}/assets/ism_manifest/{asset_id}": {
      "delete": {
        "tags": [
          "assetGroup"
        ],
        "summary": "Delete ISM Manifest",
        "description": "Deletes an ism_manifest file for a remote asset. Note: you can use /videos/ref:reference_id instead of /videos/video_id ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud video ID. You can also use ref:reference_id "
          },
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "the asset id "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "Delete_ISM_Manifest"
      },
      "get": {
        "tags": [
          "assetGroup"
        ],
        "summary": "Get ISM Manifest",
        "description": "Gets an ism_manifest for a given video. Note: you can use /videos/ref:reference_id instead of /videos/video_id ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud video ID. You can also use ref:reference_id "
          },
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "the asset id "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Get_ISM_Manifest200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "Get_ISM_Manifest"
      },
      "patch": {
        "tags": [
          "assetGroup"
        ],
        "summary": "Update ISM Manifest",
        "description": "Updates the location of a remote ism_manifest file for a remote asset. Note: you can use /videos/ref:reference_id instead of /videos/video_id ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud video ID. You can also use ref:reference_id "
          },
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "id for the asset "
          },
          {
            "in": "body",
            "name": "Update_ISM_ManifestBody",
            "description": "Updates the location of a remote ism_manifest file for a remote asset. Note: you can use /videos/ref:reference_id instead of /videos/video_id ",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Update_ISM_ManifestBody"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Update_ISM_Manifest200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "409": {
            "description": "REFERENCE_ID_IN_USE: The specified reference id is already in use "
          },
          "422": {
            "description": "VALIDATION_ERROR: &quot;remote_url"
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "Update_ISM_Manifest"
      }
    },
    "/accounts/{account_id}/videos/{video_id}/assets/poster/{asset_id}": {
      "delete": {
        "tags": [
          "assetGroup"
        ],
        "summary": "Delete Poster",
        "description": "Deletes a poster file for a remote asset. Note that you can only add one poster for a video. Note: you can use /videos/ref:reference_id instead of /videos/video_id ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud video ID. You can also use ref:reference_id "
          },
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "the asset id "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "Delete_Poster"
      },
      "get": {
        "tags": [
          "assetGroup"
        ],
        "summary": "Get Poster",
        "description": "Gets a poster file for a given video. Note that you can only add one poster for a video. Note: you can use /videos/ref:reference_id instead of /videos/video_id ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud video ID. You can also use ref:reference_id "
          },
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "the asset id "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Get_Poster200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "Get_Poster"
      },
      "patch": {
        "tags": [
          "assetGroup"
        ],
        "summary": "Update Poster",
        "description": "Updates the location of a remote poster file for a remote asset. Note: you can use /videos/ref:reference_id instead of /videos/video_id ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud video ID. You can also use ref:reference_id "
          },
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "id for the asset "
          },
          {
            "in": "body",
            "name": "Update_PosterBody",
            "description": "Updates the location of a remote poster file for a remote asset. Note: you can use /videos/ref:reference_id instead of /videos/video_id ",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Update_PosterBody"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Update_Poster200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "409": {
            "description": "REFERENCE_ID_IN_USE: The specified reference id is already in use "
          },
          "422": {
            "description": "VALIDATION_ERROR: &quot;remote_url"
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "Update_Poster"
      }
    },
    "/accounts/{account_id}/videos/{video_id}/assets/renditions/{asset_id}": {
      "delete": {
        "tags": [
          "assetGroup"
        ],
        "summary": "Delete Rendition",
        "description": "Deletes a rendition for the given video. Note: this operation is only for remote renditions for remote asset videos &mdash; do not use it for renditions created by Video Cloud for ingested videos ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud video ID. You can also use ref:reference_id "
          },
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "the asset id "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "Delete_Rendition"
      },
      "get": {
        "tags": [
          "assetGroup"
        ],
        "summary": "Get Rendition",
        "description": "Gets a specified rendition for a video. Note: you can use /videos/ref:reference_id instead of /videos/video_id ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud video ID. You can also use ref:reference_id "
          },
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "the asset id "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Get_Rendition200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "Get_Rendition"
      },
      "patch": {
        "tags": [
          "assetGroup"
        ],
        "summary": "Update Rendition",
        "description": "Update the location for a remote rendition. Note: you can use /videos/ref:reference_id instead of /videos/video_id ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud video ID. You can also use ref:reference_id "
          },
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "id for the asset "
          },
          {
            "in": "body",
            "name": "Update_RenditionBody",
            "description": "Update the location for a remote rendition. Note: you can use /videos/ref:reference_id instead of /videos/video_id ",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Update_RenditionBody"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Update_Rendition200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable \nMIXED_REMOTE_NOT_ALLOWED: Remote renditions may not be added to ingested videos "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "409": {
            "description": "REFERENCE_ID_IN_USE: The specified reference id is already in use "
          },
          "422": {
            "description": "VALIDATION_ERROR: &quot;remote_url"
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "Update_Rendition"
      }
    },
    "/accounts/{account_id}/videos/{video_id}/assets/thumbnail/{asset_id}": {
      "delete": {
        "tags": [
          "assetGroup"
        ],
        "summary": "Delete Thumbnail",
        "description": "Deletes a thumbnail file for a remote asset. Note that you can only add one thumbnail for a video. Note: you can use /videos/ref:reference_id instead of /videos/video_id ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud video ID. You can also use ref:reference_id "
          },
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "the asset id "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "Delete_Thumbnail"
      },
      "get": {
        "tags": [
          "assetGroup"
        ],
        "summary": "Get Thumbnail",
        "description": "Gets a thumbnail file for a given video. Note that you can only add one thumbnail for a video. Note: you can use /videos/ref:reference_id instead of /videos/video_id ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud video ID. You can also use ref:reference_id "
          },
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "the asset id "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Get_Thumbnail200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "Get_Thumbnail"
      },
      "patch": {
        "tags": [
          "assetGroup"
        ],
        "summary": "Update Thumbnail",
        "description": "Updates the location of a remote thumbnail file for a remote asset. Note: you can use /videos/ref:reference_id instead of /videos/video_id ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud video ID. You can also use ref:reference_id "
          },
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "id for the asset "
          },
          {
            "in": "body",
            "name": "Update_ThumbnailBody",
            "description": "Updates the location of a remote thumbnail file for a remote asset. Note: you can use /videos/ref:reference_id instead of /videos/video_id ",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Update_ThumbnailBody"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Update_Thumbnail200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "409": {
            "description": "REFERENCE_ID_IN_USE: The specified reference id is already in use "
          },
          "422": {
            "description": "VALIDATION_ERROR: &quot;remote_url"
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "Update_Thumbnail"
      }
    },
    "/accounts/{account_id}/videos/{video_id}/assets": {
      "get": {
        "tags": [
          "assetGroup"
        ],
        "summary": "Get Assets",
        "description": "Gets assets for a given video. Note: you can use /videos/ref:reference_id instead of /videos/video_id ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud video ID. You can also use ref:reference_id "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Get_Assets200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "Get_Assets"
      }
    },
    "/accounts/{account_id}/videos/{video_id}/assets/dynamic_renditions": {
      "get": {
        "tags": [
          "assetGroup"
        ],
        "summary": "Get Dynamic Renditions",
        "description": "Gets a list of dynamic renditions for a Dynamic Delivery video. Note: you can use /videos/ref:reference_id instead of /videos/video_id ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud video ID. You can also use ref:reference_id "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Get_Dynamic_Renditions200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "Get_Dynamic_Renditions"
      }
    },
    "/accounts/{account_id}/folders/{folder_id}/videos/{video_id}": {
      "put": {
        "tags": [
          "folderGroup"
        ],
        "summary": "Add Video to Folder",
        "description": "Add a video to a folder ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID "
          },
          {
            "name": "folder_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "the folder ID "
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "the video ID "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "Add_Video_to_Folder"
      },
      "delete": {
        "tags": [
          "folderGroup"
        ],
        "summary": "Remove Video from Folder",
        "description": "Remove a video from a folder ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID "
          },
          {
            "name": "folder_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "the folder ID "
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "the video ID "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "Remove_Video_from_Folder"
      }
    },
    "/accounts/{account_id}/folders": {
      "post": {
        "tags": [
          "folderGroup"
        ],
        "summary": "Create Folder",
        "description": "Create a new folder for the account ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID "
          },
          {
            "in": "body",
            "name": "Create_FolderBody",
            "description": "Create a new folder for the account ",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Create_FolderBody"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Create_Folder200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "Create_Folder"
      },
      "get": {
        "tags": [
          "folderGroup"
        ],
        "summary": "Get Folders",
        "description": "Gets list of folders for the account ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Get_Folders200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "Get_Folders"
      }
    },
    "/accounts/{account_id}/folders/{folder_id}": {
      "delete": {
        "tags": [
          "folderGroup"
        ],
        "summary": "Delete Folder",
        "description": "Delete a folder ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID "
          },
          {
            "name": "folder_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "the folder ID "
          },
          {
            "name": "name",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "name of the folder (must be unique in the account) "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Delete_Folder200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "Delete_Folder"
      },
      "get": {
        "tags": [
          "folderGroup"
        ],
        "summary": "Get Folder Information",
        "description": "Gets information about a folder ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "folder_id",
            "in": "path",
            "required": true,
            "type": "number",
            "description": "Video Cloud folder ID. "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Get_FolderInformation200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "Get_FolderInformation"
      },
      "patch": {
        "tags": [
          "folderGroup"
        ],
        "summary": "Update Folder Name",
        "description": "Update the folder name ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID "
          },
          {
            "name": "folder_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "the folder ID "
          },
          {
            "in": "body",
            "name": "Update_Folder_NameBody",
            "description": "Update the folder name ",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Update_Folder_NameBody"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Update_Folder_Name200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "Update_Folder_Name"
      }
    },
    "/accounts/{account_id}/folders/{folder_id}/videos": {
      "get": {
        "tags": [
          "folderGroup"
        ],
        "summary": "Get Videos in Folder",
        "description": "Gets list of video objects in a folder ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "folder_id",
            "in": "path",
            "required": true,
            "type": "number",
            "description": "the folder ID. "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Get_Videos_in_Folder200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "Get_Videos_in_Folder"
      }
    },
    "/accounts/{account_id}/videos/{video_id}": {
      "patch": {
        "tags": [
          "videoGroup"
        ],
        "summary": "Update Video",
        "description": "Update a video&#39;s metadata note that this API does not ingest any media files - use the Dynamic Ingest API for ingestion. Also note that replacing WebVTT text tracks is a two-step operation - see Add WebVTT Captions for details. ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud video ID. "
          },
          {
            "in": "body",
            "name": "Update_VideoBody",
            "description": "Update a video&#39;s metadata note that this API does not ingest any media files - use the Dynamic Ingest API for ingestion. Also note that replacing WebVTT text tracks is a two-step operation - see Add WebVTT Captions for details. ",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Update_VideoBody"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Update_Video200"
            }
          },
          "400": {
            "description": "AD_CONFIG_INACTIVE: Ad configuration specified in an SSAI request is inactive \nAD_CONFIG_NOT_FOUND: Ad configuration specified in an SSAI request was not found "
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "BAD_VALUE: Spelling error or other use of non-existent field "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "409": {
            "description": "REFERENCE_ID_IN_USE: You attempted to create a video with a reference id that is already in use, or add a reference id to a video which is already used by another video "
          },
          "422": {
            "description": "ILLEGAL_FIELD: Spelling error or other use of non-existent field \nVALIDATION_ERROR: the JSON data was not valid - error messages vary depending on the problem "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: an unknown internal error occurred - this might be a temporary system issue, but if the problem persists, it is likely an uncaught error in the request - contact Support "
          },
          "503": {
            "description": "TIMEOUT: Server likely too busy - try again later "
          },
          "Request Body Fields": {
            "description": "Request Body Fields",
            "schema": {
              "$ref": "#/definitions/Update_VideoRequestBodyFields"
            }
          }
        },
        "operationId": "Update_Video"
      },
      "delete": {
        "tags": [
          "videoGroup"
        ],
        "summary": "Delete Video",
        "description": "Deletes a video ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud video ID (or ref:reference_id) "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "409": {
            "description": "REFERENCES_EXIST: The video is in one or more manual playlists "
          },
          "412": {
            "description": "PRE_CONDITION_FAILED: usually this means the caller provided an ETag that didn&#39;t match the version of the video "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "INTERNAL_ERROR: Error in the backend "
          }
        },
        "operationId": "Delete_Video"
      },
      "get": {
        "tags": [
          "videoGroup"
        ],
        "summary": "Get Video by ID or Reference ID",
        "description": "Gets a video object ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud video ID (or multiple ids separated by commas) (or ref:reference_id - only one reference id) "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Get_Video_by_ID_or_Reference_ID200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          }
        },
        "operationId": "Get_Video_by_ID_or_Reference_ID"
      }
    },
    "/accounts/{account_id}/channels/{channel_name}/members/{affiliate_account_id}": {
      "put": {
        "tags": [
          "mediasharingGroup"
        ],
        "summary": "Add Affiliate",
        "description": "Adds an affiliate to a channel - this is a Master account operation ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "channel_name",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the channel - usually default. "
          },
          {
            "name": "affiliate_account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The affiliate&#39;s account id. "
          },
          {
            "in": "body",
            "name": "Add_AffiliateBody",
            "description": "Adds an affiliate to a channel - this is a Master account operation ",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Add_AffiliateBody"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Add_Affiliate200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is  unavailable - this may be a temporary condition while some kind of processing of the video is in progress, but if the message persists, contact Support "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: Resource not found "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "Add_Affiliate"
      },
      "delete": {
        "tags": [
          "mediasharingGroup"
        ],
        "summary": "Remove Affiliate",
        "description": "Removes an affiliate from a channel - this is a Master account operation ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "channel_name",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the channel - usually default. "
          },
          {
            "name": "affiliate_account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The affiliate&#39;s account id. "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is  unavailable - this may be a temporary condition while some kind of processing of the video is in progress, but if the message persists, contact Support "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: Resource not found "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "Remove_Affiliate"
      }
    },
    "/accounts/{account_id}/contracts/master_account_id": {
      "patch": {
        "tags": [
          "mediasharingGroup"
        ],
        "summary": "Approve Contract",
        "description": "Gets a list of available sharing contracts - this is an Affiliate account operation ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "in": "body",
            "name": "Approve_ContractBody",
            "description": "Gets a list of available sharing contracts - this is an Affiliate account operation ",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Approve_ContractBody"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Approve_Contract200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is  unavailable - this may be a temporary condition while some kind of processing of the video is in progress, but if the message persists, contact Support "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: Resource not found "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "Approve_Contract"
      }
    },
    "/accounts/{account_id}/channels/{channel_name}": {
      "get": {
        "tags": [
          "mediasharingGroup"
        ],
        "summary": "Get Channel Details",
        "description": "Gets settings for a sharing channel (currently there is only one default channel) - this is a Master account operation ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "channel_name",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The channel name. "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Get_Channel_Details200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is  unavailable - this may be a temporary condition while some kind of processing of the video is in progress, but if the message persists, contact Support "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: Resource not found "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "Get_Channel_Details"
      },
      "patch": {
        "tags": [
          "mediasharingGroup"
        ],
        "summary": "Update Channel",
        "description": "Updates settings for a sharing channel (currently there is only one default channel) - this is a Master account operation ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "channel_name",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The channel name. "
          },
          {
            "in": "body",
            "name": "Update_ChannelBody",
            "description": "Updates settings for a sharing channel (currently there is only one default channel) - this is a Master account operation ",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Update_ChannelBody"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Update_Channel200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is  unavailable - this may be a temporary condition while some kind of processing of the video is in progress, but if the message persists, contact Support "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: Resource not found "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "Update_Channel"
      }
    },
    "/accounts/{account_id}/contracts/{master_account_id}": {
      "get": {
        "tags": [
          "mediasharingGroup"
        ],
        "summary": "Get Contract",
        "description": "Gets a contract for a specific Master account - this is an Affiliate account operation ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "master_account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID for the Master account. "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Get_Contract200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is  unavailable - this may be a temporary condition while some kind of processing of the video is in progress, but if the message persists, contact Support "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: Resource not found "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "Get_Contract"
      }
    },
    "/accounts/{account_id}/channels/{channel_name}/members": {
      "get": {
        "tags": [
          "mediasharingGroup"
        ],
        "summary": "List Channel Affiliates",
        "description": "Gets a list of affiliates for a channel - this is a Master account operation ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "channel_name",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the channel - usually default. "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/List_Channel_Affiliates200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is  unavailable - this may be a temporary condition while some kind of processing of the video is in progress, but if the message persists, contact Support "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: Resource not found "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "List_Channel_Affiliates"
      }
    },
    "/accounts/{account_id}/channels": {
      "get": {
        "tags": [
          "mediasharingGroup"
        ],
        "summary": "List Channels",
        "description": "Gets a list of channels (currently there is only one default channel) - this is a Master account operation ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/List_Channels200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is  unavailable - this may be a temporary condition while some kind of processing of the video is in progress, but if the message persists, contact Support "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: Resource not found "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "List_Channels"
      }
    },
    "/accounts/{account_id}/contracts": {
      "get": {
        "tags": [
          "mediasharingGroup"
        ],
        "summary": "List Contracts",
        "description": "Gets a list of available sharing contracts - this is an Affiliate account operation ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/List_Contracts200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is  unavailable - this may be a temporary condition while some kind of processing of the video is in progress, but if the message persists, contact Support "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: Resource not found "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "List_Contracts"
      }
    },
    "/accounts/{account_id}/videos/{video_id}/shares": {
      "get": {
        "tags": [
          "mediasharingGroup"
        ],
        "summary": "List Shares",
        "description": "Lists the existing shares for an account - this is a Master account operation - do this before sharing to insure that you are not re-sharing to an affiliate, which would overwrite any affiliate metadata changes ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud video ID. "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/List_Shares200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is  unavailable - this may be a temporary condition while some kind of processing of the video is in progress, but if the message persists, contact Support "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: Resource not found "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "List_Shares"
      },
      "post": {
        "tags": [
          "mediasharingGroup"
        ],
        "summary": "Share Video",
        "description": "Shares a video to one or more affiliates - this is an Master account operation - if the video has already been shared to an affiliate, this operation will re-share it and overwrite any affiliate metadata changes ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud video ID. "
          },
          {
            "in": "body",
            "name": "Share_VideoBody",
            "description": "Shares a video to one or more affiliates - this is an Master account operation - if the video has already been shared to an affiliate, this operation will re-share it and overwrite any affiliate metadata changes ",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Share_VideoBody"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Share_Video200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is  unavailable - this may be a temporary condition while some kind of processing of the video is in progress, but if the message persists, contact Support "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: Resource not found "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "Share_Video"
      }
    },
    "/accounts/{account_id}/videos/{video_id}/shares/{affiliate_account_id}": {
      "delete": {
        "tags": [
          "mediasharingGroup"
        ],
        "summary": "Unshare Video",
        "description": "Unshares a video with a specific affiliate - this is an Master account operation - do this before sharing to insure that you are not re-sharing to an affiliate, which would overwrite any affiliate metadata changes ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud video ID. "
          },
          {
            "name": "affiliate_account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "affiliate account id to remove the shared video from. "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is  unavailable - this may be a temporary condition while some kind of processing of the video is in progress, but if the message persists, contact Support "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: Resource not found "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "Unshare_Video"
      }
    },
    "/accounts/{account_id}/subscriptions": {
      "post": {
        "tags": [
          "notificationGroup"
        ],
        "summary": "Create Subscription",
        "description": "Establishes up to 10 endpoints that video changes should be sent to. Any change in video metadata will trigger a video change event and a notification &mdash; changes to assets used by the video will not trigger change events. ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID "
          },
          {
            "in": "body",
            "name": "Create_SubscriptionBody",
            "description": "Establishes up to 10 endpoints that video changes should be sent to. Any change in video metadata will trigger a video change event and a notification &mdash; changes to assets used by the video will not trigger change events. ",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Create_SubscriptionBody"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Create_Subscription200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "422": {
            "description": "Unprocessable_Entity: 1) You already have a subscription for the video-change event that delivers to that address; 2) the endpoint or events field is missing from the request; 3) you already have 10 subscriptions to this event "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "Create_Subscription"
      },
      "get": {
        "tags": [
          "notificationGroup"
        ],
        "summary": "Get Subscriptions List",
        "description": "Get a list of all notification subscriptions for the account ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Get_Subscriptions_List200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "Get_Subscriptions_List"
      }
    },
    "/accounts/{account_id}/subscriptions/{subscription_id}": {
      "delete": {
        "tags": [
          "notificationGroup"
        ],
        "summary": "Delete Subscription",
        "description": "Delete a notification subscription for the account ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "subscription_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "the subscription ID. "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "Delete_Subscription"
      },
      "get": {
        "tags": [
          "notificationGroup"
        ],
        "summary": "Get Subscription",
        "description": "Get a notification subscription for the account ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "subscription_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "the subscription ID. "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Get_Subscription200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "Get_Subscription"
      }
    },
    "/accounts/{account_id}/playlists": {
      "post": {
        "tags": [
          "playlistGroup"
        ],
        "summary": "Create Playlist",
        "description": "Creates a new playlist ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "in": "body",
            "name": "Create_PlaylistBody",
            "description": "Creates a new playlist ",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Create_PlaylistBody"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Create_Playlist200"
            }
          },
          "400": {
            "description": "BAD_VALUE: The JSON could not be parsed "
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "409": {
            "description": "REFERENCE_ID_IN_USE: The specified reference id is already in use "
          },
          "422": {
            "description": "ILLEGAL_FIELD: Spelling error or use of non-existent field "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          }
        },
        "operationId": "Create_Playlist"
      },
      "get": {
        "tags": [
          "playlistGroup"
        ],
        "summary": "Get Playlists",
        "description": "Gets a page of playlist objects for the account ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Get_Playlists200"
            }
          },
          "400": {
            "description": "INVALID_SORT: sort parameter specified and invalid field \nINVALID_SEARCH: search string invalid (may not have been URI-encoded) "
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed - check to make sure your client credentials were correct for the access token "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          }
        },
        "operationId": "Get_Playlists"
      }
    },
    "/accounts/{account_id}/playlists/{playlist_id}": {
      "delete": {
        "tags": [
          "playlistGroup"
        ],
        "summary": "Delete Playlist",
        "description": "Deletes a playlist ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "playlist_id",
            "in": "path",
            "required": true,
            "type": "number",
            "description": "Video Cloud playlist ID. "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "400": {
            "description": "INVALID_SORT: sort parameter specified and invalid field \nINVALID_SEARCH: search string invalid (may not have been URI-encoded) "
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed - check to make sure your client credentials were correct for the access token "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          }
        },
        "operationId": "Delete_Playlists"
      },
      "get": {
        "tags": [
          "playlistGroup"
        ],
        "summary": "Get Playlist by ID",
        "description": "Gets a playlist object for the account ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "playlist_id",
            "in": "path",
            "required": true,
            "type": "number",
            "description": "Video Cloud playlist ID, or multiple playlist ids separated by commas. "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Get_Playlist_by_ID200"
            }
          },
          "400": {
            "description": "INVALID_SORT: sort parameter specified and invalid field \nINVALID_SEARCH: search string invalid (may not have been URI-encoded) "
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed - check to make sure your client credentials were correct for the access token "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          }
        },
        "operationId": "Get_Playlist_by_ID"
      },
      "patch": {
        "tags": [
          "playlistGroup"
        ],
        "summary": "Update Playlist",
        "description": "Updates a playlist for the account ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "in": "body",
            "name": "Update_PlaylistBody",
            "description": "Updates a playlist for the account ",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Update_PlaylistBody"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Update_Playlist200"
            }
          },
          "400": {
            "description": "BAD_VALUE: The JSON could not be parsed "
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "409": {
            "description": "REFERENCE_ID_IN_USE: The specified reference id is already in use "
          },
          "422": {
            "description": "ILLEGAL_FIELD: Spelling error or use of non-existent field "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          }
        },
        "operationId": "Update_Playlist"
      }
    },
    "/accounts/{account_id}/counts/playlists": {
      "get": {
        "tags": [
          "playlistGroup"
        ],
        "summary": "Get Playlist Count",
        "description": "Gets a count of playlists in the account for the account ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Get_Playlist_Count200"
            }
          },
          "400": {
            "description": "INVALID_SORT: sort parameter specified and invalid field \nINVALID_SEARCH: search string invalid (may not have been URI-encoded) "
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed - check to make sure your client credentials were correct for the access token "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          }
        },
        "operationId": "Get_Playlist_Count"
      }
    },
    "/accounts/{account_id}/counts/playlists/{playlist_id}/videos": {
      "get": {
        "tags": [
          "playlistGroup"
        ],
        "summary": "Get Video Count in Playlist",
        "description": "Gets a count of the videos in a playlist for the account ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "playlist_id",
            "in": "path",
            "required": true,
            "type": "number",
            "description": "Video Cloud playlist ID. "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Get_Video_Count_in_Playlist200"
            }
          },
          "400": {
            "description": "INVALID_SORT: sort parameter specified and invalid field \nINVALID_SEARCH: search string invalid (may not have been URI-encoded) "
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed - check to make sure your client credentials were correct for the access token "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          }
        },
        "operationId": "Get_Video_Count_in_Playlist"
      }
    },
    "/accounts/{account_id}/playlists/{playlist_id}/videos": {
      "get": {
        "tags": [
          "playlistGroup"
        ],
        "summary": "Get Videos in Playlist",
        "description": "Gets the video objects for videos in a playlist for the account ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "playlist_id",
            "in": "path",
            "required": true,
            "type": "number",
            "description": "Video Cloud playlist ID. "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Get_Videos_in_Playlist200"
            }
          },
          "400": {
            "description": "INVALID_SORT: sort parameter specified and invalid field \nINVALID_SEARCH: search string invalid (may not have been URI-encoded) "
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed - check to make sure your client credentials were correct for the access token "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          }
        },
        "operationId": "Get_Videos_in_Playlist"
      }
    },
    "/accounts/{account_id}/videos": {
      "post": {
        "tags": [
          "videoGroup"
        ],
        "summary": "Create Video",
        "description": "Create a new video object in the account. Note: this does not ingest a video file - use the Dynamic Ingest API for ingestion ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "in": "body",
            "name": "Create_VideoBody",
            "description": "Create a new video object in the account. Note: this does not ingest a video file - use the Dynamic Ingest API for ingestion ",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Create_VideoBody"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Create_Video200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "BAD_VALUE: Spelling error or other use of non-existent field "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "409": {
            "description": "REFERENCE_ID_IN_USE: You attempted to create a video with a reference id that is already in use, or add a reference id to a video which is already used by another video "
          },
          "422": {
            "description": "ILLEGAL_FIELD: Spelling error or other use of non-existent field "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          }
        },
        "operationId": "Create_Video"
      },
      "get": {
        "tags": [
          "videoGroup"
        ],
        "summary": "Get Videos",
        "description": "Gets a page of video objects ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Get_Videos200"
            }
          },
          "400": {
            "description": "INVALID_SORT: sort parameter specified and invalid field \nILLEGAL_QUERY: The search string syntax was invalid - example"
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is  unavailable - this may be a temporary condition while some kind of processing of the video is in progress, but if the message persists, contact Support "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: Resource not found "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "Get_Videos"
      }
    },
    "/accounts/{account_id}/videos/{video_id}/digital_master": {
      "delete": {
        "tags": [
          "videoGroup"
        ],
        "summary": "Delete Digital Master",
        "description": "Deletes the archived digital master for a video. Be sure to read Digital Master Delete API before using this operation to understand the implications. ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud video ID. You can also use ref:reference_id "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "Delete_Digital_Master"
      },
      "get": {
        "tags": [
          "videoGroup"
        ],
        "summary": "Get Digital Master Info",
        "description": "Gets the stored digital master for a video, if any ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud video ID (or ref:reference_id). "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Get_Digital_Master_Info200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          }
        },
        "operationId": "Get_Digital_Master_Info"
      }
    },
    "/accounts/{account_id}/videos/{video_id}/audio_tracks/audio_track_id": {
      "delete": {
        "tags": [
          "videoGroup"
        ],
        "summary": "Delete Video Audio Track",
        "description": "Deletes one audio track for a video by its ID Dynamic Delivery only ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID "
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud video ID (or ref:reference_id) "
          },
          {
            "name": "audio_track_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "the id for the audio track, formed as &#39;language_variant&#39; "
          },
          {
            "name": "language",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Language code for the audio track from the subtags in http://www.iana.org/assignments/language-subtag-registry/language-subtag-registry (default can be set for the account by contacting Brightcove Support) Dynanic Delivery only "
          },
          {
            "name": "is_default",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "whether this is the default audio track for the video Dynanic Delivery only "
          },
          {
            "name": "variant",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "the type of audio track (default can be set for the account by contacting Brightcove Support) Dynanic Delivery only "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          }
        },
        "operationId": "Delete_Video_Audio_Track"
      },
      "get": {
        "tags": [
          "videoGroup"
        ],
        "summary": "Get Video Audio Track",
        "description": "Gets one audio track for a video by its ID Dynamic Delivery only ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID "
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud video ID (or ref:reference_id) "
          },
          {
            "name": "audio_track_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "the id for the audio track, formed as &#39;language_variant&#39; "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Get_Video_Audio_Track200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          }
        },
        "operationId": "Get_Video_Audio_Track"
      },
      "patch": {
        "tags": [
          "videoGroup"
        ],
        "summary": "Update Video Audio Track",
        "description": "Updates audio track metadata for a video Dynamic Delivery only ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID "
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud video ID (or ref:reference_id) "
          },
          {
            "in": "body",
            "name": "Update_Video_Audio_TrackBody",
            "description": "Updates audio track metadata for a video Dynamic Delivery only ",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Update_Video_Audio_TrackBody"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Update_Video_Audio_Track200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          }
        },
        "operationId": "Update_Video_Audio_Track"
      }
    },
    "/accounts/{account_id}/video_fields": {
      "get": {
        "tags": [
          "videoGroup"
        ],
        "summary": "Get Custom Fields",
        "description": "Gets a list of custom fields for the account ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/custom_fields"
            }
          },
          "400": {
            "description": "REFERENCES_EXIST: You are attempting to delete a video that is included in at least one playlist \nSHARED_VIDEO: Deletion of shared videos is not yet supported "
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "Get_Custom_Fields"
      }
    },
    "/accounts/{account_id}/videos/{video_id}/references": {
      "get": {
        "tags": [
          "videoGroup"
        ],
        "summary": "Get Playlists for Video",
        "description": "Gets an array of Manual (EXPLICIT) playlists that contain a video object for the account ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud video ID (or ref:reference_id). "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Get_Playlists_for_Video200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          }
        },
        "operationId": "Get_Playlists_for_Video"
      },
      "delete": {
        "tags": [
          "videoGroup"
        ],
        "summary": "Remove Video from all Playlists",
        "description": "Removes the video from all EXPLICIT playlists for the account ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud video ID (or ref:reference_id). "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens "
          }
        ],
        "responses": {
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          }
        },
        "operationId": "Remove_Video_from_all_Playlists"
      }
    },
    "/accounts/{account_id}/videos/{video_id}/ingest_jobs/{job_id}": {
      "get": {
        "tags": [
          "videoGroup"
        ],
        "summary": "Get Status of Ingest Job",
        "description": "Get the status of an ingest job associated with a video (including the orginal ingestion, replacing and retranscoding the video) ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud video ID (or ref:reference_id) "
          },
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "the job ID for the ingest job "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Get_Status_of_Ingest_Job200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "INTERNAL_ERROR: Error in the backend "
          }
        },
        "operationId": "Get_Status_of_Ingest_Job"
      }
    },
    "/accounts/{account_id}/videos/{video_id}/ingest_jobs": {
      "get": {
        "tags": [
          "videoGroup"
        ],
        "summary": "Get Status of Ingest Jobs",
        "description": "Get the status of all ingest jobs associated with a video (including the orginal ingestion, replacing and retranscoding the video). NOTE: this operation only works for videos that were ingested using Dynamic Delivery profiles. ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud video ID (or ref:reference_id) "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Get_Status_of_Ingest_Jobs200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "INTERNAL_ERROR: Error in the backend "
          }
        },
        "operationId": "Get_Status_of_Ingest_Jobs"
      }
    },
    "/accounts/{account_id}/videos/{video_id}/audio_tracks": {
      "get": {
        "tags": [
          "videoGroup"
        ],
        "summary": "Get Video Audio Tracks",
        "description": "Gets the audio tracks for a video Dynamic Delivery only ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud video ID (or ref:reference_id). "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Get_Video_Audio_Tracks200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          }
        },
        "operationId": "Get_Video_Audio_Tracks"
      }
    },
    "/accounts/{account_id}/counts/videos": {
      "get": {
        "tags": [
          "videoGroup"
        ],
        "summary": "Get Video Count",
        "description": "Gets count of videos for the account or a search ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Get_Video_Count200"
            }
          },
          "400": {
            "description": "INVALID_SORT: sort parameter specified and invalid field "
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "403": {
            "description": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          },
          "500": {
            "description": "UNKNOWN: Issue in Brightcove system; try again later. \nTIMEOUT: Server likely too busy; try again later. "
          }
        },
        "operationId": "Get_Video_Count"
      }
    },
    "/accounts/{account_id}/videos/{video_id}/images": {
      "get": {
        "tags": [
          "videoGroup"
        ],
        "summary": "Get Video Images",
        "description": "Gets the images for a video ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud video ID (or ref:reference_id). "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/images"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          }
        },
        "operationId": "Get_Video_Images"
      }
    },
    "/accounts/{account_id}/videos/{video_id}/sources": {
      "get": {
        "tags": [
          "videoGroup"
        ],
        "summary": "Get Video Sources",
        "description": "Gets an array of sources (renditions) for a video ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID. "
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud video ID (or ref:reference_id). "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Get_Video_Sources200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint "
          },
          "429": {
            "description": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second "
          }
        },
        "operationId": "Get_Video_Sources"
      }
    }
  },
  "definitions": {
    "Drm": {
      "properties": {
        "state": {
          "type":"string"
        },
        "packager_version": {
          "type":"string"
        },
        "metadata_cdn_origin_id": {
          "type":"string"
        },
        "metadata_sharded_directory": {
          "type":"string"
        }
      }
    },
    "Hds": {
      "properties": {
        "cdn_origin_id": {
          "type":"string"
        },
        "sharded_directory": {
          "type":"string"
        },
        "bcfs_provider": {
          "type":"string"
        },
        "bcfs_key": {
          "type":"string"
        },
        "filename": {
          "type":"string"
        }
      }
    },
    "Hls": {
      "properties": {
        "encrypted": {
          "type":"boolean"
        },
        "segments": {
          "type":"array",
          "items": {
            "$ref": "#/definitions/HlsSegment"
          }
        }
      }
    },
    "HlsSegment": {
      "properties": {
        "d": {
          "type":"number"
        },
        "filename": {
          "type":"string"
        },
        "encryption_key": {
          "type":"string"
        }
      }
    },
    "URL Parameters": {
      "properties": {
        "limit": {
          "type": "number",
          "description": "number of folders to return "
        },
        "offset": {
          "type": "number",
          "description": "number of folders to skip in the response "
        },
        "q": {
          "type": "string",
          "description": "search string - seesearch guide for details "
        },
        "sort": {
          "type": "string",
          "description": "field to sort results by; if absent and there is a search string, results are sorted by relevance or if there is no search string, results are sorted by updated_at descending - note: to sort in descending order, preface the field name with a minus (-) sign "
        }
      },
      "required": []
    },
    "Add_CaptionBody": {
      "properties": {
        "reference_id": {
          "type": "string",
          "description": "video reference id (must be unique within the account) "
        },
        "remote_url": {
          "type": "string",
          "description": "the url for a remote asset (not applicable to ingested assets) "
        }
      },
      "required": [
        "remote_url"
      ]
    },
    "Add_Caption200": {
      "properties": {
        "id": {
          "type": "string",
          "description": "the asset id "
        },
        "audio_only": {
          "type": "boolean",
          "description": "not applicable to captions "
        },
        "complete": {
          "type": "boolean",
          "description": "whether processing is complete for the asset (will be true for remote assets if a remote_url is supplied) "
        },
        "controller_type": {
          "type": "string",
          "description": "the controller type for ingested renditions (not applicable to remote renditions or other types of assets) "
        },
        "current_filename": {
          "type": "string",
          "description": "the filename for an ingested asset in the Video Cloud system (not applicable to remote assets) "
        },
        "cdn_origin_id": {
          "type": "string",
          "description": "an internally used id (not applicable to remote assets) "
        },
        "name": {
          "type": "string",
          "description": "asset name "
        },
        "progressive_download": {
          "type": "boolean",
          "description": "whether ingested rendition is available by progressive download (not applicable to other asset types or remote renditions) "
        },
        "reference_id": {
          "type": "string",
          "description": "video reference id (must be unique within the account) "
        },
        "remote_url": {
          "type": "string",
          "description": "the url for a remote asset (not applicable to ingested assets) "
        },
        "remote_stream_name": {
          "type": "string",
          "description": "name for remote streams (not applicable to asset types other than rendition) "
        },
        "size": {
          "type": "number",
          "description": "the size of the asset in bytes (integer) "
        },
        "type": {
          "type": "string",
          "description": "the type of the asset "
        },
        "updated_at": {
          "type": "datestring",
          "description": "when the video was last modified "
        },
        "uploaded_at": {
          "type": "datestring",
          "description": "when the asset was added to the video in Video Cloud "
        }
      },
      "required": [
        "id",
        "audio_only",
        "complete",
        "controller_type",
        "current_filename",
        "cdn_origin_id",
        "name",
        "progressive_download",
        "reference_id",
        "remote_url",
        "remote_stream_name",
        "size",
        "type",
        "updated_at",
        "uploaded_at"
      ]
    },
    "Get_Caption_List200": {
      "properties": {
        "id": {
          "type": "string",
          "description": "the asset id "
        },
        "audio_only": {
          "type": "boolean",
          "description": "not applicable to captions "
        },
        "complete": {
          "type": "boolean",
          "description": "whether processing is complete for the asset (will be true for remote assets if a remote_url is supplied) "
        },
        "controller_type": {
          "type": "string",
          "description": "the controller type for ingested renditions (not applicable to remote renditions or other types of assets) "
        },
        "current_filename": {
          "type": "string",
          "description": "the filename for an ingested asset in the Video Cloud system (not applicable to remote assets) "
        },
        "cdn_origin_id": {
          "type": "string",
          "description": "an internally used id (not applicable to remote assets) "
        },
        "name": {
          "type": "string",
          "description": "asset name "
        },
        "progressive_download": {
          "type": "boolean",
          "description": "whether ingested rendition is available by progressive download (not applicable to other asset types or remote renditions) "
        },
        "reference_id": {
          "type": "string",
          "description": "video reference id (must be unique within the account) "
        },
        "remote_url": {
          "type": "string",
          "description": "the url for a remote asset (not applicable to ingested assets) "
        },
        "remote_stream_name": {
          "type": "string",
          "description": "name for remote streams (not applicable to asset types other than rendition) "
        },
        "size": {
          "type": "number",
          "description": "the size of the asset in bytes (integer) "
        },
        "type": {
          "type": "string",
          "description": "the type of the asset "
        },
        "updated_at": {
          "type": "datestring",
          "description": "when the video was last modified "
        },
        "uploaded_at": {
          "type": "datestring",
          "description": "when the asset was added to the video in Video Cloud "
        }
      },
      "required": [
        "id",
        "audio_only",
        "complete",
        "controller_type",
        "current_filename",
        "cdn_origin_id",
        "name",
        "progressive_download",
        "reference_id",
        "remote_url",
        "remote_stream_name",
        "size",
        "type",
        "updated_at",
        "uploaded_at"
      ]
    },
    "Add_DASH_ManifestBody": {
      "properties": {
        "reference_id": {
          "type": "string",
          "description": "video reference id (must be unique within the account) "
        },
        "remote_url": {
          "type": "string",
          "description": "the url for a remote asset (not applicable to ingested assets) "
        },
        "video_duration": {
          "type": "number",
          "description": "the duration of the video in seconds "
        }
      },
      "required": [
        "remote_url"
      ]
    },
    "Add_DASH_Manifest200": {
      "properties": {
        "id": {
          "type": "string",
          "description": "the asset id "
        },
        "audio_only": {
          "type": "boolean",
          "description": "not applicable to dash_manifests "
        },
        "complete": {
          "type": "boolean",
          "description": "whether processing is complete for the asset (will be true for remote assets if a remote_url is supplied) "
        },
        "controller_type": {
          "type": "string",
          "description": "the controller type for ingested renditions (not applicable to remote renditions or other types of assets) "
        },
        "current_filename": {
          "type": "string",
          "description": "the filename for an ingested asset in the Video Cloud system (not applicable to remote assets) "
        },
        "cdn_origin_id": {
          "type": "string",
          "description": "an internally used id (not applicable to remote assets) "
        },
        "name": {
          "type": "string",
          "description": "asset name "
        },
        "progressive_download": {
          "type": "boolean",
          "description": "whether ingested rendition is available by progressive download (not applicable to other asset types or remote renditions) "
        },
        "reference_id": {
          "type": "string",
          "description": "video reference id (must be unique within the account) "
        },
        "remote_url": {
          "type": "string",
          "description": "the url for a remote asset (not applicable to ingested assets) "
        },
        "remote_stream_name": {
          "type": "string",
          "description": "name for remote streams (not applicable to asset types other than rendition) "
        },
        "size": {
          "type": "number",
          "description": "the size of the asset in bytes (integer) "
        },
        "type": {
          "type": "string",
          "description": "the type of the asset "
        },
        "updated_at": {
          "type": "datestring",
          "description": "when the video was last modified "
        },
        "uploaded_at": {
          "type": "datestring",
          "description": "when the asset was added to the video in Video Cloud "
        },
        "video_duration": {
          "type": "number",
          "description": "video duration in seconds (present if you included it when you created the asset) "
        }
      },
      "required": [
        "id",
        "audio_only",
        "complete",
        "controller_type",
        "current_filename",
        "cdn_origin_id",
        "name",
        "progressive_download",
        "reference_id",
        "remote_url",
        "remote_stream_name",
        "size",
        "type",
        "updated_at",
        "uploaded_at",
        "video_duration"
      ]
    },
    "Get_DASH_Manifest_List200": {
      "properties": {
        "id": {
          "type": "string",
          "description": "the asset id "
        },
        "audio_only": {
          "type": "boolean",
          "description": "not applicable to dash_manifests "
        },
        "complete": {
          "type": "boolean",
          "description": "whether processing is complete for the asset (will be true for remote assets if a remote_url is supplied) "
        },
        "controller_type": {
          "type": "string",
          "description": "the controller type for ingested renditions (not applicable to remote renditions or other types of assets) "
        },
        "current_filename": {
          "type": "string",
          "description": "the filename for an ingested asset in the Video Cloud system (not applicable to remote assets) "
        },
        "cdn_origin_id": {
          "type": "string",
          "description": "an internally used id (not applicable to remote assets) "
        },
        "name": {
          "type": "string",
          "description": "asset name "
        },
        "progressive_download": {
          "type": "boolean",
          "description": "whether ingested rendition is available by progressive download (not applicable to other asset types or remote renditions) "
        },
        "reference_id": {
          "type": "string",
          "description": "video reference id (must be unique within the account) "
        },
        "remote_url": {
          "type": "string",
          "description": "the url for a remote asset (not applicable to ingested assets) "
        },
        "remote_stream_name": {
          "type": "string",
          "description": "name for remote streams (not applicable to asset types other than rendition) "
        },
        "size": {
          "type": "number",
          "description": "the size of the asset in bytes (integer) "
        },
        "type": {
          "type": "string",
          "description": "the type of the asset "
        },
        "updated_at": {
          "type": "datestring",
          "description": "when the video was last modified "
        },
        "uploaded_at": {
          "type": "datestring",
          "description": "when the asset was added to the video in Video Cloud "
        },
        "video_duration": {
          "type": "number",
          "description": "video duration in seconds (present if you included it when you created the asset) "
        }
      },
      "required": [
        "id",
        "audio_only",
        "complete",
        "controller_type",
        "current_filename",
        "cdn_origin_id",
        "name",
        "progressive_download",
        "reference_id",
        "remote_url",
        "remote_stream_name",
        "size",
        "type",
        "updated_at",
        "uploaded_at",
        "video_duration"
      ]
    },
    "Add_HDS_ManifestBody": {
      "properties": {
        "reference_id": {
          "type": "string",
          "description": "video reference id (must be unique within the account) "
        },
        "remote_url": {
          "type": "string",
          "description": "the url for a remote asset (not applicable to ingested assets) "
        },
        "video_duration": {
          "type": "number",
          "description": "the duration of the video in seconds "
        }
      },
      "required": [
        "remote_url"
      ]
    },
    "Add_HDS_Manifest200": {
      "properties": {
        "id": {
          "type": "string",
          "description": "the asset id "
        },
        "audio_only": {
          "type": "boolean",
          "description": "not applicable to hds_manifests "
        },
        "complete": {
          "type": "boolean",
          "description": "whether processing is complete for the asset (will be true for remote assets if a remote_url is supplied) "
        },
        "controller_type": {
          "type": "string",
          "description": "the controller type for ingested renditions (not applicable to remote renditions or other types of assets) "
        },
        "current_filename": {
          "type": "string",
          "description": "the filename for an ingested asset in the Video Cloud system (not applicable to remote assets) "
        },
        "cdn_origin_id": {
          "type": "string",
          "description": "an internally used id (not applicable to remote assets) "
        },
        "name": {
          "type": "string",
          "description": "asset name "
        },
        "progressive_download": {
          "type": "boolean",
          "description": "whether ingested rendition is available by progressive download (not applicable to other asset types or remote renditions) "
        },
        "reference_id": {
          "type": "string",
          "description": "video reference id (must be unique within the account) "
        },
        "remote_url": {
          "type": "string",
          "description": "the url for a remote asset (not applicable to ingested assets) "
        },
        "remote_stream_name": {
          "type": "string",
          "description": "name for remote streams (not applicable to asset types other than rendition) "
        },
        "size": {
          "type": "number",
          "description": "the size of the asset in bytes (integer) "
        },
        "type": {
          "type": "string",
          "description": "the type of the asset "
        },
        "updated_at": {
          "type": "datestring",
          "description": "when the video was last modified "
        },
        "uploaded_at": {
          "type": "datestring",
          "description": "when the asset was added to the video in Video Cloud "
        },
        "video_duration": {
          "type": "number",
          "description": "video duration in seconds (present if you included it when you created the asset) "
        }
      },
      "required": [
        "id",
        "audio_only",
        "complete",
        "controller_type",
        "current_filename",
        "cdn_origin_id",
        "name",
        "progressive_download",
        "reference_id",
        "remote_url",
        "remote_stream_name",
        "size",
        "type",
        "updated_at",
        "uploaded_at",
        "video_duration"
      ]
    },
    "Get_HDS_Manifest_List200": {
      "properties": {
        "id": {
          "type": "string",
          "description": "the asset id "
        },
        "audio_only": {
          "type": "boolean",
          "description": "not applicable to hds_manifests "
        },
        "complete": {
          "type": "boolean",
          "description": "whether processing is complete for the asset (will be true for remote assets if a remote_url is supplied) "
        },
        "controller_type": {
          "type": "string",
          "description": "the controller type for ingested renditions (not applicable to remote renditions or other types of assets) "
        },
        "current_filename": {
          "type": "string",
          "description": "the filename for an ingested asset in the Video Cloud system (not applicable to remote assets) "
        },
        "cdn_origin_id": {
          "type": "string",
          "description": "an internally used id (not applicable to remote assets) "
        },
        "name": {
          "type": "string",
          "description": "asset name "
        },
        "progressive_download": {
          "type": "boolean",
          "description": "whether ingested rendition is available by progressive download (not applicable to other asset types or remote renditions) "
        },
        "reference_id": {
          "type": "string",
          "description": "video reference id (must be unique within the account) "
        },
        "remote_url": {
          "type": "string",
          "description": "the url for a remote asset (not applicable to ingested assets) "
        },
        "remote_stream_name": {
          "type": "string",
          "description": "name for remote streams (not applicable to asset types other than rendition) "
        },
        "size": {
          "type": "number",
          "description": "the size of the asset in bytes (integer) "
        },
        "type": {
          "type": "string",
          "description": "the type of the asset "
        },
        "updated_at": {
          "type": "datestring",
          "description": "when the video was last modified "
        },
        "uploaded_at": {
          "type": "datestring",
          "description": "when the asset was added to the video in Video Cloud "
        },
        "video_duration": {
          "type": "number",
          "description": "video duration in seconds (present if you included it when you created the asset) "
        }
      },
      "required": [
        "id",
        "audio_only",
        "complete",
        "controller_type",
        "current_filename",
        "cdn_origin_id",
        "name",
        "progressive_download",
        "reference_id",
        "remote_url",
        "remote_stream_name",
        "size",
        "type",
        "updated_at",
        "uploaded_at",
        "video_duration"
      ]
    },
    "Add_HLS_ManifestBody": {
      "properties": {
        "reference_id": {
          "type": "string",
          "description": "video reference id (must be unique within the account) "
        },
        "remote_url": {
          "type": "string",
          "description": "the url for a remote asset (not applicable to ingested assets) "
        },
        "video_duration": {
          "type": "number",
          "description": "the duration of the video in seconds "
        }
      },
      "required": [
        "remote_url"
      ]
    },
    "Add_HLS_Manifest200": {
      "properties": {
        "id": {
          "type": "string",
          "description": "the asset id "
        },
        "audio_only": {
          "type": "boolean",
          "description": "not applicable to hls_manifests "
        },
        "complete": {
          "type": "boolean",
          "description": "whether processing is complete for the asset (will be true for remote assets if a remote_url is supplied) "
        },
        "controller_type": {
          "type": "string",
          "description": "the controller type for ingested renditions (not applicable to remote renditions or other types of assets) "
        },
        "current_filename": {
          "type": "string",
          "description": "the filename for an ingested asset in the Video Cloud system (not applicable to remote assets) "
        },
        "cdn_origin_id": {
          "type": "string",
          "description": "an internally used id (not applicable to remote assets) "
        },
        "name": {
          "type": "string",
          "description": "asset name "
        },
        "progressive_download": {
          "type": "boolean",
          "description": "whether ingested rendition is available by progressive download (not applicable to other asset types or remote renditions) "
        },
        "reference_id": {
          "type": "string",
          "description": "video reference id (must be unique within the account) "
        },
        "remote_url": {
          "type": "string",
          "description": "the url for a remote asset (not applicable to ingested assets) "
        },
        "remote_stream_name": {
          "type": "string",
          "description": "name for remote streams (not applicable to asset types other than rendition) "
        },
        "size": {
          "type": "number",
          "description": "the size of the asset in bytes (integer) "
        },
        "type": {
          "type": "string",
          "description": "the type of the asset "
        },
        "updated_at": {
          "type": "datestring",
          "description": "when the video was last modified "
        },
        "uploaded_at": {
          "type": "datestring",
          "description": "when the asset was added to the video in Video Cloud "
        },
        "video_duration": {
          "type": "number",
          "description": "video duration in seconds (present if you included it when you created the asset) "
        }
      },
      "required": [
        "id",
        "audio_only",
        "complete",
        "controller_type",
        "current_filename",
        "cdn_origin_id",
        "name",
        "progressive_download",
        "reference_id",
        "remote_url",
        "remote_stream_name",
        "size",
        "type",
        "updated_at",
        "uploaded_at",
        "video_duration"
      ]
    },
    "Get_HLS_Manifest_List200": {
      "properties": {
        "id": {
          "type": "string",
          "description": "the asset id "
        },
        "audio_only": {
          "type": "boolean",
          "description": "not applicable to hls_manifests "
        },
        "complete": {
          "type": "boolean",
          "description": "whether processing is complete for the asset (will be true for remote assets if a remote_url is supplied) "
        },
        "controller_type": {
          "type": "string",
          "description": "the controller type for ingested renditions (not applicable to remote renditions or other types of assets) "
        },
        "current_filename": {
          "type": "string",
          "description": "the filename for an ingested asset in the Video Cloud system (not applicable to remote assets) "
        },
        "cdn_origin_id": {
          "type": "string",
          "description": "an internally used id (not applicable to remote assets) "
        },
        "name": {
          "type": "string",
          "description": "asset name "
        },
        "progressive_download": {
          "type": "boolean",
          "description": "whether ingested rendition is available by progressive download (not applicable to other asset types or remote renditions) "
        },
        "reference_id": {
          "type": "string",
          "description": "video reference id (must be unique within the account) "
        },
        "remote_url": {
          "type": "string",
          "description": "the url for a remote asset (not applicable to ingested assets) "
        },
        "remote_stream_name": {
          "type": "string",
          "description": "name for remote streams (not applicable to asset types other than rendition) "
        },
        "size": {
          "type": "number",
          "description": "the size of the asset in bytes (integer) "
        },
        "type": {
          "type": "string",
          "description": "the type of the asset "
        },
        "updated_at": {
          "type": "datestring",
          "description": "when the video was last modified "
        },
        "uploaded_at": {
          "type": "datestring",
          "description": "when the asset was added to the video in Video Cloud "
        },
        "video_duration": {
          "type": "number",
          "description": "video duration in seconds (present if you included it when you created the asset) "
        }
      },
      "required": [
        "id",
        "audio_only",
        "complete",
        "controller_type",
        "current_filename",
        "cdn_origin_id",
        "name",
        "progressive_download",
        "reference_id",
        "remote_url",
        "remote_stream_name",
        "size",
        "type",
        "updated_at",
        "uploaded_at",
        "video_duration"
      ]
    },
    "Add_ISMC_ManifestBody": {
      "properties": {
        "reference_id": {
          "type": "string",
          "description": "video reference id (must be unique within the account) "
        },
        "remote_url": {
          "type": "string",
          "description": "the url for a remote asset (not applicable to ingested assets) "
        },
        "video_duration": {
          "type": "number",
          "description": "the duration of the video in seconds "
        }
      },
      "required": [
        "remote_url"
      ]
    },
    "Add_ISMC_Manifest200": {
      "properties": {
        "id": {
          "type": "string",
          "description": "the asset id "
        },
        "audio_only": {
          "type": "boolean",
          "description": "not applicable to ismc_manifests "
        },
        "complete": {
          "type": "boolean",
          "description": "whether processing is complete for the asset (will be true for remote assets if a remote_url is supplied) "
        },
        "controller_type": {
          "type": "string",
          "description": "the controller type for ingested renditions (not applicable to remote renditions or other types of assets) "
        },
        "current_filename": {
          "type": "string",
          "description": "the filename for an ingested asset in the Video Cloud system (not applicable to remote assets) "
        },
        "cdn_origin_id": {
          "type": "string",
          "description": "an internally used id (not applicable to remote assets) "
        },
        "name": {
          "type": "string",
          "description": "asset name "
        },
        "progressive_download": {
          "type": "boolean",
          "description": "whether ingested rendition is available by progressive download (not applicable to other asset types or remote renditions) "
        },
        "reference_id": {
          "type": "string",
          "description": "video reference id (must be unique within the account) "
        },
        "remote_url": {
          "type": "string",
          "description": "the url for a remote asset (not applicable to ingested assets) "
        },
        "remote_stream_name": {
          "type": "string",
          "description": "name for remote streams (not applicable to asset types other than rendition) "
        },
        "size": {
          "type": "number",
          "description": "the size of the asset in bytes (integer) "
        },
        "type": {
          "type": "string",
          "description": "the type of the asset "
        },
        "updated_at": {
          "type": "datestring",
          "description": "when the video was last modified "
        },
        "uploaded_at": {
          "type": "datestring",
          "description": "when the asset was added to the video in Video Cloud "
        },
        "video_duration": {
          "type": "number",
          "description": "video duration in seconds (present if you included it when you created the asset) "
        }
      },
      "required": [
        "id",
        "audio_only",
        "complete",
        "controller_type",
        "current_filename",
        "cdn_origin_id",
        "name",
        "progressive_download",
        "reference_id",
        "remote_url",
        "remote_stream_name",
        "size",
        "type",
        "updated_at",
        "uploaded_at",
        "video_duration"
      ]
    },
    "Get_ISMC_Manifest_List200": {
      "properties": {
        "id": {
          "type": "string",
          "description": "the asset id "
        },
        "audio_only": {
          "type": "boolean",
          "description": "not applicable to ismc_manifests "
        },
        "complete": {
          "type": "boolean",
          "description": "whether processing is complete for the asset (will be true for remote assets if a remote_url is supplied) "
        },
        "controller_type": {
          "type": "string",
          "description": "the controller type for ingested renditions (not applicable to remote renditions or other types of assets) "
        },
        "current_filename": {
          "type": "string",
          "description": "the filename for an ingested asset in the Video Cloud system (not applicable to remote assets) "
        },
        "cdn_origin_id": {
          "type": "string",
          "description": "an internally used id (not applicable to remote assets) "
        },
        "name": {
          "type": "string",
          "description": "asset name "
        },
        "progressive_download": {
          "type": "boolean",
          "description": "whether ingested rendition is available by progressive download (not applicable to other asset types or remote renditions) "
        },
        "reference_id": {
          "type": "string",
          "description": "video reference id (must be unique within the account) "
        },
        "remote_url": {
          "type": "string",
          "description": "the url for a remote asset (not applicable to ingested assets) "
        },
        "remote_stream_name": {
          "type": "string",
          "description": "name for remote streams (not applicable to asset types other than rendition) "
        },
        "size": {
          "type": "number",
          "description": "the size of the asset in bytes (integer) "
        },
        "type": {
          "type": "string",
          "description": "the type of the asset "
        },
        "updated_at": {
          "type": "datestring",
          "description": "when the video was last modified "
        },
        "uploaded_at": {
          "type": "datestring",
          "description": "when the asset was added to the video in Video Cloud "
        },
        "video_duration": {
          "type": "number",
          "description": "video duration in seconds (present if you included it when you created the asset) "
        }
      },
      "required": [
        "id",
        "audio_only",
        "complete",
        "controller_type",
        "current_filename",
        "cdn_origin_id",
        "name",
        "progressive_download",
        "reference_id",
        "remote_url",
        "remote_stream_name",
        "size",
        "type",
        "updated_at",
        "uploaded_at",
        "video_duration"
      ]
    },
    "Add_ISM_ManifestBody": {
      "properties": {
        "reference_id": {
          "type": "string",
          "description": "video reference id (must be unique within the account) "
        },
        "remote_url": {
          "type": "string",
          "description": "the url for a remote asset (not applicable to ingested assets) "
        },
        "video_duration": {
          "type": "number",
          "description": "the duration of the video in seconds "
        }
      },
      "required": [
        "remote_url"
      ]
    },
    "Add_ISM_Manifest200": {
      "properties": {
        "id": {
          "type": "string",
          "description": "the asset id "
        },
        "audio_only": {
          "type": "boolean",
          "description": "not applicable to ism_manifests "
        },
        "complete": {
          "type": "boolean",
          "description": "whether processing is complete for the asset (will be true for remote assets if a remote_url is supplied) "
        },
        "controller_type": {
          "type": "string",
          "description": "the controller type for ingested renditions (not applicable to remote renditions or other types of assets) "
        },
        "current_filename": {
          "type": "string",
          "description": "the filename for an ingested asset in the Video Cloud system (not applicable to remote assets) "
        },
        "cdn_origin_id": {
          "type": "string",
          "description": "an internally used id (not applicable to remote assets) "
        },
        "name": {
          "type": "string",
          "description": "asset name "
        },
        "progressive_download": {
          "type": "boolean",
          "description": "whether ingested rendition is available by progressive download (not applicable to other asset types or remote renditions) "
        },
        "reference_id": {
          "type": "string",
          "description": "video reference id (must be unique within the account) "
        },
        "remote_url": {
          "type": "string",
          "description": "the url for a remote asset (not applicable to ingested assets) "
        },
        "remote_stream_name": {
          "type": "string",
          "description": "name for remote streams (not applicable to asset types other than rendition) "
        },
        "size": {
          "type": "number",
          "description": "the size of the asset in bytes (integer) "
        },
        "type": {
          "type": "string",
          "description": "the type of the asset "
        },
        "updated_at": {
          "type": "datestring",
          "description": "when the video was last modified "
        },
        "uploaded_at": {
          "type": "datestring",
          "description": "when the asset was added to the video in Video Cloud "
        },
        "video_duration": {
          "type": "number",
          "description": "video duration in seconds (present if you included it when you created the asset) "
        }
      },
      "required": [
        "id",
        "audio_only",
        "complete",
        "controller_type",
        "current_filename",
        "cdn_origin_id",
        "name",
        "progressive_download",
        "reference_id",
        "remote_url",
        "remote_stream_name",
        "size",
        "type",
        "updated_at",
        "uploaded_at",
        "video_duration"
      ]
    },
    "Get_ISM_Manifest_List200": {
      "properties": {
        "id": {
          "type": "string",
          "description": "the asset id "
        },
        "audio_only": {
          "type": "boolean",
          "description": "not applicable to ism_manifests "
        },
        "complete": {
          "type": "boolean",
          "description": "whether processing is complete for the asset (will be true for remote assets if a remote_url is supplied) "
        },
        "controller_type": {
          "type": "string",
          "description": "the controller type for ingested renditions (not applicable to remote renditions or other types of assets) "
        },
        "current_filename": {
          "type": "string",
          "description": "the filename for an ingested asset in the Video Cloud system (not applicable to remote assets) "
        },
        "cdn_origin_id": {
          "type": "string",
          "description": "an internally used id (not applicable to remote assets) "
        },
        "name": {
          "type": "string",
          "description": "asset name "
        },
        "progressive_download": {
          "type": "boolean",
          "description": "whether ingested rendition is available by progressive download (not applicable to other asset types or remote renditions) "
        },
        "reference_id": {
          "type": "string",
          "description": "video reference id (must be unique within the account) "
        },
        "remote_url": {
          "type": "string",
          "description": "the url for a remote asset (not applicable to ingested assets) "
        },
        "remote_stream_name": {
          "type": "string",
          "description": "name for remote streams (not applicable to asset types other than rendition) "
        },
        "size": {
          "type": "number",
          "description": "the size of the asset in bytes (integer) "
        },
        "type": {
          "type": "string",
          "description": "the type of the asset "
        },
        "updated_at": {
          "type": "datestring",
          "description": "when the video was last modified "
        },
        "uploaded_at": {
          "type": "datestring",
          "description": "when the asset was added to the video in Video Cloud "
        },
        "video_duration": {
          "type": "number",
          "description": "video duration in seconds (present if you included it when you created the asset) "
        }
      },
      "required": [
        "id",
        "audio_only",
        "complete",
        "controller_type",
        "current_filename",
        "cdn_origin_id",
        "name",
        "progressive_download",
        "reference_id",
        "remote_url",
        "remote_stream_name",
        "size",
        "type",
        "updated_at",
        "uploaded_at",
        "video_duration"
      ]
    },
    "Add_PosterBody": {
      "properties": {
        "reference_id": {
          "type": "string",
          "description": "video reference id (must be unique within the account) "
        },
        "remote_url": {
          "type": "string",
          "description": "the url for a remote asset (not applicable to ingested assets) "
        }
      },
      "required": [
        "remote_url"
      ]
    },
    "Add_Poster200": {
      "properties": {
        "id": {
          "type": "string",
          "description": "the asset id "
        },
        "audio_only": {
          "type": "boolean",
          "description": "not applicable to posters "
        },
        "complete": {
          "type": "boolean",
          "description": "whether processing is complete for the asset (will be true for remote assets if a remote_url is supplied) "
        },
        "controller_type": {
          "type": "string",
          "description": "the controller type for ingested renditions (not applicable to remote renditions or other types of assets) "
        },
        "current_filename": {
          "type": "string",
          "description": "the filename for an ingested asset in the Video Cloud system (not applicable to remote assets) "
        },
        "cdn_origin_id": {
          "type": "string",
          "description": "an internally used id (not applicable to remote assets) "
        },
        "name": {
          "type": "string",
          "description": "asset name "
        },
        "progressive_download": {
          "type": "boolean",
          "description": "whether ingested rendition is available by progressive download (not applicable to other asset types or remote renditions) "
        },
        "reference_id": {
          "type": "string",
          "description": "video reference id (must be unique within the account) "
        },
        "remote_url": {
          "type": "string",
          "description": "the url for a remote asset (not applicable to ingested assets) "
        },
        "remote_stream_name": {
          "type": "string",
          "description": "name for remote streams (not applicable to asset types other than rendition) "
        },
        "size": {
          "type": "number",
          "description": "the size of the asset in bytes (integer) "
        },
        "type": {
          "type": "string",
          "description": "the type of the asset "
        },
        "updated_at": {
          "type": "datestring",
          "description": "when the video was last modified "
        },
        "uploaded_at": {
          "type": "datestring",
          "description": "when the asset was added to the video in Video Cloud "
        }
      },
      "required": [
        "id",
        "audio_only",
        "complete",
        "controller_type",
        "current_filename",
        "cdn_origin_id",
        "name",
        "progressive_download",
        "reference_id",
        "remote_url",
        "remote_stream_name",
        "size",
        "type",
        "updated_at",
        "uploaded_at"
      ]
    },
    "Get_Poster_List200": {
      "properties": {
        "id": {
          "type": "string",
          "description": "the asset id "
        },
        "audio_only": {
          "type": "boolean",
          "description": "not applicable to posters "
        },
        "complete": {
          "type": "boolean",
          "description": "whether processing is complete for the asset (will be true for remote assets if a remote_url is supplied) "
        },
        "controller_type": {
          "type": "string",
          "description": "the controller type for ingested renditions (not applicable to remote renditions or other types of assets) "
        },
        "current_filename": {
          "type": "string",
          "description": "the filename for an ingested asset in the Video Cloud system (not applicable to remote assets) "
        },
        "cdn_origin_id": {
          "type": "string",
          "description": "an internally used id (not applicable to remote assets) "
        },
        "name": {
          "type": "string",
          "description": "asset name "
        },
        "progressive_download": {
          "type": "boolean",
          "description": "whether ingested rendition is available by progressive download (not applicable to other asset types or remote renditions) "
        },
        "reference_id": {
          "type": "string",
          "description": "video reference id (must be unique within the account) "
        },
        "remote_url": {
          "type": "string",
          "description": "the url for a remote asset (not applicable to ingested assets) "
        },
        "remote_stream_name": {
          "type": "string",
          "description": "name for remote streams (not applicable to asset types other than rendition) "
        },
        "size": {
          "type": "number",
          "description": "the size of the asset in bytes (integer) "
        },
        "type": {
          "type": "string",
          "description": "the type of the asset "
        },
        "updated_at": {
          "type": "datestring",
          "description": "when the video was last modified "
        },
        "uploaded_at": {
          "type": "datestring",
          "description": "when the asset was added to the video in Video Cloud "
        }
      },
      "required": [
        "id",
        "audio_only",
        "complete",
        "controller_type",
        "current_filename",
        "cdn_origin_id",
        "name",
        "progressive_download",
        "reference_id",
        "remote_url",
        "remote_stream_name",
        "size",
        "type",
        "updated_at",
        "uploaded_at"
      ]
    },
    "Add_RenditionBody": {
      "properties": {
        "audio_only": {
          "type": "boolean",
          "description": "whether this is only an audio track "
        },
        "encoding_rate": {
          "type": "number",
          "description": "average encoding_rate in kbps "
        },
        "frame_height": {
          "type": "number",
          "description": "frame height in pixels "
        },
        "frame_width": {
          "type": "number",
          "description": "frame width in pixels "
        },
        "name": {
          "type": "string",
          "description": "asset name "
        },
        "progressive_download": {
          "type": "boolean",
          "description": "whether this is a progressive download video - required for MP4 renditions "
        },
        "reference_id": {
          "type": "string",
          "description": "video reference-id (must be unique within the account) "
        },
        "remote_url": {
          "type": "string",
          "description": "the url for a remote asset (not applicable to ingested assets) "
        },
        "size": {
          "type": "number",
          "description": "the size of the asset in bytes (integer) "
        },
        "video_duration": {
          "type": "number",
          "description": "duration in milliseconds "
        },
        "video_codec": {
          "type": "string",
          "description": "the video codec &mdash; support for video formats -  varies across browsers and devices; for the broadest support use h264 &mdash; remote assets will not work properly without this field "
        },
        "video_container": {
          "type": "string",
          "description": "the video container such as MP4 or M2TS "
        }
      },
      "required": [
        "remote_url",
        "video_codec"
      ]
    },
    "Add_Rendition200": {
      "properties": {
        "account_id": {
          "type": "string",
          "description": "the Video Cloud account id "
        },
        "id": {
          "type": "string",
          "description": "the asset id "
        },
        "audio_only": {
          "type": "boolean",
          "description": "not applicable to thumbnails "
        },
        "cdn_origin_id": {
          "type": "string",
          "description": "an internally used id (not applicable to remote assets) "
        },
        "complete": {
          "type": "boolean",
          "description": "whether processing is complete for the asset (will be true for remote assets if a remote_url is supplied) "
        },
        "controller_type": {
          "type": "string",
          "description": "the controller type for ingested renditions (not applicable to remote renditions or other types of assets) "
        },
        "current_filename": {
          "type": "string",
          "description": "the filename for an ingested asset in the Video Cloud system (not applicable to remote assets) "
        },
        "drm": {
          "type": "object",
          "description": "DRM packaging details (not applicable to remote assets) ",
          "$ref": "#/definitions/drm"
        },
        "encoding_rate": {
          "type": "number",
          "description": "average encoding rate in kbps "
        },
        "frame_height": {
          "type": "number",
          "description": "frame height in pixels "
        },
        "frame_width": {
          "type": "number",
          "description": "frame width in pixels "
        },
        "name": {
          "type": "string",
          "description": "asset name "
        },
        "progressive_download": {
          "type": "boolean",
          "description": "whether ingested rendition is available by progressive download "
        },
        "reference_id": {
          "type": "string",
          "description": "video reference id (must be unique within the account) "
        },
        "remote_url": {
          "type": "string",
          "description": "the url for a remote asset (not applicable to ingested assets) "
        },
        "remote_stream_name": {
          "type": "string",
          "description": "name for remote streams (not applicable to asset types other than rendition) "
        },
        "size": {
          "type": "number",
          "description": "the size of the asset in bytes (integer) "
        },
        "type": {
          "type": "string",
          "description": "the type of the asset "
        },
        "updated_at": {
          "type": "datestring",
          "description": "when the video was last modified "
        },
        "uploaded_at": {
          "type": "datestring",
          "description": "when the asset was added to the video in Video Cloud "
        },
        "video_duration": {
          "type": "number",
          "description": "duration in milliseconds "
        }
      },
      "required": [
        "account_id",
        "id",
        "audio_only",
        "cdn_origin_id",
        "complete",
        "controller_type",
        "current_filename",
        "drm",
        "encoding_rate",
        "frame_height",
        "frame_width",
        "name",
        "progressive_download",
        "reference_id",
        "remote_url",
        "remote_stream_name",
        "size",
        "type",
        "updated_at",
        "uploaded_at",
        "video_duration"
      ]
    },
    "Get_Rendition_List200": {
      "properties": {
        "account_id": {
          "type": "string",
          "description": "the Video Cloud account id "
        },
        "id": {
          "type": "string",
          "description": "the asset id "
        },
        "audio_only": {
          "type": "boolean",
          "description": "whether this rendition contains only an audio track, no video track (a rendition for low bandwidth devices) "
        },
        "cdn_origin_id": {
          "type": "string",
          "description": "an internally used id (not applicable to remote assets) "
        },
        "complete": {
          "type": "boolean",
          "description": "whether processing is complete for the asset (will be true for remote assets if a remote_url is supplied) "
        },
        "controller_type": {
          "type": "string",
          "description": "the controller type for ingested renditions (not applicable to remote renditions or other types of assets) "
        },
        "current_filename": {
          "type": "string",
          "description": "the filename for an ingested asset in the Video Cloud system (not applicable to remote assets) "
        },
        "drm": {
          "type": "object",
          "description": "DRM packaging details (not applicable to remote assets) ",
          "$ref": "#/definitions/drm"
        },
        "encoding_rate": {
          "type": "number",
          "description": "average encoding rate in kbps "
        },
        "frame_height": {
          "type": "number",
          "description": "frame height in pixels "
        },
        "frame_width": {
          "type": "number",
          "description": "frame width in pixels "
        },
        "key_systems": {
          "type": "array",
          "description": "array of strings that denote the kind of encryption used for DRM packaged renditions ",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string",
          "description": "asset name "
        },
        "progressive_download": {
          "type": "boolean",
          "description": "whether ingested rendition is available by progressive download (not applicable to other asset types or remote renditions) "
        },
        "reference_id": {
          "type": "string",
          "description": "video reference id (must be unique within the account) "
        },
        "remote_url": {
          "type": "string",
          "description": "the url for a remote asset (not applicable to ingested assets) "
        },
        "remote_stream_name": {
          "type": "string",
          "description": "name for remote streams (not applicable to asset types other than rendition) "
        },
        "size": {
          "type": "number",
          "description": "the size of the asset in bytes (integer) "
        },
        "type": {
          "type": "string",
          "description": "the type of the asset "
        },
        "updated_at": {
          "type": "datestring",
          "description": "when the video was last modified "
        },
        "uploaded_at": {
          "type": "datestring",
          "description": "when the asset was added to the video in Video Cloud "
        },
        "video_codec": {
          "type": "string",
          "description": "not applicable to remote assets "
        },
        "video_container": {
          "type": "string",
          "description": "not applicable to remote assets "
        },
        "video_duration": {
          "type": "number",
          "description": "duration in milliseconds "
        }
      },
      "required": [
        "account_id",
        "id",
        "audio_only",
        "cdn_origin_id",
        "complete",
        "controller_type",
        "current_filename",
        "drm",
        "encoding_rate",
        "frame_height",
        "frame_width",
        "key_systems",
        "name",
        "progressive_download",
        "reference_id",
        "remote_url",
        "remote_stream_name",
        "size",
        "type",
        "updated_at",
        "uploaded_at",
        "video_codec",
        "video_container",
        "video_duration"
      ]
    },
    "Add_ThumbnailBody": {
      "properties": {
        "reference_id": {
          "type": "string",
          "description": "video reference id (must be unique within the account) "
        },
        "remote_url": {
          "type": "string",
          "description": "the url for a remote asset (not applicable to ingested assets) "
        }
      },
      "required": [
        "remote_url"
      ]
    },
    "Add_Thumbnail200": {
      "properties": {
        "id": {
          "type": "string",
          "description": "the asset id "
        },
        "audio_only": {
          "type": "boolean",
          "description": "not applicable to thumbnails "
        },
        "complete": {
          "type": "boolean",
          "description": "whether processing is complete for the asset (will be true for remote assets if a remote_url is supplied) "
        },
        "controller_type": {
          "type": "string",
          "description": "the controller type for ingested renditions (not applicable to remote renditions or other types of assets) "
        },
        "current_filename": {
          "type": "string",
          "description": "the filename for an ingested asset in the Video Cloud system (not applicable to remote assets) "
        },
        "cdn_origin_id": {
          "type": "string",
          "description": "an internally used id (not applicable to remote assets) "
        },
        "name": {
          "type": "string",
          "description": "asset name "
        },
        "progressive_download": {
          "type": "boolean",
          "description": "whether ingested rendition is available by progressive download (not applicable to other asset types or remote renditions) "
        },
        "reference_id": {
          "type": "string",
          "description": "video reference id (must be unique within the account) "
        },
        "remote_url": {
          "type": "string",
          "description": "the url for a remote asset (not applicable to ingested assets) "
        },
        "remote_stream_name": {
          "type": "string",
          "description": "name for remote streams (not applicable to asset types other than rendition) "
        },
        "size": {
          "type": "number",
          "description": "the size of the asset in bytes (integer) "
        },
        "type": {
          "type": "string",
          "description": "the type of the asset "
        },
        "updated_at": {
          "type": "datestring",
          "description": "when the video was last modified "
        },
        "uploaded_at": {
          "type": "datestring",
          "description": "when the asset was added to the video in Video Cloud "
        }
      },
      "required": [
        "id",
        "audio_only",
        "complete",
        "controller_type",
        "current_filename",
        "cdn_origin_id",
        "name",
        "progressive_download",
        "reference_id",
        "remote_url",
        "remote_stream_name",
        "size",
        "type",
        "updated_at",
        "uploaded_at"
      ]
    },
    "Get_Thumbnail_List200": {
      "properties": {
        "id": {
          "type": "string",
          "description": "the asset id "
        },
        "audio_only": {
          "type": "boolean",
          "description": "not applicable to thumbnails "
        },
        "complete": {
          "type": "boolean",
          "description": "whether processing is complete for the asset (will be true for remote assets if a remote_url is supplied) "
        },
        "controller_type": {
          "type": "string",
          "description": "the controller type for ingested renditions (not applicable to remote renditions or other types of assets) "
        },
        "current_filename": {
          "type": "string",
          "description": "the filename for an ingested asset in the Video Cloud system (not applicable to remote assets) "
        },
        "cdn_origin_id": {
          "type": "string",
          "description": "an internally used id (not applicable to remote assets) "
        },
        "name": {
          "type": "string",
          "description": "asset name "
        },
        "progressive_download": {
          "type": "boolean",
          "description": "whether ingested rendition is available by progressive download (not applicable to other asset types or remote renditions) "
        },
        "reference_id": {
          "type": "string",
          "description": "video reference id (must be unique within the account) "
        },
        "remote_url": {
          "type": "string",
          "description": "the url for a remote asset (not applicable to ingested assets) "
        },
        "remote_stream_name": {
          "type": "string",
          "description": "name for remote streams (not applicable to asset types other than rendition) "
        },
        "size": {
          "type": "number",
          "description": "the size of the asset in bytes (integer) "
        },
        "type": {
          "type": "string",
          "description": "the type of the asset "
        },
        "updated_at": {
          "type": "datestring",
          "description": "when the video was last modified "
        },
        "uploaded_at": {
          "type": "datestring",
          "description": "when the asset was added to the video in Video Cloud "
        }
      },
      "required": [
        "id",
        "audio_only",
        "complete",
        "controller_type",
        "current_filename",
        "cdn_origin_id",
        "name",
        "progressive_download",
        "reference_id",
        "remote_url",
        "remote_stream_name",
        "size",
        "type",
        "updated_at",
        "uploaded_at"
      ]
    },
    "Get_Caption200": {
      "properties": {
        "id": {
          "type": "string",
          "description": "the asset id "
        },
        "audio_only": {
          "type": "boolean",
          "description": "not applicable to captions "
        },
        "complete": {
          "type": "boolean",
          "description": "whether processing is complete for the asset (will be true for remote assets if a remote_url is supplied) "
        },
        "controller_type": {
          "type": "string",
          "description": "the controller type for ingested renditions (not applicable to remote renditions or other types of assets) "
        },
        "current_filename": {
          "type": "string",
          "description": "the filename for an ingested asset in the Video Cloud system (not applicable to remote assets) "
        },
        "cdn_origin_id": {
          "type": "string",
          "description": "an internally used id (not applicable to remote assets) "
        },
        "name": {
          "type": "string",
          "description": "asset name "
        },
        "progressive_download": {
          "type": "boolean",
          "description": "whether ingested rendition is available by progressive download (not applicable to other asset types or remote renditions) "
        },
        "reference_id": {
          "type": "string",
          "description": "video reference id (must be unique within the account) "
        },
        "remote_url": {
          "type": "string",
          "description": "the url for a remote asset (not applicable to ingested assets) "
        },
        "remote_stream_name": {
          "type": "string",
          "description": "name for remote streams (not applicable to asset types other than rendition) "
        },
        "size": {
          "type": "number",
          "description": "the size of the asset in bytes (integer) "
        },
        "type": {
          "type": "string",
          "description": "the type of the asset "
        },
        "updated_at": {
          "type": "datestring",
          "description": "when the video was last modified "
        },
        "uploaded_at": {
          "type": "datestring",
          "description": "when the asset was added to the video in Video Cloud "
        }
      },
      "required": [
        "id",
        "audio_only",
        "complete",
        "controller_type",
        "current_filename",
        "cdn_origin_id",
        "name",
        "progressive_download",
        "reference_id",
        "remote_url",
        "remote_stream_name",
        "size",
        "type",
        "updated_at",
        "uploaded_at"
      ]
    },
    "Update_CaptionBody": {
      "properties": {
        "reference_id": {
          "type": "string",
          "description": "video reference id (must be unique within the account) "
        },
        "remote_url": {
          "type": "string",
          "description": "the url for a remote asset (not applicable to ingested assets) "
        }
      },
      "required": [
        "remote_url"
      ]
    },
    "Update_Caption200": {
      "properties": {
        "id": {
          "type": "string",
          "description": "the asset id "
        },
        "audio_only": {
          "type": "boolean",
          "description": "not applicable to captions "
        },
        "complete": {
          "type": "boolean",
          "description": "whether processing is complete for the asset (will be true for remote assets if a remote_url is supplied) "
        },
        "controller_type": {
          "type": "string",
          "description": "the controller type for ingested renditions (not applicable to remote renditions or other types of assets) "
        },
        "current_filename": {
          "type": "string",
          "description": "the filename for an ingested asset in the Video Cloud system (not applicable to remote assets) "
        },
        "cdn_origin_id": {
          "type": "string",
          "description": "an internally used id (not applicable to remote assets) "
        },
        "name": {
          "type": "string",
          "description": "asset name "
        },
        "progressive_download": {
          "type": "boolean",
          "description": "whether ingested rendition is available by progressive download (not applicable to other asset types or remote renditions) "
        },
        "reference_id": {
          "type": "string",
          "description": "video reference id (must be unique within the account) "
        },
        "remote_url": {
          "type": "string",
          "description": "the url for a remote asset (not applicable to ingested assets) "
        },
        "remote_stream_name": {
          "type": "string",
          "description": "name for remote streams (not applicable to asset types other than rendition) "
        },
        "size": {
          "type": "number",
          "description": "the size of the asset in bytes (integer) "
        },
        "type": {
          "type": "string",
          "description": "the type of the asset "
        },
        "updated_at": {
          "type": "datestring",
          "description": "when the video was last modified "
        },
        "uploaded_at": {
          "type": "datestring",
          "description": "when the asset was added to the video in Video Cloud "
        }
      },
      "required": [
        "id",
        "audio_only",
        "complete",
        "controller_type",
        "current_filename",
        "cdn_origin_id",
        "name",
        "progressive_download",
        "reference_id",
        "remote_url",
        "remote_stream_name",
        "size",
        "type",
        "updated_at",
        "uploaded_at"
      ]
    },
    "Get_DASH_Manifest200": {
      "properties": {
        "id": {
          "type": "string",
          "description": "the asset id "
        },
        "audio_only": {
          "type": "boolean",
          "description": "not applicable to dash_manifests "
        },
        "complete": {
          "type": "boolean",
          "description": "whether processing is complete for the asset (will be true for remote assets if a remote_url is supplied) "
        },
        "controller_type": {
          "type": "string",
          "description": "the controller type for ingested renditions (not applicable to remote renditions or other types of assets) "
        },
        "current_filename": {
          "type": "string",
          "description": "the filename for an ingested asset in the Video Cloud system (not applicable to remote assets) "
        },
        "cdn_origin_id": {
          "type": "string",
          "description": "an internally used id (not applicable to remote assets) "
        },
        "name": {
          "type": "string",
          "description": "asset name "
        },
        "progressive_download": {
          "type": "boolean",
          "description": "whether ingested rendition is available by progressive download (not applicable to other asset types or remote renditions) "
        },
        "reference_id": {
          "type": "string",
          "description": "video reference id (must be unique within the account) "
        },
        "remote_url": {
          "type": "string",
          "description": "the url for a remote asset (not applicable to ingested assets) "
        },
        "remote_stream_name": {
          "type": "string",
          "description": "name for remote streams (not applicable to asset types other than rendition) "
        },
        "size": {
          "type": "number",
          "description": "the size of the asset in bytes (integer) "
        },
        "type": {
          "type": "string",
          "description": "the type of the asset "
        },
        "updated_at": {
          "type": "datestring",
          "description": "when the video was last modified "
        },
        "uploaded_at": {
          "type": "datestring",
          "description": "when the asset was added to the video in Video Cloud "
        },
        "video_duration": {
          "type": "number",
          "description": "video duration in seconds (present if you included it when you created the asset) "
        }
      },
      "required": [
        "id",
        "audio_only",
        "complete",
        "controller_type",
        "current_filename",
        "cdn_origin_id",
        "name",
        "progressive_download",
        "reference_id",
        "remote_url",
        "remote_stream_name",
        "size",
        "type",
        "updated_at",
        "uploaded_at",
        "video_duration"
      ]
    },
    "Update_DASH_ManifestBody": {
      "properties": {
        "reference_id": {
          "type": "string",
          "description": "video reference id (must be unique within the account) "
        },
        "remote_url": {
          "type": "string",
          "description": "the url for a remote asset (not applicable to ingested assets) "
        },
        "video_duration": {
          "type": "number",
          "description": "the duration of the video in seconds "
        }
      },
      "required": [
        "remote_url"
      ]
    },
    "Update_DASH_Manifest200": {
      "properties": {
        "id": {
          "type": "string",
          "description": "the asset id "
        },
        "audio_only": {
          "type": "boolean",
          "description": "not applicable to dash_manifests "
        },
        "complete": {
          "type": "boolean",
          "description": "whether processing is complete for the asset (will be true for remote assets if a remote_url is supplied) "
        },
        "controller_type": {
          "type": "string",
          "description": "the controller type for ingested renditions (not applicable to remote renditions or other types of assets) "
        },
        "current_filename": {
          "type": "string",
          "description": "the filename for an ingested asset in the Video Cloud system (not applicable to remote assets) "
        },
        "cdn_origin_id": {
          "type": "string",
          "description": "an internally used id (not applicable to remote assets) "
        },
        "name": {
          "type": "string",
          "description": "asset name "
        },
        "progressive_download": {
          "type": "boolean",
          "description": "whether ingested rendition is available by progressive download (not applicable to other asset types or remote renditions) "
        },
        "reference_id": {
          "type": "string",
          "description": "video reference id (must be unique within the account) "
        },
        "remote_url": {
          "type": "string",
          "description": "the url for a remote asset (not applicable to ingested assets) "
        },
        "remote_stream_name": {
          "type": "string",
          "description": "name for remote streams (not applicable to asset types other than rendition) "
        },
        "size": {
          "type": "number",
          "description": "the size of the asset in bytes (integer) "
        },
        "type": {
          "type": "string",
          "description": "the type of the asset "
        },
        "updated_at": {
          "type": "datestring",
          "description": "when the video was last modified "
        },
        "uploaded_at": {
          "type": "datestring",
          "description": "when the asset was added to the video in Video Cloud "
        },
        "video_duration": {
          "type": "number",
          "description": "video duration in seconds (present if you included it when you created the asset) "
        }
      },
      "required": [
        "id",
        "audio_only",
        "complete",
        "controller_type",
        "current_filename",
        "cdn_origin_id",
        "name",
        "progressive_download",
        "reference_id",
        "remote_url",
        "remote_stream_name",
        "size",
        "type",
        "updated_at",
        "uploaded_at",
        "video_duration"
      ]
    },
    "Get_HDS_Manifest200": {
      "properties": {
        "id": {
          "type": "string",
          "description": "the asset id "
        },
        "audio_only": {
          "type": "boolean",
          "description": "not applicable to hds_manifests "
        },
        "complete": {
          "type": "boolean",
          "description": "whether processing is complete for the asset (will be true for remote assets if a remote_url is supplied) "
        },
        "controller_type": {
          "type": "string",
          "description": "the controller type for ingested renditions (not applicable to remote renditions or other types of assets) "
        },
        "current_filename": {
          "type": "string",
          "description": "the filename for an ingested asset in the Video Cloud system (not applicable to remote assets) "
        },
        "cdn_origin_id": {
          "type": "string",
          "description": "an internally used id (not applicable to remote assets) "
        },
        "name": {
          "type": "string",
          "description": "asset name "
        },
        "progressive_download": {
          "type": "boolean",
          "description": "whether ingested rendition is available by progressive download (not applicable to other asset types or remote renditions) "
        },
        "reference_id": {
          "type": "string",
          "description": "video reference id (must be unique within the account) "
        },
        "remote_url": {
          "type": "string",
          "description": "the url for a remote asset (not applicable to ingested assets) "
        },
        "remote_stream_name": {
          "type": "string",
          "description": "name for remote streams (not applicable to asset types other than rendition) "
        },
        "size": {
          "type": "number",
          "description": "the size of the asset in bytes (integer) "
        },
        "type": {
          "type": "string",
          "description": "the type of the asset "
        },
        "updated_at": {
          "type": "datestring",
          "description": "when the video was last modified "
        },
        "uploaded_at": {
          "type": "datestring",
          "description": "when the asset was added to the video in Video Cloud "
        },
        "video_duration": {
          "type": "number",
          "description": "video duration in seconds (present if you included it when you created the asset) "
        }
      },
      "required": [
        "id",
        "audio_only",
        "complete",
        "controller_type",
        "current_filename",
        "cdn_origin_id",
        "name",
        "progressive_download",
        "reference_id",
        "remote_url",
        "remote_stream_name",
        "size",
        "type",
        "updated_at",
        "uploaded_at",
        "video_duration"
      ]
    },
    "Update_HDS_ManifestBody": {
      "properties": {
        "reference_id": {
          "type": "string",
          "description": "video reference id (must be unique within the account) "
        },
        "remote_url": {
          "type": "string",
          "description": "the url for a remote asset (not applicable to ingested assets) "
        },
        "video_duration": {
          "type": "number",
          "description": "the duration of the video in seconds "
        }
      },
      "required": [
        "remote_url"
      ]
    },
    "Update_HDS_Manifest200": {
      "properties": {
        "id": {
          "type": "string",
          "description": "the asset id "
        },
        "audio_only": {
          "type": "boolean",
          "description": "not applicable to hds_manifests "
        },
        "complete": {
          "type": "boolean",
          "description": "whether processing is complete for the asset (will be true for remote assets if a remote_url is supplied) "
        },
        "controller_type": {
          "type": "string",
          "description": "the controller type for ingested renditions (not applicable to remote renditions or other types of assets) "
        },
        "current_filename": {
          "type": "string",
          "description": "the filename for an ingested asset in the Video Cloud system (not applicable to remote assets) "
        },
        "cdn_origin_id": {
          "type": "string",
          "description": "an internally used id (not applicable to remote assets) "
        },
        "name": {
          "type": "string",
          "description": "asset name "
        },
        "progressive_download": {
          "type": "boolean",
          "description": "whether ingested rendition is available by progressive download (not applicable to other asset types or remote renditions) "
        },
        "reference_id": {
          "type": "string",
          "description": "video reference id (must be unique within the account) "
        },
        "remote_url": {
          "type": "string",
          "description": "the url for a remote asset (not applicable to ingested assets) "
        },
        "remote_stream_name": {
          "type": "string",
          "description": "name for remote streams (not applicable to asset types other than rendition) "
        },
        "size": {
          "type": "number",
          "description": "the size of the asset in bytes (integer) "
        },
        "type": {
          "type": "string",
          "description": "the type of the asset "
        },
        "updated_at": {
          "type": "datestring",
          "description": "when the video was last modified "
        },
        "uploaded_at": {
          "type": "datestring",
          "description": "when the asset was added to the video in Video Cloud "
        },
        "video_duration": {
          "type": "number",
          "description": "video duration in seconds (present if you included it when you created the asset) "
        }
      },
      "required": [
        "id",
        "audio_only",
        "complete",
        "controller_type",
        "current_filename",
        "cdn_origin_id",
        "name",
        "progressive_download",
        "reference_id",
        "remote_url",
        "remote_stream_name",
        "size",
        "type",
        "updated_at",
        "uploaded_at",
        "video_duration"
      ]
    },
    "Get_HLS_Manifest200": {
      "properties": {
        "id": {
          "type": "string",
          "description": "the asset id "
        },
        "audio_only": {
          "type": "boolean",
          "description": "not applicable to hls_manifests "
        },
        "complete": {
          "type": "boolean",
          "description": "whether processing is complete for the asset (will be true for remote assets if a remote_url is supplied) "
        },
        "controller_type": {
          "type": "string",
          "description": "the controller type for ingested renditions (not applicable to remote renditions or other types of assets) "
        },
        "current_filename": {
          "type": "string",
          "description": "the filename for an ingested asset in the Video Cloud system (not applicable to remote assets) "
        },
        "cdn_origin_id": {
          "type": "string",
          "description": "an internally used id (not applicable to remote assets) "
        },
        "name": {
          "type": "string",
          "description": "asset name "
        },
        "progressive_download": {
          "type": "boolean",
          "description": "whether ingested rendition is available by progressive download (not applicable to other asset types or remote renditions) "
        },
        "reference_id": {
          "type": "string",
          "description": "video reference id (must be unique within the account) "
        },
        "remote_url": {
          "type": "string",
          "description": "the url for a remote asset (not applicable to ingested assets) "
        },
        "remote_stream_name": {
          "type": "string",
          "description": "name for remote streams (not applicable to asset types other than rendition) "
        },
        "size": {
          "type": "number",
          "description": "the size of the asset in bytes (integer) "
        },
        "type": {
          "type": "string",
          "description": "the type of the asset "
        },
        "updated_at": {
          "type": "datestring",
          "description": "when the video was last modified "
        },
        "uploaded_at": {
          "type": "datestring",
          "description": "when the asset was added to the video in Video Cloud "
        },
        "video_duration": {
          "type": "number",
          "description": "video duration in seconds (present if you included it when you created the asset) "
        }
      },
      "required": [
        "id",
        "audio_only",
        "complete",
        "controller_type",
        "current_filename",
        "cdn_origin_id",
        "name",
        "progressive_download",
        "reference_id",
        "remote_url",
        "remote_stream_name",
        "size",
        "type",
        "updated_at",
        "uploaded_at",
        "video_duration"
      ]
    },
    "Update_HLS_ManifestBody": {
      "properties": {
        "reference_id": {
          "type": "string",
          "description": "video reference id (must be unique within the account) "
        },
        "remote_url": {
          "type": "string",
          "description": "the url for a remote asset (not applicable to ingested assets) "
        },
        "video_duration": {
          "type": "number",
          "description": "the duration of the video in seconds "
        }
      },
      "required": [
        "remote_url"
      ]
    },
    "Update_HLS_Manifest200": {
      "properties": {
        "id": {
          "type": "string",
          "description": "the asset id "
        },
        "audio_only": {
          "type": "boolean",
          "description": "not applicable to hls_manifests "
        },
        "complete": {
          "type": "boolean",
          "description": "whether processing is complete for the asset (will be true for remote assets if a remote_url is supplied) "
        },
        "controller_type": {
          "type": "string",
          "description": "the controller type for ingested renditions (not applicable to remote renditions or other types of assets) "
        },
        "current_filename": {
          "type": "string",
          "description": "the filename for an ingested asset in the Video Cloud system (not applicable to remote assets) "
        },
        "cdn_origin_id": {
          "type": "string",
          "description": "an internally used id (not applicable to remote assets) "
        },
        "name": {
          "type": "string",
          "description": "asset name "
        },
        "progressive_download": {
          "type": "boolean",
          "description": "whether ingested rendition is available by progressive download (not applicable to other asset types or remote renditions) "
        },
        "reference_id": {
          "type": "string",
          "description": "video reference id (must be unique within the account) "
        },
        "remote_url": {
          "type": "string",
          "description": "the url for a remote asset (not applicable to ingested assets) "
        },
        "remote_stream_name": {
          "type": "string",
          "description": "name for remote streams (not applicable to asset types other than rendition) "
        },
        "size": {
          "type": "number",
          "description": "the size of the asset in bytes (integer) "
        },
        "type": {
          "type": "string",
          "description": "the type of the asset "
        },
        "updated_at": {
          "type": "datestring",
          "description": "when the video was last modified "
        },
        "uploaded_at": {
          "type": "datestring",
          "description": "when the asset was added to the video in Video Cloud "
        },
        "video_duration": {
          "type": "number",
          "description": "video duration in seconds (present if you included it when you created the asset) "
        }
      },
      "required": [
        "id",
        "audio_only",
        "complete",
        "controller_type",
        "current_filename",
        "cdn_origin_id",
        "name",
        "progressive_download",
        "reference_id",
        "remote_url",
        "remote_stream_name",
        "size",
        "type",
        "updated_at",
        "uploaded_at",
        "video_duration"
      ]
    },
    "Get_ISMC_Manifest200": {
      "properties": {
        "id": {
          "type": "string",
          "description": "the asset id "
        },
        "audio_only": {
          "type": "boolean",
          "description": "not applicable to ismc_manifests "
        },
        "complete": {
          "type": "boolean",
          "description": "whether processing is complete for the asset (will be true for remote assets if a remote_url is supplied) "
        },
        "controller_type": {
          "type": "string",
          "description": "the controller type for ingested renditions (not applicable to remote renditions or other types of assets) "
        },
        "current_filename": {
          "type": "string",
          "description": "the filename for an ingested asset in the Video Cloud system (not applicable to remote assets) "
        },
        "cdn_origin_id": {
          "type": "string",
          "description": "an internally used id (not applicable to remote assets) "
        },
        "name": {
          "type": "string",
          "description": "asset name "
        },
        "progressive_download": {
          "type": "boolean",
          "description": "whether ingested rendition is available by progressive download (not applicable to other asset types or remote renditions) "
        },
        "reference_id": {
          "type": "string",
          "description": "video reference id (must be unique within the account) "
        },
        "remote_url": {
          "type": "string",
          "description": "the url for a remote asset (not applicable to ingested assets) "
        },
        "remote_stream_name": {
          "type": "string",
          "description": "name for remote streams (not applicable to asset types other than rendition) "
        },
        "size": {
          "type": "number",
          "description": "the size of the asset in bytes (integer) "
        },
        "type": {
          "type": "string",
          "description": "the type of the asset "
        },
        "updated_at": {
          "type": "datestring",
          "description": "when the video was last modified "
        },
        "uploaded_at": {
          "type": "datestring",
          "description": "when the asset was added to the video in Video Cloud "
        },
        "video_duration": {
          "type": "number",
          "description": "video duration in seconds (present if you included it when you created the asset) "
        }
      },
      "required": [
        "id",
        "audio_only",
        "complete",
        "controller_type",
        "current_filename",
        "cdn_origin_id",
        "name",
        "progressive_download",
        "reference_id",
        "remote_url",
        "remote_stream_name",
        "size",
        "type",
        "updated_at",
        "uploaded_at",
        "video_duration"
      ]
    },
    "Update_ISMC_ManifestBody": {
      "properties": {
        "reference_id": {
          "type": "string",
          "description": "video reference id (must be unique within the account) "
        },
        "remote_url": {
          "type": "string",
          "description": "the url for a remote asset (not applicable to ingested assets) "
        },
        "video_duration": {
          "type": "number",
          "description": "the duration of the video in seconds "
        }
      },
      "required": [
        "remote_url"
      ]
    },
    "Update_ISMC_Manifest200": {
      "properties": {
        "id": {
          "type": "string",
          "description": "the asset id "
        },
        "audio_only": {
          "type": "boolean",
          "description": "not applicable to ismc_manifests "
        },
        "complete": {
          "type": "boolean",
          "description": "whether processing is complete for the asset (will be true for remote assets if a remote_url is supplied) "
        },
        "controller_type": {
          "type": "string",
          "description": "the controller type for ingested renditions (not applicable to remote renditions or other types of assets) "
        },
        "current_filename": {
          "type": "string",
          "description": "the filename for an ingested asset in the Video Cloud system (not applicable to remote assets) "
        },
        "cdn_origin_id": {
          "type": "string",
          "description": "an internally used id (not applicable to remote assets) "
        },
        "name": {
          "type": "string",
          "description": "asset name "
        },
        "progressive_download": {
          "type": "boolean",
          "description": "whether ingested rendition is available by progressive download (not applicable to other asset types or remote renditions) "
        },
        "reference_id": {
          "type": "string",
          "description": "video reference id (must be unique within the account) "
        },
        "remote_url": {
          "type": "string",
          "description": "the url for a remote asset (not applicable to ingested assets) "
        },
        "remote_stream_name": {
          "type": "string",
          "description": "name for remote streams (not applicable to asset types other than rendition) "
        },
        "size": {
          "type": "number",
          "description": "the size of the asset in bytes (integer) "
        },
        "type": {
          "type": "string",
          "description": "the type of the asset "
        },
        "updated_at": {
          "type": "datestring",
          "description": "when the video was last modified "
        },
        "uploaded_at": {
          "type": "datestring",
          "description": "when the asset was added to the video in Video Cloud "
        },
        "video_duration": {
          "type": "number",
          "description": "video duration in seconds (present if you included it when you created the asset) "
        }
      },
      "required": [
        "id",
        "audio_only",
        "complete",
        "controller_type",
        "current_filename",
        "cdn_origin_id",
        "name",
        "progressive_download",
        "reference_id",
        "remote_url",
        "remote_stream_name",
        "size",
        "type",
        "updated_at",
        "uploaded_at",
        "video_duration"
      ]
    },
    "Get_ISM_Manifest200": {
      "properties": {
        "id": {
          "type": "string",
          "description": "the asset id "
        },
        "audio_only": {
          "type": "boolean",
          "description": "not applicable to ism_manifests "
        },
        "complete": {
          "type": "boolean",
          "description": "whether processing is complete for the asset (will be true for remote assets if a remote_url is supplied) "
        },
        "controller_type": {
          "type": "string",
          "description": "the controller type for ingested renditions (not applicable to remote renditions or other types of assets) "
        },
        "current_filename": {
          "type": "string",
          "description": "the filename for an ingested asset in the Video Cloud system (not applicable to remote assets) "
        },
        "cdn_origin_id": {
          "type": "string",
          "description": "an internally used id (not applicable to remote assets) "
        },
        "name": {
          "type": "string",
          "description": "asset name "
        },
        "progressive_download": {
          "type": "boolean",
          "description": "whether ingested rendition is available by progressive download (not applicable to other asset types or remote renditions) "
        },
        "reference_id": {
          "type": "string",
          "description": "video reference id (must be unique within the account) "
        },
        "remote_url": {
          "type": "string",
          "description": "the url for a remote asset (not applicable to ingested assets) "
        },
        "remote_stream_name": {
          "type": "string",
          "description": "name for remote streams (not applicable to asset types other than rendition) "
        },
        "size": {
          "type": "number",
          "description": "the size of the asset in bytes (integer) "
        },
        "type": {
          "type": "string",
          "description": "the type of the asset "
        },
        "updated_at": {
          "type": "datestring",
          "description": "when the video was last modified "
        },
        "uploaded_at": {
          "type": "datestring",
          "description": "when the asset was added to the video in Video Cloud "
        },
        "video_duration": {
          "type": "number",
          "description": "video duration in seconds (present if you included it when you created the asset) "
        }
      },
      "required": [
        "id",
        "audio_only",
        "complete",
        "controller_type",
        "current_filename",
        "cdn_origin_id",
        "name",
        "progressive_download",
        "reference_id",
        "remote_url",
        "remote_stream_name",
        "size",
        "type",
        "updated_at",
        "uploaded_at",
        "video_duration"
      ]
    },
    "Update_ISM_ManifestBody": {
      "properties": {
        "reference_id": {
          "type": "string",
          "description": "video reference id (must be unique within the account) "
        },
        "remote_url": {
          "type": "string",
          "description": "the url for a remote asset (not applicable to ingested assets) "
        },
        "video_duration": {
          "type": "number",
          "description": "the duration of the video in seconds "
        }
      },
      "required": [
        "remote_url"
      ]
    },
    "Update_ISM_Manifest200": {
      "properties": {
        "id": {
          "type": "string",
          "description": "the asset id "
        },
        "audio_only": {
          "type": "boolean",
          "description": "not applicable to ism_manifests "
        },
        "complete": {
          "type": "boolean",
          "description": "whether processing is complete for the asset (will be true for remote assets if a remote_url is supplied) "
        },
        "controller_type": {
          "type": "string",
          "description": "the controller type for ingested renditions (not applicable to remote renditions or other types of assets) "
        },
        "current_filename": {
          "type": "string",
          "description": "the filename for an ingested asset in the Video Cloud system (not applicable to remote assets) "
        },
        "cdn_origin_id": {
          "type": "string",
          "description": "an internally used id (not applicable to remote assets) "
        },
        "name": {
          "type": "string",
          "description": "asset name "
        },
        "progressive_download": {
          "type": "boolean",
          "description": "whether ingested rendition is available by progressive download (not applicable to other asset types or remote renditions) "
        },
        "reference_id": {
          "type": "string",
          "description": "video reference id (must be unique within the account) "
        },
        "remote_url": {
          "type": "string",
          "description": "the url for a remote asset (not applicable to ingested assets) "
        },
        "remote_stream_name": {
          "type": "string",
          "description": "name for remote streams (not applicable to asset types other than rendition) "
        },
        "size": {
          "type": "number",
          "description": "the size of the asset in bytes (integer) "
        },
        "type": {
          "type": "string",
          "description": "the type of the asset "
        },
        "updated_at": {
          "type": "datestring",
          "description": "when the video was last modified "
        },
        "uploaded_at": {
          "type": "datestring",
          "description": "when the asset was added to the video in Video Cloud "
        },
        "video_duration": {
          "type": "number",
          "description": "video duration in seconds (present if you included it when you created the asset) "
        }
      },
      "required": [
        "id",
        "audio_only",
        "complete",
        "controller_type",
        "current_filename",
        "cdn_origin_id",
        "name",
        "progressive_download",
        "reference_id",
        "remote_url",
        "remote_stream_name",
        "size",
        "type",
        "updated_at",
        "uploaded_at",
        "video_duration"
      ]
    },
    "Get_Poster200": {
      "properties": {
        "id": {
          "type": "string",
          "description": "the asset id "
        },
        "audio_only": {
          "type": "boolean",
          "description": "not applicable to posters "
        },
        "complete": {
          "type": "boolean",
          "description": "whether processing is complete for the asset (will be true for remote assets if a remote_url is supplied) "
        },
        "controller_type": {
          "type": "string",
          "description": "the controller type for ingested renditions (not applicable to remote renditions or other types of assets) "
        },
        "current_filename": {
          "type": "string",
          "description": "the filename for an ingested asset in the Video Cloud system (not applicable to remote assets) "
        },
        "cdn_origin_id": {
          "type": "string",
          "description": "an internally used id (not applicable to remote assets) "
        },
        "name": {
          "type": "string",
          "description": "asset name "
        },
        "progressive_download": {
          "type": "boolean",
          "description": "whether ingested rendition is available by progressive download (not applicable to other asset types or remote renditions) "
        },
        "reference_id": {
          "type": "string",
          "description": "video reference id (must be unique within the account) "
        },
        "remote_url": {
          "type": "string",
          "description": "the url for a remote asset (not applicable to ingested assets) "
        },
        "remote_stream_name": {
          "type": "string",
          "description": "name for remote streams (not applicable to asset types other than rendition) "
        },
        "size": {
          "type": "number",
          "description": "the size of the asset in bytes (integer) "
        },
        "type": {
          "type": "string",
          "description": "the type of the asset "
        },
        "updated_at": {
          "type": "datestring",
          "description": "when the video was last modified "
        },
        "uploaded_at": {
          "type": "datestring",
          "description": "when the asset was added to the video in Video Cloud "
        }
      },
      "required": [
        "id",
        "audio_only",
        "complete",
        "controller_type",
        "current_filename",
        "cdn_origin_id",
        "name",
        "progressive_download",
        "reference_id",
        "remote_url",
        "remote_stream_name",
        "size",
        "type",
        "updated_at",
        "uploaded_at"
      ]
    },
    "Update_PosterBody": {
      "properties": {
        "reference_id": {
          "type": "string",
          "description": "video reference id (must be unique within the account) "
        },
        "remote_url": {
          "type": "string",
          "description": "the url for a remote asset (not applicable to ingested assets) "
        }
      },
      "required": [
        "remote_url"
      ]
    },
    "Update_Poster200": {
      "properties": {
        "id": {
          "type": "string",
          "description": "the asset id "
        },
        "audio_only": {
          "type": "boolean",
          "description": "not applicable to posters "
        },
        "complete": {
          "type": "boolean",
          "description": "whether processing is complete for the asset (will be true for remote assets if a remote_url is supplied) "
        },
        "controller_type": {
          "type": "string",
          "description": "the controller type for ingested renditions (not applicable to remote renditions or other types of assets) "
        },
        "current_filename": {
          "type": "string",
          "description": "the filename for an ingested asset in the Video Cloud system (not applicable to remote assets) "
        },
        "cdn_origin_id": {
          "type": "string",
          "description": "an internally used id (not applicable to remote assets) "
        },
        "name": {
          "type": "string",
          "description": "asset name "
        },
        "progressive_download": {
          "type": "boolean",
          "description": "whether ingested rendition is available by progressive download (not applicable to other asset types or remote renditions) "
        },
        "reference_id": {
          "type": "string",
          "description": "video reference id (must be unique within the account) "
        },
        "remote_url": {
          "type": "string",
          "description": "the url for a remote asset (not applicable to ingested assets) "
        },
        "remote_stream_name": {
          "type": "string",
          "description": "name for remote streams (not applicable to asset types other than rendition) "
        },
        "size": {
          "type": "number",
          "description": "the size of the asset in bytes (integer) "
        },
        "type": {
          "type": "string",
          "description": "the type of the asset "
        },
        "updated_at": {
          "type": "datestring",
          "description": "when the video was last modified "
        },
        "uploaded_at": {
          "type": "datestring",
          "description": "when the asset was added to the video in Video Cloud "
        }
      },
      "required": [
        "id",
        "audio_only",
        "complete",
        "controller_type",
        "current_filename",
        "cdn_origin_id",
        "name",
        "progressive_download",
        "reference_id",
        "remote_url",
        "remote_stream_name",
        "size",
        "type",
        "updated_at",
        "uploaded_at"
      ]
    },
    "Get_Rendition200": {
      "properties": {
        "account_id": {
          "type": "string",
          "description": "the Video Cloud account id "
        },
        "id": {
          "type": "string",
          "description": "the asset id "
        },
        "whether": {
          "type": "boolean",
          "description": "this rendition contains only an audio track, no video track (a rendition for low bandwidth devices) "
        },
        "cdn_origin_id": {
          "type": "string",
          "description": "an internally used id (not applicable to remote assets) "
        },
        "complete": {
          "type": "boolean",
          "description": "whether processing is complete for the asset (will be true for remote assets if a remote_url is supplied) "
        },
        "controller_type": {
          "type": "string",
          "description": "the controller type for ingested renditions (not applicable to remote renditions or other types of assets) "
        },
        "current_filename": {
          "type": "string",
          "description": "the filename for an ingested asset in the Video Cloud system (not applicable to remote assets) "
        },
        "drm": {
          "type": "object",
          "description": "DRM packaging details (not applicable to remote assets) ",
          "$ref": "#/definitions/drm"
        },
        "encoding_rate": {
          "type": "number",
          "description": "average encoding rate in kbps "
        },
        "frame_height": {
          "type": "number",
          "description": "frame height in pixels "
        },
        "frame_width": {
          "type": "number",
          "description": "frame width in pixels "
        },
        "key_systems": {
          "type": "array",
          "description": "array of strings that denote the kind of encryption used for DRM packaged renditions ",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string",
          "description": "asset name "
        },
        "progressive_download": {
          "type": "boolean",
          "description": "whether ingested rendition is available by progressive download (not applicable to other asset types or remote renditions) "
        },
        "reference_id": {
          "type": "string",
          "description": "video reference id (must be unique within the account) "
        },
        "remote_url": {
          "type": "string",
          "description": "the url for a remote asset (not applicable to ingested assets) "
        },
        "remote_stream_name": {
          "type": "string",
          "description": "name for remote streams (not applicable to asset types other than rendition) "
        },
        "size": {
          "type": "number",
          "description": "the size of the asset in bytes (integer) "
        },
        "type": {
          "type": "string",
          "description": "the type of the asset "
        },
        "updated_at": {
          "type": "datestring",
          "description": "when the video was last modified "
        },
        "uploaded_at": {
          "type": "datestring",
          "description": "when the asset was added to the video in Video Cloud "
        },
        "video_codec": {
          "type": "string",
          "description": "not applicable to remote assets "
        },
        "video_container": {
          "type": "string",
          "description": "not applicable to remote assets "
        },
        "video_duration": {
          "type": "number",
          "description": "duration in milliseconds "
        }
      },
      "required": [
        "account_id",
        "id",
        "whether",
        "cdn_origin_id",
        "complete",
        "controller_type",
        "current_filename",
        "drm",
        "encoding_rate",
        "frame_height",
        "frame_width",
        "key_systems",
        "name",
        "progressive_download",
        "reference_id",
        "remote_url",
        "remote_stream_name",
        "size",
        "type",
        "updated_at",
        "uploaded_at",
        "video_codec",
        "video_container",
        "video_duration"
      ]
    },
    "Update_RenditionBody": {
      "properties": {
        "audio_only": {
          "type": "boolean",
          "description": "whether this is only an audio track "
        },
        "encoding_rate": {
          "type": "number",
          "description": "average encoding_rate in kbps "
        },
        "frame_height": {
          "type": "number",
          "description": "frame height in pixels "
        },
        "frame_width": {
          "type": "number",
          "description": "frame width in pixels "
        },
        "name": {
          "type": "string",
          "description": "asset name "
        },
        "reference_id": {
          "type": "string",
          "description": "video reference-id (must be unique within the account) "
        },
        "remote_url": {
          "type": "string",
          "description": "the url for a remote asset (not applicable to ingested assets) "
        },
        "size": {
          "type": "number",
          "description": "the size of the asset in bytes (integer) "
        },
        "video_duration": {
          "type": "number",
          "description": "duration in milliseconds "
        },
        "video_codec": {
          "type": "string",
          "description": "the video codec &mdash; support for video formats varies across browsers and devices; for the broadest support use h264 "
        },
        "video_container": {
          "type": "string",
          "description": "the video container such as MP4 or M2TS "
        }
      },
      "required": [
        "remote_url"
      ]
    },
    "Update_Rendition200": {
      "properties": {
        "account_id": {
          "type": "string",
          "description": "the Video Cloud account id "
        },
        "id": {
          "type": "string",
          "description": "the asset id "
        },
        "audio_only": {
          "type": "boolean",
          "description": "not applicable to thumbnails "
        },
        "cdn_origin_id": {
          "type": "string",
          "description": "an internally used id (not applicable to remote assets) "
        },
        "complete": {
          "type": "boolean",
          "description": "whether processing is complete for the asset (will be true for remote assets if a remote_url is supplied) "
        },
        "controller_type": {
          "type": "string",
          "description": "the controller type for ingested renditions (not applicable to remote renditions or other types of assets) "
        },
        "current_filename": {
          "type": "string",
          "description": "the filename for an ingested asset in the Video Cloud system (not applicable to remote assets) "
        },
        "drm": {
          "type": "object",
          "description": "DRM packaging details (not applicable to remote assets) ",
          "$ref": "#/definitions/drm"
        },
        "encoding_rate": {
          "type": "number",
          "description": "average encoding rate in kbps "
        },
        "frame_height": {
          "type": "number",
          "description": "frame height in pixels "
        },
        "frame_width": {
          "type": "number",
          "description": "frame width in pixels "
        },
        "name": {
          "type": "string",
          "description": "asset name "
        },
        "progressive_download": {
          "type": "boolean",
          "description": "whether ingested rendition is available by progressive download (not applicable to other asset types or remote renditions) "
        },
        "reference_id": {
          "type": "string",
          "description": "video reference id (must be unique within the account) "
        },
        "remote_url": {
          "type": "string",
          "description": "the url for a remote asset (not applicable to ingested assets) "
        },
        "remote_stream_name": {
          "type": "string",
          "description": "name for remote streams (not applicable to asset types other than rendition) "
        },
        "size": {
          "type": "number",
          "description": "the size of the asset in bytes (integer) "
        },
        "type": {
          "type": "string",
          "description": "the type of the asset "
        },
        "updated_at": {
          "type": "datestring",
          "description": "when the video was last modified "
        },
        "uploaded_at": {
          "type": "datestring",
          "description": "when the asset was added to the video in Video Cloud "
        },
        "video_codec": {
          "type": "string",
          "description": "not applicable to remote assets "
        },
        "video_container": {
          "type": "string",
          "description": "not applicable to remote assets "
        },
        "video_duration": {
          "type": "number",
          "description": "duration in milliseconds "
        }
      },
      "required": [
        "account_id",
        "id",
        "audio_only",
        "cdn_origin_id",
        "complete",
        "controller_type",
        "current_filename",
        "drm",
        "encoding_rate",
        "frame_height",
        "frame_width",
        "name",
        "progressive_download",
        "reference_id",
        "remote_url",
        "remote_stream_name",
        "size",
        "type",
        "updated_at",
        "uploaded_at",
        "video_codec",
        "video_container",
        "video_duration"
      ]
    },
    "Get_Thumbnail200": {
      "properties": {
        "id": {
          "type": "string",
          "description": "the asset id "
        },
        "audio_only": {
          "type": "boolean",
          "description": "not applicable to thumbnails "
        },
        "complete": {
          "type": "boolean",
          "description": "whether processing is complete for the asset (will be true for remote assets if a remote_url is supplied) "
        },
        "controller_type": {
          "type": "string",
          "description": "the controller type for ingested renditions (not applicable to remote renditions or other types of assets) "
        },
        "current_filename": {
          "type": "string",
          "description": "the filename for an ingested asset in the Video Cloud system (not applicable to remote assets) "
        },
        "cdn_origin_id": {
          "type": "string",
          "description": "an internally used id (not applicable to remote assets) "
        },
        "name": {
          "type": "string",
          "description": "asset name "
        },
        "progressive_download": {
          "type": "boolean",
          "description": "whether ingested rendition is available by progressive download (not applicable to other asset types or remote renditions) "
        },
        "reference_id": {
          "type": "string",
          "description": "video reference id (must be unique within the account) "
        },
        "remote_url": {
          "type": "string",
          "description": "the url for a remote asset (not applicable to ingested assets) "
        },
        "remote_stream_name": {
          "type": "string",
          "description": "name for remote streams (not applicable to asset types other than rendition) "
        },
        "size": {
          "type": "number",
          "description": "the size of the asset in bytes (integer) "
        },
        "type": {
          "type": "string",
          "description": "the type of the asset "
        },
        "updated_at": {
          "type": "datestring",
          "description": "when the video was last modified "
        },
        "uploaded_at": {
          "type": "datestring",
          "description": "when the asset was added to the video in Video Cloud "
        }
      },
      "required": [
        "id",
        "audio_only",
        "complete",
        "controller_type",
        "current_filename",
        "cdn_origin_id",
        "name",
        "progressive_download",
        "reference_id",
        "remote_url",
        "remote_stream_name",
        "size",
        "type",
        "updated_at",
        "uploaded_at"
      ]
    },
    "Update_ThumbnailBody": {
      "properties": {
        "reference_id": {
          "type": "string",
          "description": "video reference id (must be unique within the account) "
        },
        "remote_url": {
          "type": "string",
          "description": "the url for a remote asset (not applicable to ingested assets) "
        }
      },
      "required": [
        "remote_url"
      ]
    },
    "Update_Thumbnail200": {
      "properties": {
        "id": {
          "type": "string",
          "description": "the asset id "
        },
        "audio_only": {
          "type": "boolean",
          "description": "not applicable to thumbnails "
        },
        "complete": {
          "type": "boolean",
          "description": "whether processing is complete for the asset (will be true for remote assets if a remote_url is supplied) "
        },
        "controller_type": {
          "type": "string",
          "description": "the controller type for ingested renditions (not applicable to remote renditions or other types of assets) "
        },
        "current_filename": {
          "type": "string",
          "description": "the filename for an ingested asset in the Video Cloud system (not applicable to remote assets) "
        },
        "cdn_origin_id": {
          "type": "string",
          "description": "an internally used id (not applicable to remote assets) "
        },
        "name": {
          "type": "string",
          "description": "asset name "
        },
        "progressive_download": {
          "type": "boolean",
          "description": "whether ingested rendition is available by progressive download (not applicable to other asset types or remote renditions) "
        },
        "reference_id": {
          "type": "string",
          "description": "video reference id (must be unique within the account) "
        },
        "remote_url": {
          "type": "string",
          "description": "the url for a remote asset (not applicable to ingested assets) "
        },
        "remote_stream_name": {
          "type": "string",
          "description": "name for remote streams (not applicable to asset types other than rendition) "
        },
        "size": {
          "type": "number",
          "description": "the size of the asset in bytes (integer) "
        },
        "type": {
          "type": "string",
          "description": "the type of the asset "
        },
        "updated_at": {
          "type": "datestring",
          "description": "when the video was last modified "
        },
        "uploaded_at": {
          "type": "datestring",
          "description": "when the asset was added to the video in Video Cloud "
        }
      },
      "required": [
        "id",
        "audio_only",
        "complete",
        "controller_type",
        "current_filename",
        "cdn_origin_id",
        "name",
        "progressive_download",
        "reference_id",
        "remote_url",
        "remote_stream_name",
        "size",
        "type",
        "updated_at",
        "uploaded_at"
      ]
    },
    "Get_Assets200": {
      "properties": {
        "account_id": {
          "type": "string",
          "description": "the Video Cloud account id "
        },
        "id": {
          "type": "string",
          "description": "the asset id "
        },
        "audio_only": {
          "type": "boolean",
          "description": "whether this rendition contains only an audio track, no video track (a rendition for low bandwidth devices) "
        },
        "cdn_origin_id": {
          "type": "string",
          "description": "an internally used id (not applicable to remote assets) "
        },
        "complete": {
          "type": "boolean",
          "description": "whether processing is complete for the asset (will be true for remote assets if a remote_url is supplied) "
        },
        "controller_type": {
          "type": "string",
          "description": "the controller type for ingested renditions (not applicable to remote renditions or other types of assets) "
        },
        "current_filename": {
          "type": "string",
          "description": "the filename for an ingested asset in the Video Cloud system (not applicable to remote assets) "
        },
        "drm": {
          "type": "object",
          "description": "DRM packaging details (not applicable to remote assets) ",
          "$ref": "#/definitions/drm"
        },
        "encoding_rate": {
          "type": "number",
          "description": "average encoding rate in kbps "
        },
        "frame_height": {
          "type": "number",
          "description": "frame height in pixels "
        },
        "frame_width": {
          "type": "number",
          "description": "frame width in pixels "
        },
        "key_systems": {
          "type": "array",
          "description": "array of strings that denote the kind of encryption used for DRM packaged renditions ",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string",
          "description": "asset name "
        },
        "progressive_download": {
          "type": "boolean",
          "description": "whether ingested rendition is available by progressive download (not applicable to other asset types or remote renditions) "
        },
        "reference_id": {
          "type": "string",
          "description": "video reference id (must be unique within the account) "
        },
        "remote_url": {
          "type": "string",
          "description": "the url for a remote asset (not applicable to ingested assets) "
        },
        "remote_stream_name": {
          "type": "string",
          "description": "name for remote streams (not applicable to asset types other than rendition) "
        },
        "size": {
          "type": "number",
          "description": "the size of the asset in bytes (integer) "
        },
        "type": {
          "type": "string",
          "description": "the type of the asset "
        },
        "updated_at": {
          "type": "datestring",
          "description": "when the video was last modified "
        },
        "uploaded_at": {
          "type": "datestring",
          "description": "when the asset was added to the video in Video Cloud "
        },
        "video_codec": {
          "type": "string",
          "description": "not applicable to remote assets "
        },
        "video_container": {
          "type": "string",
          "description": "not applicable to remote assets "
        },
        "video_duration": {
          "type": "number",
          "description": "duration in milliseconds "
        }
      },
      "required": [
        "account_id",
        "id",
        "audio_only",
        "cdn_origin_id",
        "complete",
        "controller_type",
        "current_filename",
        "drm",
        "encoding_rate",
        "frame_height",
        "frame_width",
        "key_systems",
        "name",
        "progressive_download",
        "reference_id",
        "remote_url",
        "remote_stream_name",
        "size",
        "type",
        "updated_at",
        "uploaded_at",
        "video_codec",
        "video_container",
        "video_duration"
      ]
    },
    "Get_Dynamic_Renditions200": {
      "properties": {
        "rendition_id": {
          "type": "string",
          "description": "the rendition id "
        },
        "media_type": {
          "type": "boolean",
          "description": "media type for the rendition (audio or video) "
        },
        "drm": {
          "type": "object",
          "description": "DRM packaging details (not applicable to remote assets) ",
          "$ref": "#/definitions/drm"
        },
        "encoding_rate": {
          "type": "number",
          "description": "average encoding rate in kbps "
        },
        "frame_height": {
          "type": "number",
          "description": "frame height in pixels "
        },
        "frame_width": {
          "type": "number",
          "description": "frame width in pixels "
        },
        "size": {
          "type": "number",
          "description": "the size of the asset in bytes (integer) "
        },
        "updated_at": {
          "type": "datestring",
          "description": "when the video was last modified "
        },
        "uploaded_at": {
          "type": "datestring",
          "description": "when the asset was added to the video in Video Cloud "
        },
        "duration": {
          "type": "number",
          "description": "duration in milliseconds "
        },
        "audio_configuration": {
          "type": "string",
          "description": "The audio configuration of the audio track "
        },
        "variant": {
          "type": "string",
          "description": "The variant of the HLS profile (baseline, main, or high) "
        }
      },
      "required": [
        "rendition_id",
        "media_type",
        "drm",
        "encoding_rate",
        "frame_height",
        "frame_width",
        "size",
        "updated_at",
        "uploaded_at",
        "duration",
        "audio_configuration",
        "variant"
      ]
    },
    "Create_FolderBody": {
      "properties": {
        "name": {
          "type": "string",
          "description": "name of the folder (must be unique in the account) "
        }
      },
      "required": [
        "name"
      ]
    },
    "Create_Folder200": {
      "properties": {
        "account_id": {
          "type": "string",
          "description": "Video Cloud account id "
        },
        "created_at": {
          "type": "datestring",
          "description": "date/time folder created "
        },
        "updated_at": {
          "type": "datestring",
          "description": "date/time folder last modified "
        },
        "id": {
          "type": "string",
          "description": "system id for the folder "
        },
        "name": {
          "type": "string",
          "description": "folder name "
        },
        "video_count": {
          "type": "string",
          "description": "number of videos in the folder "
        }
      },
      "required": [
        "account_id",
        "created_at",
        "updated_at",
        "id",
        "name",
        "video_count"
      ]
    },
    "Get_Folders200": {
      "properties": {
        "account_id": {
          "type": "string",
          "description": "Video Cloud account id "
        },
        "created_at": {
          "type": "datestring",
          "description": "date/time folder created "
        },
        "updated_at": {
          "type": "datestring",
          "description": "date/time folder last modified "
        },
        "id": {
          "type": "string",
          "description": "system id for the folder "
        },
        "name": {
          "type": "string",
          "description": "folder name "
        },
        "video_count": {
          "type": "string",
          "description": "number of videos in the folder "
        }
      },
      "required": [
        "account_id",
        "created_at",
        "updated_at",
        "id",
        "name",
        "video_count"
      ]
    },
    "Delete_Folder200": {
      "properties": {
        "account_id": {
          "type": "string",
          "description": "Video Cloud account id "
        },
        "created_at": {
          "type": "datestring",
          "description": "date/time folder created "
        },
        "updated_at": {
          "type": "datestring",
          "description": "date/time folder last modified "
        },
        "id": {
          "type": "string",
          "description": "system id for the folder "
        },
        "name": {
          "type": "string",
          "description": "folder name "
        },
        "video_count": {
          "type": "string",
          "description": "number of videos in the folder "
        }
      },
      "required": [
        "account_id",
        "created_at",
        "updated_at",
        "id",
        "name",
        "video_count"
      ]
    },
    "Get_FolderInformation200": {
      "properties": {
        "account_id": {
          "type": "string",
          "description": "Video Cloud account id "
        },
        "created_at": {
          "type": "datestring",
          "description": "date/time folder created "
        },
        "updated_at": {
          "type": "datestring",
          "description": "date/time folder last modified "
        },
        "id": {
          "type": "string",
          "description": "system id for the folder "
        },
        "name": {
          "type": "string",
          "description": "folder name "
        },
        "video_count": {
          "type": "string",
          "description": "number of videos in the folder "
        }
      },
      "required": [
        "account_id",
        "created_at",
        "updated_at",
        "id",
        "name",
        "video_count"
      ]
    },
    "Update_Folder_NameBody": {
      "properties": {
        "name": {
          "type": "string",
          "description": "name of the folder (must be unique in the account) "
        }
      },
      "required": [
        "name"
      ]
    },
    "Update_Folder_Name200": {
      "properties": {
        "account_id": {
          "type": "string",
          "description": "Video Cloud account id "
        },
        "created_at": {
          "type": "datestring",
          "description": "date/time folder created "
        },
        "updated_at": {
          "type": "datestring",
          "description": "date/time folder last modified "
        },
        "id": {
          "type": "string",
          "description": "system id for the folder "
        },
        "name": {
          "type": "string",
          "description": "folder name "
        },
        "video_count": {
          "type": "string",
          "description": "number of videos in the folder "
        }
      },
      "required": [
        "account_id",
        "created_at",
        "updated_at",
        "id",
        "name",
        "video_count"
      ]
    },
    "Get_Videos_in_Folder200": {
      "properties": {
        "id": {
          "type": "string",
          "description": "video id "
        },
        "name": {
          "type": "string",
          "description": "video title "
        },
        "complete": {
          "type": "boolean",
          "description": "whether processing is complete "
        },
        "created_at": {
          "type": "datestring",
          "description": "when the video was created "
        },
        "custom_fields": {
          "type": "object",
          "description": "map of fieldname-value pairs ",
          "$ref": "#/definitions/custom_fields"
        },
        "cue_points": {
          "type": "object",
          "description": "array of cue point maps ",
          "$ref": "#/definitions/cue_points"
        },
        "description": {
          "type": "string",
          "description": "video short description "
        },
        "duration": {
          "type": "number",
          "description": "video duration in milliseconds "
        },
        "digital_master_id": {
          "type": "string",
          "description": "asset id of the digital master "
        },
        "Economics": {
          "type": "string",
          "description": "whether video is AD_ENABLED (used by the Smart Player, not by the Brightcove Player) "
        },
        "geo": {
          "type": "object",
          "description": "map of geo-filtering properties ",
          "$ref": "#/definitions/geo"
        },
        "images": {
          "type": "object",
          "description": "map of image maps ",
          "$ref": "#/definitions/images"
        },
        "link": {
          "type": "object",
          "description": "map of scheduling properties ",
          "$ref": "#/definitions/link"
        },
        "long_description": {
          "type": "string",
          "description": "video long description "
        },
        "reference_id": {
          "type": "string",
          "description": "video reference-id (must be unique within the account) "
        },
        "schedule": {
          "type": "object",
          "description": "map of scheduling properties ",
          "$ref": "#/definitions/schedule"
        },
        "starts_at": {
          "type": "datestring",
          "description": "start date-time of availability in ISO-8601(http://www.ecma-international.org/ecma-262/5.1/#sec-15.9.1.15) format "
        },
        "ends_at": {
          "type": "datestring",
          "description": "end date-time of availability in ISO-8601(http://www.ecma-international.org/ecma-262/5.1/#sec-15.9.1.15) format "
        },
        "state": {
          "type": "string",
          "description": "state determines whether the video is playable or not "
        },
        "sharing": {
          "type": "object",
          "description": "map of the sharing properties for the video ",
          "$ref": "#/definitions/sharing"
        },
        "tags": {
          "type": "array",
          "description": "array of tags ",
          "items": {
            "type": "string"
          }
        },
        "text_tracks": {
          "type": "object",
          "description": "array of text track maps ",
          "$ref": "#/definitions/text_tracks"
        },
        "updated_at": {
          "type": "datestring",
          "description": "when the video was last modified "
        }
      },
      "required": [
        "id",
        "name",
        "complete",
        "created_at",
        "custom_fields",
        "cue_points",
        "description",
        "duration",
        "digital_master_id",
        "Economics",
        "geo",
        "images",
        "link",
        "long_description",
        "reference_id",
        "schedule",
        "starts_at",
        "ends_at",
        "state",
        "sharing",
        "tags",
        "text_tracks",
        "updated_at"
      ]
    },
    "cue_points": {
      "properties": {
        "name": {
          "type": "string",
          "description": "cue point name "
        },
        "type": {
          "type": "string",
          "description": "cue point type "
        },
        "time": {
          "type": "number",
          "description": "time of the cue point in seconds; example: 10.527 "
        },
        "metadata": {
          "type": "string",
          "description": "optional metadata string (128 single-byte characters maximum) "
        },
        "force-stop": {
          "type": "boolean",
          "description": "whether video is force-stopped at the cue point "
        }
      },
      "required": [
        "name",
        "type",
        "time",
        "metadata",
        "force-stop"
      ]
    },
    "geo": {
      "properties": {
        "countries": {
          "type": "string",
          "description": "array of ISO 3166 list of 2-letter codes(https://www.iso.org/obp/ui/#home) (search for &quot;country codes&quot;) "
        },
        "exclude_countries": {
          "type": "boolean",
          "description": "if true, country array is treated as a list of countries excluded from viewing "
        },
        "restricted": {
          "type": "boolean",
          "description": "whether geo-restriction is enabled for this video "
        }
      },
      "required": [
        "countries",
        "exclude_countries",
        "restricted"
      ]
    },
    "images": {
      "properties": {
        "poster": {
          "type": "object",
          "description": "map of poster properties ",
          "$ref": "#/definitions/images.poster"
        },
        "thumbnail": {
          "type": "object",
          "description": "map of thumbnail properties ",
          "$ref": "#/definitions/images.thumbnail"
        }
      },
      "required": [
        "poster",
        "thumbnail"
      ]
    },
    "images.poster": {
      "properties": {
        "asset_id": {
          "type": "string",
          "description": "asset id for the poster "
        },
        "sources": {
          "type": "array",
          "description": "array of poster source maps ",
          "items": {
            "$ref": "#/definitions/images.poster.sources"
          }
        },
        "src": {
          "type": "string",
          "description": "URL for the default poster source image "
        }
      },
      "required": [
        "asset_id",
        "sources",
        "src"
      ]
    },
    "images.poster.sources": {
      "properties": {
        "src": {
          "type": "string",
          "description": "URL for a poster source image "
        }
      },
      "required": [
        "src"
      ]
    },
    "images.thumbnail": {
      "properties": {
        "asset_id": {
          "type": "string",
          "description": "asset id for the thumbnail "
        },
        "sources": {
          "type": "array",
          "description": "array of thumbnail source maps ",
          "items": {
            "$ref": "#/definitions/images.thumbnail.sources"
          }
        },
        "src": {
          "type": "string",
          "description": "URL for the default thumbnail source image "
        }
      },
      "required": [
        "asset_id",
        "sources",
        "src"
      ]
    },
    "images.thumbnail.sources": {
      "properties": {
        "src": {
          "type": "string",
          "description": "URL for a thumbnail source image "
        }
      },
      "required": [
        "src"
      ]
    },
    "link": {
      "properties": {
        "text": {
          "type": "string",
          "description": "text for the link "
        },
        "url": {
          "type": "string",
          "description": "URL for the link "
        }
      },
      "required": [
        "text",
        "url"
      ]
    },
    "sharing": {
      "properties": {
        "by_external_acct": {
          "type": "boolean",
          "description": "whether the video was shared from another account "
        },
        "by_id": {
          "type": "string",
          "description": "id of the account that shared the video; note that this field is populated only for the shared copy, not for the original video "
        },
        "source_id": {
          "type": "string",
          "description": "id of the video in its original account; note that this field is populated only for the shared copy, not for the original video "
        },
        "to_external_acct": {
          "type": "boolean",
          "description": "whether the video is shared to another account "
        },
        "by_reference": {
          "type": "boolean",
          "description": "whether the video is shared by reference "
        }
      },
      "required": [
        "by_external_acct",
        "by_id",
        "source_id",
        "to_external_acct",
        "by_reference"
      ]
    },
    "text_tracks": {
      "properties": {
        "src": {
          "type": "string",
          "description": "URL for the .vtt file "
        },
        "kind": {
          "type": "string",
          "description": "kind of text track "
        },
        "srclang": {
          "type": "string",
          "description": "2-letter language code, such as &quot;en&quot; or &quot;ko&quot; "
        },
        "mime_type": {
          "type": "string",
          "description": "mime-type for the track "
        },
        "label": {
          "type": "string",
          "description": "label for the track "
        },
        "default": {
          "type": "boolean",
          "description": "whether this is the default track "
        },
        "in_band_metadata_track_dispatch_type": {
          "type": "string",
          "description": "If this field is present, it means that references for this text track are available in the associated video&#39;s manifest "
        }
      },
      "required": [
        "src",
        "kind",
        "srclang",
        "mime_type",
        "label",
        "default",
        "in_band_metadata_track_dispatch_type"
      ]
    },
    "Accept_ShareBody": {
      "properties": {
        "state": {
          "type": "string",
          "description": "determines whether the video is accepted (ACTIVE) or rejected (INACTIVE) "
        }
      },
      "required": [
        "state"
      ]
    },
    "Accept_Share200": {
      "properties": {
        "updated_at": {
          "type": "datestring",
          "description": "when the video was last modified "
        },
        "id": {
          "type": "string",
          "description": "video id "
        },
        "name": {
          "type": "string",
          "description": "video title "
        },
        "complete": {
          "type": "boolean",
          "description": "whether processing is complete &mdash; Note: when you create a new video, the complete property is automatically set to false. As soon as one rendition exists for the video, the complete property will be automatically set to true "
        },
        "ad_keys": {
          "type": "string",
          "description": "string representing the ad key/value pairs assigned to the video. Key/value pairs are formatted as key=value and are separated by ampersands. For example: &quot;adKeys&quot;: &quot;category=sports&amp;live=true&quot; "
        },
        "clip_source_video_id": {
          "type": "string",
          "description": "The ID of the source video that was clipped to produce this video or null if this video is not a clip of another video "
        },
        "created_at": {
          "type": "datestring",
          "description": "when the video was created "
        },
        "custom_fields": {
          "type": "object",
          "description": "map of fieldname-value pairs ",
          "$ref": "#/definitions/custom_fields"
        },
        "cue_points": {
          "type": "object",
          "description": "array of cue point maps ",
          "$ref": "#/definitions/cue_points"
        },
        "description": {
          "type": "string",
          "description": "video short description "
        },
        "duration": {
          "type": "number",
          "description": "video duration in milliseconds "
        },
        "digital_master_id": {
          "type": "string",
          "description": "asset id of the digital master "
        },
        "economics": {
          "type": "string",
          "description": "whether video is AD_SUPPORTED "
        },
        "geo": {
          "type": "object",
          "description": "map of geo-filtering properties ",
          "$ref": "#/definitions/geo"
        },
        "has_digital_master": {
          "type": "boolean",
          "description": "whether video has an archived master than can be used for retranscoding "
        },
        "images": {
          "type": "object",
          "description": "map of image maps ",
          "$ref": "#/definitions/images"
        },
        "link": {
          "type": "object",
          "description": "map of scheduling properties ",
          "$ref": "#/definitions/link"
        },
        "long_description": {
          "type": "string",
          "description": "video long description "
        },
        "offline_enabled": {
          "type": "boolean",
          "description": "whether video is enabled for offline viewing "
        },
        "original_filename": {
          "type": "string",
          "description": "the original file name for the uploaded video "
        },
        "projection": {
          "type": "string",
          "description": "used for 360 videos "
        },
        "published_at": {
          "type": "datestring",
          "description": "start date-time of first activation in ISO-8601(http://www.ecma-international.org/ecma-262/5.1/#sec-15.9.1.15) format "
        },
        "reference_id": {
          "type": "string",
          "description": "video reference-id (must be unique within the account) "
        },
        "schedule": {
          "type": "object",
          "description": "map of scheduling properties ",
          "$ref": "#/definitions/schedule"
        },
        "state": {
          "type": "string",
          "description": "state determines whether the video is playable or not "
        },
        "sharing": {
          "type": "object",
          "description": "map of the sharing properties for the video ",
          "$ref": "#/definitions/sharing"
        },
        "tags": {
          "type": "array",
          "description": "array of tags ",
          "items": {
            "type": "string"
          }
        },
        "text_tracks": {
          "type": "object",
          "description": "array of text track maps ",
          "$ref": "#/definitions/text_tracks"
        }
      },
      "required": [
        "updated_at",
        "id",
        "name",
        "complete",
        "ad_keys",
        "clip_source_video_id",
        "created_at",
        "custom_fields",
        "cue_points",
        "description",
        "duration",
        "digital_master_id",
        "economics",
        "geo",
        "has_digital_master",
        "images",
        "link",
        "long_description",
        "offline_enabled",
        "original_filename",
        "projection",
        "published_at",
        "reference_id",
        "schedule",
        "state",
        "sharing",
        "tags",
        "text_tracks"
      ]
    },
    "schedule": {
      "properties": {
        "starts_at": {
          "type": "string",
          "description": "start date-time of availability in ISO-8601(http://www.ecma-international.org/ecma-262/5.1/#sec-15.9.1.15) format "
        },
        "ends_at": {
          "type": "string",
          "description": "end date-time of availability in ISO-8601(http://www.ecma-international.org/ecma-262/5.1/#sec-15.9.1.15) format "
        }
      },
      "required": [
        "starts_at",
        "ends_at"
      ]
    },
    "Get_Video_by_ID_or_Reference_ID200": {
      "properties": {
        "id": {
          "type": "string",
          "description": "video id "
        },
        "name": {
          "type": "string",
          "description": "video title "
        },
        "complete": {
          "type": "boolean",
          "description": "whether processing is complete &mdash; Note: when you create a new video, the complete property is automatically set to false. As soon as one rendition exists for the video, the complete property will be automatically set to true "
        },
        "ad_keys": {
          "type": "string",
          "description": "string representing the ad key/value pairs assigned to the video. Key/value pairs are formatted as key=value and are separated by ampersands. For example: &quot;adKeys&quot;: &quot;category=sports&amp;live=true&quot; "
        },
        "clip_source_video_id": {
          "type": "string",
          "description": "The ID of the source video that was clipped to produce this video or null if this video is not a clip of another video "
        },
        "created_at": {
          "type": "string",
          "description": "when the video was created "
        },
        "custom_fields": {
          "type": "object",
          "description": "map of fieldname-value pairs ",
          "$ref": "#/definitions/custom_fields"
        },
        "cue_points": {
          "type": "object",
          "description": "array of cue point maps ",
          "$ref": "#/definitions/cue_points"
        },
        "delivery_type": {
          "type": "string",
          "description": "video delivery type - remote, static_origin, dynamic_origin or unknown "
        },
        "description": {
          "type": "string",
          "description": "video short description "
        },
        "drm_disabled": {
          "type": "boolean",
          "description": "if true, the video is not DRM-packaged "
        },
        "duration": {
          "type": "number",
          "description": "video duration in milliseconds "
        },
        "digital_master_id": {
          "type": "string",
          "description": "asset id of the digital master "
        },
        "economics": {
          "type": "string",
          "description": "whether video is AD_SUPPORTED "
        },
        "folder_id": {
          "type": "string",
          "description": "id of the folder that contains the video "
        },
        "geo": {
          "type": "object",
          "description": "map of geo-filtering properties ",
          "$ref": "#/definitions/geo"
        },
        "has_digital_master": {
          "type": "boolean",
          "description": "whether video has an archived master than can be used for retranscoding "
        },
        "images": {
          "type": "object",
          "description": "map of image maps ",
          "$ref": "#/definitions/images"
        },
        "link": {
          "type": "object",
          "description": "map of scheduling properties ",
          "$ref": "#/definitions/link"
        },
        "long_description": {
          "type": "string",
          "description": "video long description "
        },
        "offline_enabled": {
          "type": "boolean",
          "description": "whether video is enabled for offline viewing "
        },
        "original_filename": {
          "type": "string",
          "description": "the original file name for the uploaded video "
        },
        "projection": {
          "type": "string",
          "description": "used for 360 videos "
        },
        "published_at": {
          "type": "string",
          "description": "start date-time of first activation in ISO-8601(http://www.ecma-international.org/ecma-262/5.1/#sec-15.9.1.15) format "
        },
        "reference_id": {
          "type": "string",
          "description": "video reference-id (must be unique within the account) "
        },
        "schedule": {
          "type": "object",
          "description": "map of scheduling properties ",
          "$ref": "#/definitions/schedule"
        },
        "state": {
          "type": "string",
          "description": "state determines whether the video is playable or not "
        },
        "sharing": {
          "type": "object",
          "description": "map of the sharing properties for the video ",
          "$ref": "#/definitions/sharing"
        },
        "tags": {
          "type": "array",
          "description": "array of tags ",
          "items": {
            "type": "string"
          }
        },
        "text_tracks": {
          "type": "object",
          "description": "array of text track maps ",
          "$ref": "#/definitions/text_tracks"
        },
        "updated_at": {
          "type": "string",
          "description": "when the video was last modified "
        }
      },
      "required": [
        "id",
        "name",
        "complete",
        "ad_keys",
        "clip_source_video_id",
        "created_at",
        "custom_fields",
        "cue_points",
        "delivery_type",
        "description",
        "drm_disabled",
        "duration",
        "digital_master_id",
        "economics",
        "folder_id",
        "geo",
        "has_digital_master",
        "images",
        "link",
        "long_description",
        "offline_enabled",
        "original_filename",
        "projection",
        "published_at",
        "reference_id",
        "schedule",
        "state",
        "sharing",
        "tags",
        "text_tracks",
        "updated_at"
      ]
    },
    "Update_VideoBody": {
      "properties": {
        "name": {
          "type": "string",
          "description": "video title "
        },
        "description": {
          "type": "string",
          "description": "video short description "
        },
        "economics": {
          "type": "string",
          "description": "video short description "
        },
        "drm_disabled": {
          "type": "boolean",
          "description": "if DRM is enabled for the account, setting this field to true will prevent this video from being DRM-protected (this field is only available for accounts enabled for Dynamic Delivery and DRM) "
        },
        "long_description": {
          "type": "string",
          "description": "video long description "
        },
        "offline_enabled": {
          "type": "boolean",
          "description": "whether video is enabled for offline viewing (DRM-packaged videos only) "
        },
        "projection": {
          "type": "string",
          "description": "Used for 360 video "
        },
        "reference_id": {
          "type": "string",
          "description": "video reference-id (must be unique within the account) "
        },
        "state": {
          "type": "string",
          "description": "state determines whether the video is playable or not "
        },
        "tags": {
          "type": "array",
          "description": "array of tags - note that tags may not contain commas ",
          "items": {
            "type": "string"
          }
        },
        "custom_fields": {
          "type": "object",
          "description": "map of fieldname-value pairs; values have a maximum length of 1024 single-byte characters Note: be sure to use the internal name for the field, not the display name ",
          "additionalProperties": {
            "type": "string"
          }
        },
        "cue_points": {
          "type": "array",
          "description": "array of cue point maps ",
          "items": {
            "$ref": "#/definitions/Update_VideoBody.cue_points"
          }
        },
        "geo": {
          "type": "object",
          "description": "map of geo-filtering properties ",
          "$ref": "#/definitions/Update_VideoBody.geo"
        },
        "link": {
          "type": "object",
          "description": "map of scheduling properties ",
          "$ref": "#/definitions/Update_VideoBody.link"
        },
        "published_at": {
          "type": "string",
          "description": "ISO-8601 date-time string indicating when the video was published "
        },
        "schedule": {
          "type": "object",
          "description": "map of scheduling properties ",
          "$ref": "#/definitions/Update_VideoBody.schedule"
        },
        "text_tracks": {
          "type": "array",
          "description": "array of text track maps &mdash; NOTE text_tracks are not settable for ingested text_tracks, but are settable otherwise, and can be used to add text tracks to ingested or remote asset videos ",
          "items": {
            "$ref": "#/definitions/Update_VideoBody.text_tracks"
          }
        }
      },
      "required": [
        "published_at"
      ]
    },
    "Update_VideoBody.cue_points": {
      "properties": {
        "name": {
          "type": "string",
          "description": "cue point name "
        },
        "type": {
          "type": "string",
          "description": "cue point type "
        },
        "time": {
          "type": "number",
          "description": "time of the cue point in seconds; example: 10.527 "
        },
        "metadata": {
          "type": "string",
          "description": "optional metadata string (512 single-byte characters maximum) "
        },
        "force-stop": {
          "type": "boolean",
          "description": "whether video is force-stopped at the cue point "
        }
      },
      "required": [
        "type",
        "time"
      ]
    },
    "Update_VideoBody.geo": {
      "properties": {
        "countries": {
          "type": "array",
          "description": "array of ISO 3166 list of 2- or 4-letter codes in lower-case (search for &quot;country codes&quot;) ",
          "items": {
            "type": "string"
          }
        },
        "exclude_countries": {
          "type": "boolean",
          "description": "if true, country array is treated as a list of countries excluded from viewing "
        },
        "restricted": {
          "type": "boolean",
          "description": "whether geo-restriction is enabled for this video "
        }
      },
      "required": []
    },
    "Update_VideoBody.link": {
      "properties": {
        "text": {
          "type": "string",
          "description": "text for the link "
        },
        "url": {
          "type": "url",
          "description": "URL for the link "
        }
      },
      "required": []
    },
    "Update_VideoBody.schedule": {
      "properties": {
        "starts_at": {
          "type": "string",
          "description": "start date-time of availability in ISO-8601 format "
        },
        "ends_at": {
          "type": "string",
          "description": "end date-time of availability in ISO-8601 format "
        }
      },
      "required": []
    },
    "Update_VideoBody.text_tracks": {
      "properties": {
        "src": {
          "type": "string",
          "description": "URL for the .vtt file "
        },
        "kind": {
          "type": "string",
          "description": "kind of text track "
        },
        "srclang": {
          "type": "string",
          "description": "2-letter language code, such as &quot;en&quot; or &quot;ko&quot; "
        },
        "mime_type": {
          "type": "string",
          "description": "mime-type for the track "
        },
        "label": {
          "type": "string",
          "description": "label for the track "
        },
        "default": {
          "type": "boolean",
          "description": "whether this is the default track "
        }
      },
      "required": [
        "src",
        "srclang"
      ]
    },
    "Update_Video200": {
      "properties": {
        "updated_at": {
          "type": "string",
          "description": "when the video was last modified "
        },
        "id": {
          "type": "string",
          "description": "video id "
        },
        "name": {
          "type": "string",
          "description": "video title "
        },
        "complete": {
          "type": "boolean",
          "description": "whether processing is complete &mdash; Note: when you create a new video, the complete property is automatically set to false. As soon as one rendition exists for the video, the complete property will be automatically set to true "
        },
        "ad_keys": {
          "type": "string",
          "description": "string representing the ad key/value pairs assigned to the video. Key/value pairs are formatted as key=value and are separated by ampersands. For example: &quot;adKeys&quot;: &quot;category=sports&amp;live=true&quot; "
        },
        "clip_source_video_id": {
          "type": "string",
          "description": "The ID of the source video that was clipped to produce this video or null if this video is not a clip of another video "
        },
        "created_at": {
          "type": "string",
          "description": "when the video was created "
        },
        "custom_fields": {
          "type": "object",
          "description": "map of fieldname-value pairs ",
          "$ref": "#/definitions/custom_fields"
        },
        "cue_points": {
          "type": "object",
          "description": "array of cue point maps ",
          "$ref": "#/definitions/cue_points"
        },
        "delivery_type": {
          "type": "string",
          "description": "video delivery type - remote, static_origin, dynamic_origin or unknown "
        },
        "description": {
          "type": "string",
          "description": "video short description "
        },
        "drm_disabled": {
          "type": "boolean",
          "description": "if true, the video is not DRM-packaged "
        },
        "duration": {
          "type": "number",
          "description": "video duration in milliseconds "
        },
        "digital_master_id": {
          "type": "string",
          "description": "asset id of the digital master "
        },
        "economics": {
          "type": "string",
          "description": "whether video is AD_SUPPORTED "
        },
        "geo": {
          "type": "object",
          "description": "map of geo-filtering properties ",
          "$ref": "#/definitions/geo"
        },
        "has_digital_master": {
          "type": "boolean",
          "description": "whether video has an archived master than can be used for retranscoding "
        },
        "images": {
          "type": "object",
          "description": "map of image maps ",
          "$ref": "#/definitions/images"
        },
        "link": {
          "type": "object",
          "description": "map of scheduling properties ",
          "$ref": "#/definitions/link"
        },
        "long_description": {
          "type": "string",
          "description": "video long description "
        },
        "offline_enabled": {
          "type": "boolean",
          "description": "whether video is enabled for offline viewing "
        },
        "original_filename": {
          "type": "string",
          "description": "the original file name for the uploaded video "
        },
        "projection": {
          "type": "string",
          "description": "used for 360 videos "
        },
        "published_at": {
          "type": "string",
          "description": "start date-time of first activation in ISO-8601(http://www.ecma-international.org/ecma-262/5.1/#sec-15.9.1.15) format "
        },
        "reference_id": {
          "type": "string",
          "description": "video reference-id (must be unique within the account) "
        },
        "schedule": {
          "type": "object",
          "description": "map of scheduling properties ",
          "$ref": "#/definitions/schedule"
        },
        "state": {
          "type": "string",
          "description": "state determines whether the video is playable or not "
        },
        "sharing": {
          "type": "object",
          "description": "map of the sharing properties for the video ",
          "$ref": "#/definitions/sharing"
        },
        "tags": {
          "type": "array",
          "description": "array of tags ",
          "items": {
            "type": "string"
          }
        },
        "text_tracks": {
          "type": "object",
          "description": "array of text track maps ",
          "$ref": "#/definitions/text_tracks"
        }
      },
      "required": [
        "updated_at",
        "id",
        "name",
        "complete",
        "ad_keys",
        "clip_source_video_id",
        "created_at",
        "custom_fields",
        "cue_points",
        "delivery_type",
        "description",
        "drm_disabled",
        "duration",
        "digital_master_id",
        "economics",
        "geo",
        "has_digital_master",
        "images",
        "link",
        "long_description",
        "offline_enabled",
        "original_filename",
        "projection",
        "published_at",
        "reference_id",
        "schedule",
        "state",
        "sharing",
        "tags",
        "text_tracks"
      ]
    },
    "Update_VideoRequestBodyFields": {
      "properties": {
        "ad_keys": {
          "type": "string",
          "description": "string representing the ad key/value pairs assigned to the video. Key/value pairs are formatted as key=value and are separated by ampersands. "
        }
      },
      "required": []
    },
    "Add_AffiliateBody": {
      "properties": {
        "account_id": {
          "type": "string",
          "description": "The affiliate&#39;s account id. "
        }
      },
      "required": [
        "account_id"
      ]
    },
    "Add_Affiliate200": {
      "properties": {
        "account_id": {
          "type": "string",
          "description": "affiliate account id "
        }
      },
      "required": [
        "account_id"
      ]
    },
    "Approve_ContractBody": {
      "properties": {
        "approved": {
          "type": "boolean",
          "description": "Setting approved to true approves the contract. "
        },
        "auto_accept": {
          "type": "boolean",
          "description": "Setting If true, shared videos will be automatically accepted; otherwise, they must be approved one by one. "
        }
      },
      "required": [
        "approved"
      ]
    },
    "Approve_Contract200": {
      "properties": {
        "account_id": {
          "type": "string",
          "description": "affiliate account id "
        },
        "approved": {
          "type": "boolean",
          "description": "whether the contract is approved "
        },
        "auto_accept": {
          "type": "boolean",
          "description": "whether shared videos will be automatically accepted "
        },
        "approved_at": {
          "type": "datetime",
          "description": "when the contract was approved "
        },
        "created_at": {
          "type": "datetime",
          "description": "when the contract was created "
        },
        "updated_at": {
          "type": "datetime",
          "description": "when the contract was last updated "
        },
        "channel": {
          "type": "object",
          "description": "the channel this contract belongs to ",
          "$ref": "#/definitions/channel"
        }
      },
      "required": [
        "account_id",
        "approved",
        "auto_accept",
        "approved_at",
        "created_at",
        "updated_at",
        "channel"
      ]
    },
    "channel": {
      "properties": {
        "account_id": {
          "type": "string",
          "description": "the id of the Master account "
        },
        "name": {
          "type": "string",
          "description": "the name of the channel "
        }
      },
      "required": [
        "account_id",
        "name"
      ]
    },
    "Get_Channel_Details200": {
      "properties": {
        "account_id": {
          "type": "string",
          "description": "master account id "
        },
        "name": {
          "type": "string",
          "description": "channel name "
        },
        "enforce_custom_fields": {
          "type": "boolean",
          "description": "if true, will allow sharing only if the affiliate account has all custom fields that have values for the video to be shared "
        },
        "enforce_geo": {
          "type": "boolean",
          "description": "if true, and master account is enabled for geo-filtering, will allow sharing only if the affiliate account is also enabled for geo-filtering Note: this field is currently ignored, but this restriction will be enabled later "
        },
        "account_name": {
          "type": "string",
          "description": "master account name "
        },
        "created_at": {
          "type": "datetime",
          "description": "when the channel was created "
        },
        "updated_at": {
          "type": "datetime",
          "description": "when the channel was last updated "
        }
      },
      "required": [
        "account_id",
        "name",
        "enforce_custom_fields",
        "enforce_geo",
        "account_name",
        "created_at",
        "updated_at"
      ]
    },
    "Update_ChannelBody": {
      "properties": {
        "enforce_custom_fields": {
          "type": "boolean",
          "description": "Allow sharing only if affiliate account has all custom fields for which a value is set in the master account "
        },
        "enforce_geo": {
          "type": "boolean",
          "description": "Allow sharing only if affiliate account is enabled for geo-filtering (if the master account is enabled for geo-filtering) "
        }
      },
      "required": [
        "enforce_custom_fields",
        "enforce_geo"
      ]
    },
    "Update_Channel200": {
      "properties": {
        "account_id": {
          "type": "string",
          "description": "master account id "
        },
        "name": {
          "type": "string",
          "description": "channel name "
        },
        "enforce_custom_fields": {
          "type": "boolean",
          "description": "if true, will allow sharing only if the affiliate account has all custom fields that have values for the video to be shared "
        },
        "enforce_geo": {
          "type": "boolean",
          "description": "if true, and master account is enabled for geo-filtering, will allow sharing only if the affiliate account is also enabled for geo-filtering Note: this field is currently ignored, but this restriction will be enabled later "
        },
        "account_name": {
          "type": "string",
          "description": "master account name "
        },
        "created_at": {
          "type": "datetime",
          "description": "when the channel was created "
        },
        "updated_at": {
          "type": "datetime",
          "description": "when the channel was last updated "
        }
      },
      "required": [
        "account_id",
        "name",
        "enforce_custom_fields",
        "enforce_geo",
        "account_name",
        "created_at",
        "updated_at"
      ]
    },
    "Get_Contract200": {
      "properties": {
        "account_id": {
          "type": "string",
          "description": "affiliate account id "
        },
        "approved": {
          "type": "boolean",
          "description": "whether the contract is approved "
        },
        "auto_accept": {
          "type": "boolean",
          "description": "whether shared videos will be automatically accepted "
        },
        "approved_at": {
          "type": "datetime",
          "description": "when the contract was approved "
        },
        "created_at": {
          "type": "datetime",
          "description": "when the contract was created "
        },
        "updated_at": {
          "type": "datetime",
          "description": "when the contract was last updated "
        },
        "channel": {
          "type": "object",
          "description": "the channel this contract belongs to ",
          "$ref": "#/definitions/channel"
        }
      },
      "required": [
        "account_id",
        "approved",
        "auto_accept",
        "approved_at",
        "created_at",
        "updated_at",
        "channel"
      ]
    },
    "List_Channel_Affiliates200": {
      "properties": {
        "account_id": {
          "type": "string",
          "description": "affiliate account id "
        },
        "account_name": {
          "type": "string",
          "description": "affiliate account name "
        },
        "approved": {
          "type": "boolean",
          "description": "whether the affiliate has approved the relationship "
        }
      },
      "required": [
        "account_id",
        "account_name",
        "approved"
      ]
    },
    "List_Channels200": {
      "properties": {
        "account_id": {
          "type": "string",
          "description": "master account id "
        },
        "name": {
          "type": "string",
          "description": "channel name "
        },
        "enforce_custom_fields": {
          "type": "boolean",
          "description": "if true, will allow sharing only if the affiliate account has all custom fields that have values for the video to be shared "
        },
        "enforce_geo": {
          "type": "boolean",
          "description": "if true, and master account is enabled for geo-filtering, will allow sharing only if the affiliate account is also enabled for geo-filtering Note: this field is currently ignored, but this restriction will be enabled later "
        },
        "account_name": {
          "type": "string",
          "description": "master account name "
        },
        "created_at": {
          "type": "datetime",
          "description": "when the channel was created "
        },
        "updated_at": {
          "type": "datetime",
          "description": "when the channel was last updated "
        }
      },
      "required": [
        "account_id",
        "name",
        "enforce_custom_fields",
        "enforce_geo",
        "account_name",
        "created_at",
        "updated_at"
      ]
    },
    "List_Contracts200": {
      "properties": {
        "account_id": {
          "type": "string",
          "description": "affiliate account id "
        },
        "approved": {
          "type": "boolean",
          "description": "whether the contract is approved "
        },
        "auto_accept": {
          "type": "boolean",
          "description": "whether shared videos will be automatically accepted "
        },
        "approved_at": {
          "type": "datetime",
          "description": "when the contract was approved "
        },
        "created_at": {
          "type": "datetime",
          "description": "when the contract was created "
        },
        "updated_at": {
          "type": "datetime",
          "description": "when the contract was last updated "
        },
        "channel": {
          "type": "object",
          "description": "the channel this contract belongs to ",
          "$ref": "#/definitions/channel"
        }
      },
      "required": [
        "account_id",
        "approved",
        "auto_accept",
        "approved_at",
        "created_at",
        "updated_at",
        "channel"
      ]
    },
    "List_Shares200": {
      "properties": {
        "video_id": {
          "type": "string",
          "description": "the video id "
        },
        "affiliate_id": {
          "type": "string",
          "description": "the id of the affiliate account the video is shared to "
        },
        "affiliate_video_id": {
          "type": "string",
          "description": "the id of the shared video in the affiliate account "
        },
        "statue": {
          "type": "string",
          "description": "the status of the sharing - either PROCESSING, COMPLETE, or FAILED "
        },
        "shared_at": {
          "type": "datetime",
          "description": "when the video was shared "
        },
        "updated_at": {
          "type": "datetime",
          "description": "the video was last updated in the affiliate account "
        }
      },
      "required": [
        "video_id",
        "affiliate_id",
        "affiliate_video_id",
        "statue",
        "shared_at",
        "updated_at"
      ]
    },
    "Share_VideoBody": {
      "properties": {
        "id": {
          "type": "string",
          "description": "affiliate account id to share to "
        }
      },
      "required": [
        "id"
      ]
    },
    "Share_Video200": {
      "properties": {
        "video_id": {
          "type": "string",
          "description": "the video id "
        },
        "affiliate_id": {
          "type": "string",
          "description": "the id of the affiliate account the video is shared to "
        },
        "affiliate_video_id": {
          "type": "string",
          "description": "the id of the shared video in the affiliate account "
        },
        "statue": {
          "type": "string",
          "description": "the status of the sharing - either PROCESSING, COMPLETE, or FAILED "
        },
        "shared_at": {
          "type": "datetime",
          "description": "when the video was shared "
        },
        "updated_at": {
          "type": "datetime",
          "description": "the video was last updated in the affiliate account "
        }
      },
      "required": [
        "video_id",
        "affiliate_id",
        "affiliate_video_id",
        "statue",
        "shared_at",
        "updated_at"
      ]
    },
    "Create_SubscriptionBody": {
      "properties": {
        "endpoint": {
          "type": "string",
          "description": "a URL that can handle HTTP POST requests "
        },
        "events": {
          "type": "array",
          "description": "array of events subscribed to &mdash; currently only the video-change event is available ",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "endpoint",
        "events"
      ]
    },
    "Create_Subscription200": {
      "properties": {
        "endpoint": {
          "type": "string",
          "description": "the notifications endpoint "
        },
        "events": {
          "type": "array",
          "description": "array of events subscribed to ",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "string",
          "description": "system id for the subscription "
        },
        "service_account": {
          "type": "string",
          "description": "the Video Cloud account id "
        }
      },
      "required": [
        "endpoint",
        "events",
        "id",
        "service_account"
      ]
    },
    "Get_Subscriptions_List200": {
      "properties": {
        "endpoint": {
          "type": "string",
          "description": "the notifications endpoint "
        },
        "events": {
          "type": "array",
          "description": "array of events subscribed to ",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "string",
          "description": "system id for the subscription "
        },
        "service_account": {
          "type": "string",
          "description": "the Video Cloud account id "
        }
      },
      "required": [
        "endpoint",
        "events",
        "id",
        "service_account"
      ]
    },
    "Get_Subscription200": {
      "properties": {
        "endpoint": {
          "type": "string",
          "description": "the notifications endpoint "
        },
        "events": {
          "type": "array",
          "description": "array of events subscribed to ",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "string",
          "description": "system id for the subscription "
        },
        "service_account": {
          "type": "string",
          "description": "the Video Cloud account id "
        }
      },
      "required": [
        "endpoint",
        "events",
        "id",
        "service_account"
      ]
    },
    "Create_PlaylistBody": {
      "properties": {
        "name": {
          "type": "string",
          "description": "playlist name "
        },
        "description": {
          "type": "string",
          "description": "playlist description "
        },
        "reference_id": {
          "type": "string",
          "description": "playlist reference id "
        },
        "type": {
          "type": "string",
          "description": "of playlist "
        },
        "limit": {
          "type": "number",
          "description": "maximum number of videos to include (smart playlists only) "
        },
        "video_ids": {
          "type": "array",
          "description": "array of video ids (EXPLICIT playlists only) ",
          "items": {
            "type": "string"
          }
        },
        "search": {
          "type": "string",
          "description": "search string to get the videos (smart playlists only) "
        }
      },
      "required": [
        "name",
        "type"
      ]
    },
    "Create_Playlist200": {
      "properties": {
        "account_id": {
          "type": "string",
          "description": "Video Cloud account id "
        },
        "created_at": {
          "type": "datestring",
          "description": "date/time created "
        },
        "description": {
          "type": "string",
          "description": "playlist description "
        },
        "favorite": {
          "type": "boolean",
          "description": "whether playlist is in favorites list "
        },
        "id": {
          "type": "string",
          "description": "the playlist id "
        },
        "name": {
          "type": "string",
          "description": "the playlist name "
        },
        "reference_id": {
          "type": "string",
          "description": "the playlist reference id "
        },
        "type": {
          "type": "string",
          "description": "the playlist type: EXPLICIT or smart playlist type "
        },
        "updated_at": {
          "type": "datestring",
          "description": "date/time last modified "
        },
        "video_ids": {
          "type": "array",
          "description": "array of video ids (EXPLICIT playlists only) ",
          "items": {
            "type": "string"
          }
        },
        "search": {
          "type": "string",
          "description": "search string to retrieve the videos (smart playlists only) "
        }
      },
      "required": [
        "account_id",
        "created_at",
        "description",
        "favorite",
        "id",
        "name",
        "reference_id",
        "type",
        "updated_at",
        "video_ids",
        "search"
      ]
    },
    "Get_Playlists200": {
      "properties": {
        "account_id": {
          "type": "string",
          "description": "Video Cloud account id "
        },
        "created_at": {
          "type": "datestring",
          "description": "date/time created "
        },
        "description": {
          "type": "string",
          "description": "playlist description "
        },
        "favorite": {
          "type": "boolean",
          "description": "whether playlist is in favorites list "
        },
        "id": {
          "type": "string",
          "description": "the playlist id "
        },
        "name": {
          "type": "string",
          "description": "the playlist name "
        },
        "reference_id": {
          "type": "string",
          "description": "the playlist reference id "
        },
        "type": {
          "type": "string",
          "description": "the playlist type: EXPLICIT or smart playlist type "
        },
        "updated_at": {
          "type": "datestring",
          "description": "date/time last modified "
        },
        "video_ids": {
          "type": "array",
          "description": "array of video ids (EXPLICIT playlists only) ",
          "items": {
            "type": "string"
          }
        },
        "search": {
          "type": "string",
          "description": "search string to retrieve the videos (smart playlists only) "
        }
      },
      "required": [
        "account_id",
        "created_at",
        "description",
        "favorite",
        "id",
        "name",
        "reference_id",
        "type",
        "updated_at",
        "video_ids",
        "search"
      ]
    },
    "Get_Playlist_by_ID200": {
      "properties": {
        "account_id": {
          "type": "string",
          "description": "Video Cloud account id "
        },
        "created_at": {
          "type": "datestring",
          "description": "date/time created "
        },
        "description": {
          "type": "string",
          "description": "playlist description "
        },
        "favorite": {
          "type": "boolean",
          "description": "whether playlist is in favorites list "
        },
        "id": {
          "type": "string",
          "description": "the playlist id "
        },
        "name": {
          "type": "string",
          "description": "the playlist name "
        },
        "reference_id": {
          "type": "string",
          "description": "the playlist reference id "
        },
        "type": {
          "type": "string",
          "description": "the playlist type: EXPLICIT or smart playlist type "
        },
        "updated_at": {
          "type": "datestring",
          "description": "date/time last modified "
        },
        "video_ids": {
          "type": "array",
          "description": "array of video ids (EXPLICIT playlists only) ",
          "items": {
            "type": "string"
          }
        },
        "search": {
          "type": "string",
          "description": "search string to retrieve the videos (smart playlists only) "
        }
      },
      "required": [
        "account_id",
        "created_at",
        "description",
        "favorite",
        "id",
        "name",
        "reference_id",
        "type",
        "updated_at",
        "video_ids",
        "search"
      ]
    },
    "Update_PlaylistBody": {
      "properties": {
        "name": {
          "type": "string",
          "description": "playlist name "
        },
        "description": {
          "type": "string",
          "description": "playlist description "
        },
        "reference_id": {
          "type": "string",
          "description": "playlist reference id "
        },
        "type": {
          "type": "string",
          "description": "of playlist "
        },
        "video_ids": {
          "type": "array",
          "description": "array of video ids for EXPLICIT type only &mdash; note that you must replace the whole array ",
          "items": {
            "type": "string"
          }
        },
        "search": {
          "type": "string",
          "description": "the search string to generate the list of videos &mdash; only for smart playlist types "
        }
      },
      "required": [
        "name"
      ]
    },
    "Update_Playlist200": {
      "properties": {
        "account_id": {
          "type": "string",
          "description": "Video Cloud account id "
        },
        "created_at": {
          "type": "datestring",
          "description": "date/time created "
        },
        "description": {
          "type": "string",
          "description": "playlist description "
        },
        "favorite": {
          "type": "boolean",
          "description": "whether playlist is in favorites list "
        },
        "id": {
          "type": "string",
          "description": "the playlist id "
        },
        "name": {
          "type": "string",
          "description": "the playlist name "
        },
        "reference_id": {
          "type": "string",
          "description": "the playlist reference id "
        },
        "type": {
          "type": "string",
          "description": "the playlist type: EXPLICIT or smart playlist type "
        },
        "updated_at": {
          "type": "datestring",
          "description": "date/time last modified "
        },
        "video_ids": {
          "type": "array",
          "description": "array of video ids (EXPLICIT playlists only) ",
          "items": {
            "type": "string"
          }
        },
        "search": {
          "type": "string",
          "description": "search string to retrieve the videos (smart playlists only) "
        }
      },
      "required": [
        "account_id",
        "created_at",
        "description",
        "favorite",
        "id",
        "name",
        "reference_id",
        "type",
        "updated_at",
        "video_ids",
        "search"
      ]
    },
    "Get_Playlist_Count200": {
      "properties": {
        "count": {
          "type": "number",
          "description": "count of playlists found "
        }
      },
      "required": [
        "count"
      ]
    },
    "Get_Video_Count_in_Playlist200": {
      "properties": {
        "count": {
          "type": "number",
          "description": "count of videos "
        }
      },
      "required": [
        "count"
      ]
    },
    "Get_Videos_in_Playlist200": {
      "properties": {
        "id": {
          "type": "string",
          "description": "video id "
        },
        "name": {
          "type": "string",
          "description": "video title "
        },
        "complete": {
          "type": "boolean",
          "description": "whether processing is complete "
        },
        "created_at": {
          "type": "datestring",
          "description": "when the video was created "
        },
        "custom_fields": {
          "type": "object",
          "description": "map of fieldname-value pairs ",
          "$ref": "#/definitions/custom_fields"
        },
        "cue_points": {
          "type": "object",
          "description": "array of cue point maps ",
          "$ref": "#/definitions/cue_points"
        },
        "delivery_type": {
          "type": "string",
          "description": "video delivery type - remote, static_origin, dynamic_origin or unknown "
        },
        "description": {
          "type": "string",
          "description": "video short description "
        },
        "duration": {
          "type": "number",
          "description": "video duration in milliseconds "
        },
        "digital_master_id": {
          "type": "string",
          "description": "asset id of the digital master "
        },
        "Economics": {
          "type": "string",
          "description": "whether video is AD_ENABLED (used by the Smart Player, not by the Brightcove Player) "
        },
        "folder_id": {
          "type": "string",
          "description": "id for the folder the video belongs to "
        },
        "geo": {
          "type": "object",
          "description": "map of geo-filtering properties ",
          "$ref": "#/definitions/geo"
        },
        "images": {
          "type": "object",
          "description": "map of image maps ",
          "$ref": "#/definitions/images"
        },
        "link": {
          "type": "object",
          "description": "map of scheduling properties ",
          "$ref": "#/definitions/link"
        },
        "long_description": {
          "type": "string",
          "description": "video long description "
        },
        "offline_enabled": {
          "type": "boolean",
          "description": "whether video is enabled for offline viewing "
        },
        "original_filename": {
          "type": "string",
          "description": "the original file name for the uploaded video "
        },
        "reference_id": {
          "type": "string",
          "description": "video reference-id (must be unique within the account) "
        },
        "schedule": {
          "type": "object",
          "description": "map of scheduling properties ",
          "$ref": "#/definitions/schedule"
        },
        "starts_at": {
          "type": "datestring",
          "description": "start date-time of availability in ISO-8601(http://www.ecma-international.org/ecma-262/5.1/#sec-15.9.1.15) format "
        },
        "ends_at": {
          "type": "datestring",
          "description": "end date-time of availability in ISO-8601(http://www.ecma-international.org/ecma-262/5.1/#sec-15.9.1.15) format "
        },
        "state": {
          "type": "string",
          "description": "state determines whether the video is playable or not "
        },
        "sharing": {
          "type": "object",
          "description": "map of sharing properties (applicable only to multiple accounts) ",
          "$ref": "#/definitions/sharing"
        },
        "tags": {
          "type": "string",
          "description": "array of tags "
        },
        "text_tracks": {
          "type": "object",
          "description": "array of text track maps ",
          "$ref": "#/definitions/text_tracks"
        },
        "updated_at": {
          "type": "datestring",
          "description": "when the video was last modified "
        }
      },
      "required": [
        "id",
        "name",
        "complete",
        "created_at",
        "custom_fields",
        "cue_points",
        "delivery_type",
        "description",
        "duration",
        "digital_master_id",
        "Economics",
        "folder_id",
        "geo",
        "images",
        "link",
        "long_description",
        "offline_enabled",
        "original_filename",
        "reference_id",
        "schedule",
        "starts_at",
        "ends_at",
        "state",
        "sharing",
        "tags",
        "text_tracks",
        "updated_at"
      ]
    },
    "Create_VideoBody": {
      "properties": {
        "name": {
          "type": "string",
          "description": "video title "
        },
        "description": {
          "type": "string",
          "description": "video short description "
        },
        "economics": {
          "type": "string",
          "description": "whether the video supports ads (used by the Smart Player, but not by the Brightcove Player) "
        },
        "drm_disabled": {
          "type": "boolean",
          "description": "if DRM is enabled for the account, setting this field to true will prevent this video from being DRM-protected (this field is only available for accounts enabled for Dynamic Delivery and DRM) "
        },
        "long_description": {
          "type": "string",
          "description": "video long description "
        },
        "reference_id": {
          "type": "string",
          "description": "video reference-id (must be unique within the account) "
        },
        "state": {
          "type": "string",
          "description": "state determines whether the video is playable or not "
        },
        "tags": {
          "type": "array",
          "description": "array of tags - note that tags may not contain commas ",
          "items": {
            "type": "string"
          }
        },
        "custom_fields": {
          "type": "object",
          "description": "map of fieldname-value pairs; values have a maximum length of 1024 single-byte characters. Note: be sure to use the internal name for the field, not the display name ",
          "additionalProperties": {
            "type": "string"
          }
        },
        "cue_points": {
          "type": "array",
          "description": "array of cue point maps ",
          "items": {
            "$ref": "#/definitions/Create_VideoBody.cue_points"
          }
        },
        "geo": {
          "type": "object",
          "description": "map of geo-filtering properties ",
          "$ref": "#/definitions/Create_VideoBody.geo"
        },
        "schedule": {
          "type": "object",
          "description": "map of scheduling properties ",
          "$ref": "#/definitions/Create_VideoBody.schedule"
        }
      },
      "required": [
        "name"
      ]
    },
    "Create_VideoBody.cue_points": {
      "properties": {
        "name": {
          "type": "string",
          "description": "cue point name "
        },
        "type": {
          "type": "string",
          "description": "cue point type "
        },
        "time": {
          "type": "number",
          "description": "time of the cue point in seconds; example: 10.527 "
        },
        "metadata": {
          "type": "string",
          "description": "optional metadata string (512 single-byte characters maximum) "
        },
        "force-stop": {
          "type": "boolean",
          "description": "whether video is force-stopped at the cue point "
        }
      },
      "required": [
        "type",
        "time"
      ]
    },
    "Create_VideoBody.geo": {
      "properties": {
        "countries": {
          "type": "array",
          "description": "array of ISO 3166 list of 2- or 4-letter codes in lower-case (search for &quot;country codes&quot;) ",
          "items": {
            "type": "string"
          }
        },
        "exclude_countries": {
          "type": "boolean",
          "description": "if true, country array is treated as a list of countries excluded from viewing "
        },
        "restricted": {
          "type": "boolean",
          "description": "whether geo-restriction is enabled for this video "
        }
      },
      "required": []
    },
    "Create_VideoBody.schedule": {
      "properties": {
        "starts_at": {
          "type": "string",
          "description": "start date-time of availability in ISO-8601 format "
        },
        "ends_at": {
          "type": "string",
          "description": "end date-time of availability in ISO-8601 format "
        }
      },
      "required": []
    },
    "Create_Video200": {
      "properties": {
        "id": {
          "type": "string",
          "description": "video id "
        },
        "name": {
          "type": "string",
          "description": "video title "
        },
        "complete": {
          "type": "boolean",
          "description": "whether processing is complete &mdash; Note: when you create a new video, the complete property is automatically set to false. As soon as one rendition exists for the video, the complete property will be automatically set to true "
        },
        "ad_keys": {
          "type": "string",
          "description": "string representing the ad key/value pairs assigned to the video. Key/value pairs are formatted as key=value and are separated by ampersands. For example: &quot;adKeys&quot;: &quot;category=sports&amp;live=true&quot; "
        },
        "clip_source_video_id": {
          "type": "string",
          "description": "The ID of the source video that was clipped to produce this video or null if this video is not a clip of another video "
        },
        "created_at": {
          "type": "string",
          "description": "when the video was created "
        },
        "custom_fields": {
          "type": "object",
          "description": "map of fieldname-value pairs ",
          "$ref": "#/definitions/custom_fields"
        },
        "cue_points": {
          "type": "object",
          "description": "array of cue point maps ",
          "$ref": "#/definitions/cue_points"
        },
        "delivery_type": {
          "type": "string",
          "description": "video delivery type - remote, static_origin, dynamic_origin or unknown "
        },
        "description": {
          "type": "string",
          "description": "video short description "
        },
        "drm_disabled": {
          "type": "boolean",
          "description": "if true, the video is not DRM-packaged "
        },
        "duration": {
          "type": "number",
          "description": "video duration in milliseconds "
        },
        "digital_master_id": {
          "type": "string",
          "description": "asset id of the digital master "
        },
        "economics": {
          "type": "string",
          "description": "whether video is AD_SUPPORTED "
        },
        "geo": {
          "type": "object",
          "description": "map of geo-filtering properties ",
          "$ref": "#/definitions/geo"
        },
        "has_digital_master": {
          "type": "boolean",
          "description": "whether video has an archived master than can be used for retranscoding "
        },
        "images": {
          "type": "object",
          "description": "map of image maps ",
          "$ref": "#/definitions/images"
        },
        "link": {
          "type": "object",
          "description": "map of scheduling properties ",
          "$ref": "#/definitions/link"
        },
        "long_description": {
          "type": "string",
          "description": "video long description "
        },
        "offline_enabled": {
          "type": "boolean",
          "description": "whether video is enabled for offline viewing "
        },
        "original_filename": {
          "type": "string",
          "description": "the original file name for the uploaded video "
        },
        "projection": {
          "type": "string",
          "description": "used for 360 videos "
        },
        "published_at": {
          "type": "string",
          "description": "start date-time of first activation in ISO-8601(http://www.ecma-international.org/ecma-262/5.1/#sec-15.9.1.15) format "
        },
        "reference_id": {
          "type": "string",
          "description": "video reference-id (must be unique within the account) "
        },
        "schedule": {
          "type": "object",
          "description": "map of scheduling properties ",
          "$ref": "#/definitions/schedule"
        },
        "state": {
          "type": "string",
          "description": "state determines whether the video is playable or not "
        },
        "sharing": {
          "type": "object",
          "description": "map of the sharing properties for the video ",
          "$ref": "#/definitions/sharing"
        },
        "tags": {
          "type": "array",
          "description": "array of tags ",
          "items": {
            "type": "string"
          }
        },
        "text_tracks": {
          "type": "object",
          "description": "array of text track maps ",
          "$ref": "#/definitions/text_tracks"
        },
        "updated_at": {
          "type": "string",
          "description": "when the video was last modified "
        }
      },
      "required": [
        "id",
        "name",
        "complete",
        "ad_keys",
        "clip_source_video_id",
        "created_at",
        "custom_fields",
        "cue_points",
        "delivery_type",
        "description",
        "drm_disabled",
        "duration",
        "digital_master_id",
        "economics",
        "geo",
        "has_digital_master",
        "images",
        "link",
        "long_description",
        "offline_enabled",
        "original_filename",
        "projection",
        "published_at",
        "reference_id",
        "schedule",
        "state",
        "sharing",
        "tags",
        "text_tracks",
        "updated_at"
      ]
    },
    "Get_Videos200": {
      "properties": {
        "id": {
          "type": "string",
          "description": "video id "
        },
        "name": {
          "type": "string",
          "description": "video title "
        },
        "complete": {
          "type": "boolean",
          "description": "whether processing is complete &mdash; Note: when you create a new video, the complete property is automatically set to false. As soon as one rendition exists for the video, the complete property will be automatically set to true "
        },
        "created_at": {
          "type": "string",
          "description": "when the video was created "
        },
        "ad_keys": {
          "type": "string",
          "description": "string representing the ad key/value pairs assigned to the video. Key/value pairs are formatted as key=value and are separated by ampersands. For example: &quot;adKeys&quot;: &quot;category=sports&amp;live=true&quot; "
        },
        "clip_source_video_id": {
          "type": "string",
          "description": "The ID of the source video that was clipped to produce this video or null if this video is not a clip of another video "
        },
        "custom_fields": {
          "type": "object",
          "description": "map of fieldname-value pairs ",
          "$ref": "#/definitions/custom_fields"
        },
        "cue_points": {
          "type": "object",
          "description": "array of cue point maps ",
          "$ref": "#/definitions/cue_points"
        },
        "delivery_type": {
          "type": "string",
          "description": "video delivery type - remote, static_origin, dynamic_origin or unknown "
        },
        "description": {
          "type": "string",
          "description": "video short description "
        },
        "drm_disabled": {
          "type": "boolean",
          "description": "if true, the video is not DRM-packaged "
        },
        "duration": {
          "type": "number",
          "description": "video duration in milliseconds "
        },
        "digital_master_id": {
          "type": "string",
          "description": "asset id of the digital master "
        },
        "economics": {
          "type": "string",
          "description": "whether video is AD_SUPPORTED "
        },
        "folder_id": {
          "type": "string",
          "description": "id for the folder the video belongs to "
        },
        "geo": {
          "type": "object",
          "description": "map of geo-filtering properties ",
          "$ref": "#/definitions/geo"
        },
        "has_digital_master": {
          "type": "boolean",
          "description": "whether video has an archived master than can be used for retranscoding "
        },
        "images": {
          "type": "object",
          "description": "map of image maps ",
          "$ref": "#/definitions/images"
        },
        "link": {
          "type": "object",
          "description": "map of scheduling properties ",
          "$ref": "#/definitions/link"
        },
        "long_description": {
          "type": "string",
          "description": "video long description "
        },
        "offline_enabled": {
          "type": "boolean",
          "description": "whether video is enabled for offline viewing "
        },
        "original_filename": {
          "type": "string",
          "description": "the original file name for the uploaded video "
        },
        "projection": {
          "type": "string",
          "description": "used for 360 videos "
        },
        "published_at": {
          "type": "string",
          "description": "start date-time of first activation in ISO-8601(http://www.ecma-international.org/ecma-262/5.1/#sec-15.9.1.15) format "
        },
        "reference_id": {
          "type": "string",
          "description": "video reference-id (must be unique within the account) "
        },
        "schedule": {
          "type": "object",
          "description": "map of scheduling properties ",
          "$ref": "#/definitions/schedule"
        },
        "state": {
          "type": "string",
          "description": "state determines whether the video is playable or not "
        },
        "sharing": {
          "type": "object",
          "description": "map of sharing properties (applicable only to multiple accounts) ",
          "$ref": "#/definitions/sharing"
        },
        "tags": {
          "type": "array",
          "description": "array of tags ",
          "items": {
            "type": "string"
          }
        },
        "text_tracks": {
          "type": "object",
          "description": "array of text track maps ",
          "$ref": "#/definitions/text_tracks"
        },
        "updated_at": {
          "type": "string",
          "description": "when the video was last modified "
        }
      },
      "required": [
        "id",
        "name",
        "complete",
        "created_at",
        "ad_keys",
        "clip_source_video_id",
        "custom_fields",
        "cue_points",
        "delivery_type",
        "description",
        "drm_disabled",
        "duration",
        "digital_master_id",
        "economics",
        "folder_id",
        "geo",
        "has_digital_master",
        "images",
        "link",
        "long_description",
        "offline_enabled",
        "original_filename",
        "projection",
        "published_at",
        "reference_id",
        "schedule",
        "state",
        "sharing",
        "tags",
        "text_tracks",
        "updated_at"
      ]
    },
    "Get_Digital_Master_Info200": {
      "properties": {
        "account_id": {
          "type": "string",
          "description": "Video Cloud account id "
        },
        "audio_only": {
          "type": "boolean",
          "description": "whether this assest has an audio track only "
        },
        "cdn_origin_id": {
          "type": "string",
          "description": "id on the origin CDN if any "
        },
        "complete": {
          "type": "boolean",
          "description": "whether processing is complete &mdash; Note: when you create a new video, the complete property is automatically set to false. As soon as one rendition exists for the video, the complete property will be automatically set to true "
        },
        "controller_type": {
          "type": "string",
          "description": "video controller type "
        },
        "current_filename": {
          "type": "string",
          "description": "the file name "
        },
        "drm": {
          "type": "object",
          "description": "DRM licensing information ",
          "$ref": "#/definitions/drm"
        },
        "encoding_rate": {
          "type": "number",
          "description": "encoding rate in bps "
        },
        "frame_height": {
          "type": "number",
          "description": "frame height in pixels "
        },
        "frame_width": {
          "type": "number",
          "description": "frame width in pixels "
        },
        "hds": {
          "type": "object",
          "description": "HDS information ",
          "$ref": "#/definitions/hds"
        },
        "hls": {
          "type": "object",
          "description": "HLS information ",
          "$ref": "#/definitions/hls"
        },
        "id": {
          "type": "string",
          "description": "the video id "
        },
        "name": {
          "type": "string",
          "description": "the video title "
        },
        "preview_thumbnail_asset_id": {
          "type": "string",
          "description": "thumbnail asset id "
        },
        "progressive_download": {
          "type": "boolean",
          "description": "whether available via progressive download "
        },
        "reference_id": {
          "type": "string",
          "description": "reference id "
        },
        "remote_stream_name": {
          "type": "string",
          "description": "for remote stream types "
        },
        "remote_url": {
          "type": "string",
          "description": "for HTTP types "
        },
        "sharded_directory": {
          "type": "string",
          "description": ""
        },
        "size": {
          "type": "number",
          "description": "in bytes "
        },
        "type": {
          "type": "string",
          "description": "asset type "
        },
        "update_at": {
          "type": "string",
          "description": "date/time last modified "
        },
        "uploaded_at": {
          "type": "string",
          "description": "date/time added "
        },
        "version": {
          "type": "number",
          "description": ""
        },
        "video_codec": {
          "type": "string",
          "description": "the video codec "
        },
        "video_container": {
          "type": "string",
          "description": "the video container "
        },
        "video_duration": {
          "type": "number",
          "description": "in milliseconds "
        }
      },
      "required": [
        "account_id",
        "audio_only",
        "cdn_origin_id",
        "complete",
        "controller_type",
        "current_filename",
        "drm",
        "encoding_rate",
        "frame_height",
        "frame_width",
        "hds",
        "hls",
        "id",
        "name",
        "preview_thumbnail_asset_id",
        "progressive_download",
        "reference_id",
        "remote_stream_name",
        "remote_url",
        "sharded_directory",
        "size",
        "type",
        "update_at",
        "uploaded_at",
        "version",
        "video_codec",
        "video_container",
        "video_duration"
      ]
    },
    "Get_Video_Audio_Track200": {
      "properties": {
        "id": {
          "type": "string",
          "description": "ID for the audio track formed as &#39;language_variant&#39; "
        },
        "language": {
          "type": "string",
          "description": "language code for the audio track "
        },
        "variant": {
          "type": "string",
          "description": "the type of audio track "
        },
        "duration": {
          "type": "number",
          "description": "URL the duration of the audio track in milliseconds "
        },
        "encoding_rates": {
          "type": "array",
          "description": "array of encoding rates for the audio track renditions in KBPS ",
          "items": {
            "type": "number"
          }
        }
      },
      "required": [
        "id",
        "language",
        "variant",
        "duration",
        "encoding_rates"
      ]
    },
    "Update_Video_Audio_TrackBody": {
      "properties": {
        "language": {
          "type": "string",
          "description": "Language code for the audio track from the subtags in http://www.iana.org/assignments/language-subtag-registry/language-subtag-registry (default can be set for the account by contacting Brightcove Support) Dynanic Delivery only "
        },
        "is_default": {
          "type": "boolean",
          "description": "whether this is the default audio track for the video Dynanic Delivery only "
        },
        "variant": {
          "type": "string",
          "description": "the type of audio track (default can be set for the account by contacting Brightcove Support) Dynanic Delivery only "
        }
      },
      "required": []
    },
    "Update_Video_Audio_Track200": {
      "properties": {
        "id": {
          "type": "string",
          "description": "ID for the audio track formed as &#39;language_variant&#39; "
        },
        "language": {
          "type": "string",
          "description": "language code for the audio track "
        },
        "variant": {
          "type": "string",
          "description": "the type of audio track "
        },
        "duration": {
          "type": "number",
          "description": "URL the duration of the audio track in milliseconds "
        },
        "encoding_rates": {
          "type": "array",
          "description": "array of encoding rates for the audio track renditions in KBPS ",
          "items": {
            "type": "number"
          }
        }
      },
      "required": [
        "id",
        "language",
        "variant",
        "duration",
        "encoding_rates"
      ]
    },
    "custom_fields": {
      "properties": {
        "description": {
          "type": "string",
          "description": "description (instruction for user) "
        },
        "display_name": {
          "type": "string",
          "description": "display name "
        },
        "enum_values": {
          "type": "array",
          "description": "array of string values for select type fields ",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "string",
          "description": "data name for the field (used to access it in searches, etc.) "
        },
        "required": {
          "type": "boolean",
          "description": "whether field must have a value before video can be active "
        },
        "type": {
          "type": "string",
          "description": "custom field type (enum or string) "
        }
      },
      "required": [
        "description",
        "display_name",
        "enum_values",
        "id",
        "required",
        "type"
      ]
    },
    "Get_Custom_Fields200": {
      "properties": {
        "max_custom_fields": {
          "type": "string",
          "description": "maximum number of custom fields for the account "
        },
        "standard_fields": {
          "type": "array",
          "description": "array of standard field maps ",
          "items": {
            "$ref": "#/definitions/standard_fields"
          }
        }
      },
      "required": [
        "max_custom_fields",
        "standard_fields"
      ]
    },
    "standard_fields": {
      "properties": {
        "description": {
          "type": "string",
          "description": "description (instruction for user) "
        },
        "id": {
          "type": "string",
          "description": "data name for the field (used to access it in searches, etc.) "
        },
        "required": {
          "type": "boolean",
          "description": "whether field must have a value before video can be active "
        }
      },
      "required": [
        "description",
        "id",
        "required"
      ]
    },
    "Get_Playlists_for_Video200": {
      "properties": {
        "playlists": {
          "type": "array",
          "description": "array of EXPLICIT playlist ids that contain the video ",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "playlists"
      ]
    },
    "Get_Status_of_Ingest_Job200": {
      "properties": {
        "id": {
          "type": "string",
          "description": "the ingest job id "
        },
        "state": {
          "type": "string",
          "description": "the current state of the ingest job "
        },
        "account_id": {
          "type": "string",
          "description": "the Video Cloud account id "
        },
        "video_id": {
          "type": "string",
          "description": "the video id "
        },
        "error_code": {
          "type": "string",
          "description": "the error code if the job failed "
        },
        "error_message": {
          "type": "string",
          "description": "the error message if the job failed "
        },
        "updated_at": {
          "type": "string",
          "description": "when the status was last updated "
        },
        "started_at": {
          "type": "string",
          "description": "when processing started "
        },
        "priority": {
          "type": "string",
          "description": "priority of the job (normal or low) "
        },
        "submitted_at": {
          "type": "string",
          "description": "when the job was submitted "
        }
      },
      "required": [
        "id",
        "state",
        "account_id",
        "video_id",
        "error_code",
        "error_message",
        "updated_at",
        "started_at",
        "priority",
        "submitted_at"
      ]
    },
    "Get_Status_of_Ingest_Jobs200": {
      "properties": {
        "id": {
          "type": "string",
          "description": "the ingest job id "
        },
        "state": {
          "type": "string",
          "description": "the current state of the ingest job "
        },
        "account_id": {
          "type": "string",
          "description": "the Video Cloud account id "
        },
        "video_id": {
          "type": "string",
          "description": "the video id "
        },
        "error_code": {
          "type": "string",
          "description": "the error code if the job failed "
        },
        "error_message": {
          "type": "string",
          "description": "the error message if the job failed "
        },
        "updated_at": {
          "type": "string",
          "description": "when the status was last updated "
        },
        "started_at": {
          "type": "string",
          "description": "when processing started "
        },
        "priority": {
          "type": "string",
          "description": "priority of the job (normal or low) "
        },
        "submitted_at": {
          "type": "string",
          "description": "when the job was submitted "
        }
      },
      "required": [
        "id",
        "state",
        "account_id",
        "video_id",
        "error_code",
        "error_message",
        "updated_at",
        "started_at",
        "priority",
        "submitted_at"
      ]
    },
    "Get_Video_Audio_Tracks200": {
      "properties": {
        "id": {
          "type": "string",
          "description": "ID for the audio track formed as language_variant "
        },
        "language": {
          "type": "string",
          "description": "language code for the audio track "
        },
        "variant": {
          "type": "string",
          "description": "the type of audio track "
        },
        "duration": {
          "type": "number",
          "description": "URL the duration of the audio track in milliseconds "
        },
        "encoding_rates": {
          "type": "array",
          "description": "array of encoding rates for the audio track renditions in KBPS ",
          "items": {
            "type": "number"
          }
        }
      },
      "required": [
        "id",
        "language",
        "variant",
        "duration",
        "encoding_rates"
      ]
    },
    "Get_Video_Count200": {
      "properties": {
        "count": {
          "type": "number",
          "description": "the count of videos found "
        }
      },
      "required": [
        "count"
      ]
    },
    "Get_Video_Images200": {
      "properties": {
        "poster": {
          "type": "object",
          "description": "map of poster properties ",
          "$ref": "#/definitions/poster"
        },
        "thumbnail": {
          "type": "object",
          "description": "map of thumbnail properties ",
          "$ref": "#/definitions/thumbnail"
        }
      },
      "required": [
        "poster",
        "thumbnail"
      ]
    },
    "poster": {
      "properties": {
        "asset_id": {
          "type": "string",
          "description": "asset id for the poster "
        },
        "sources": {
          "type": "array",
          "description": "array of poster source maps ",
          "items": {
            "$ref": "#/definitions/poster.sources"
          }
        },
        "src": {
          "type": "string",
          "description": "URL for the default poster source image "
        }
      },
      "required": [
        "asset_id",
        "sources",
        "src"
      ]
    },
    "poster.sources": {
      "properties": {
        "src": {
          "type": "string",
          "description": "URL for a poster source image "
        }
      },
      "required": [
        "src"
      ]
    },
    "thumbnail": {
      "properties": {
        "asset_id": {
          "type": "string",
          "description": "asset id for the thumbnail "
        },
        "sources": {
          "type": "array",
          "description": "array of thumbnail source maps ",
          "items": {
            "$ref": "#/definitions/thumbnail.sources"
          }
        },
        "src": {
          "type": "string",
          "description": "URL for the default thumbnail source image "
        }
      },
      "required": [
        "asset_id",
        "sources",
        "src"
      ]
    },
    "thumbnail.sources": {
      "properties": {
        "src": {
          "type": "string",
          "description": "URL for a thumbnail source image "
        }
      },
      "required": [
        "src"
      ]
    },
    "Get_Video_Sources200": {
      "properties": {
        "app_name": {
          "type": "string",
          "description": "address for RTMP stream "
        },
        "asset_id": {
          "type": "string",
          "description": "system id for the rendition "
        },
        "codec": {
          "type": "string",
          "description": "the video codec for the rendition "
        },
        "container": {
          "type": "string",
          "description": "the video container for the rendition "
        },
        "duration": {
          "type": "number",
          "description": "duration in milliseconds "
        },
        "encoding_rate": {
          "type": "number",
          "description": "encoding rate in bps "
        },
        "height": {
          "type": "number",
          "description": "frame height in pixels "
        },
        "remote": {
          "type": "boolean",
          "description": "whether the source is a remote asset "
        },
        "size": {
          "type": "number",
          "description": "file size in bytes "
        },
        "src": {
          "type": "string",
          "description": "URL for HTTP rendition "
        },
        "steam_name": {
          "type": "string",
          "description": "the stream name on the CDN "
        },
        "type": {
          "type": "string",
          "description": "the type for segmented streams "
        },
        "uploaded_at": {
          "type": "string",
          "description": "date/time when the video was uploaded "
        },
        "width": {
          "type": "number",
          "description": "frame width in pixels "
        }
      },
      "required": [
        "app_name",
        "asset_id",
        "codec",
        "container",
        "duration",
        "encoding_rate",
        "height",
        "remote",
        "size",
        "src",
        "steam_name",
        "type",
        "uploaded_at",
        "width"
      ]
    }
  },
  "schemes": [
    "https"
  ],
  "host": "cms.api.brightcove.com",
  "basePath": "/v1"
}
