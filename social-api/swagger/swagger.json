{
  "swagger": "2.0",
  "info": {
    "title": "Social API Reference",
    "version": "1.0.0",
    "description": "Reference for the Brightcove Social API, used to check the status of videos distributed to social platforms."
  },
  "paths": {
    "/accounts/{account_id}/social-status/video/{video_id}": {
      "get": {
        "tags": [
          "Status"
        ],
        "summary": "Get Status of Video",
        "description": "Get the current status of the requested video on every destination to which Social has ever attempted to distribute it, ordered by date, most recent first. ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID "
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video ID "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Get_Status_of_Video200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Insufficient permissions to access this API method "
          },
          "500": {
            "description": "TIMEOUT: Server likely too busy; try again later. "
          },
          "422": {
            "description": "UNPROCESSIBLE: Invalid query parameters. "
          }
        },
        "operationId": "Get_Status_of_Video"
      }
    },
    "/accounts/{account_id}/social-status/destination/{destination_id}/video/{video_id}": {
      "get": {
        "tags": [
          "Status"
        ],
        "summary": "Get Status of Video for Destination",
        "description": "Get the current status of one video with respect to one destination. ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID "
          },
          {
            "name": "destination_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Social ID of the destination "
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video ID "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Get_Status_of_Video_for_Destination200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Insufficient permissions to access this API method "
          },
          "500": {
            "description": "TIMEOUT: Server likely too busy; try again later. "
          },
          "422": {
            "description": "UNPROCESSIBLE: Invalid query parameters. "
          }
        },
        "operationId": "Get_Status_of_Video_for_Destination"
      }
    },
    "/accounts/{account_id}/social-status/destination/{destination_id}": {
      "get": {
        "tags": [
          "Status"
        ],
        "summary": "Get Status of Videos for Destination",
        "description": "Get the current status of every video which Social ever attempted to distribute to the given destination. ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Video Cloud account ID "
          },
          {
            "name": "destination_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Social ID of the destination "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "$ref": "#/definitions/Get_Status_of_Videos_for_Destination200"
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Insufficient permissions to access this API method "
          },
          "500": {
            "description": "TIMEOUT: Server likely too busy; try again later. "
          },
          "422": {
            "description": "UNPROCESSIBLE: Invalid query parameters. "
          }
        },
        "operationId": "Get_Status_of_Videos_for_Destination"
      }
    }
  },
  "definitions": {
    "URL Parameters": {
      "properties": {
        "before": {
          "type": "string",
          "description": "Only videos last modified at or before the specified timestamp will be returned - ISO 8601 Timestamp "
        },
        "since": {
          "type": "string",
          "description": "Only videos last modified at or since the specified timestamp will be returned - ISO 8601 Timestamp "
        },
        "pageKey": {
          "type": "string",
          "description": "The key for the next page of data to return.  If left empty the API returns the first page of data "
        },
        "pageSize": {
          "type": "number",
          "description": "The number of entries to return in this page of data "
        },
        "platform": {
          "type": "string",
          "description": "TThe social platform to return data for; if left blank will return data for all social platforms "
        }
      },
      "required": []
    },
    "Get_Status_of_Video200": {
      "properties": {
        "video_id": {
          "type": "number",
          "description": "The video id "
        },
        "time": {
          "type": "string",
          "description": "The time at which Social last attempted to modify the video on the remote social platform "
        },
        "remote_url": {
          "type": "string",
          "description": "The URL of the video on the remote social platform.  May not exist.  (e.g.,  If the last action was DELETE, or an UPLOAD with result ERROR.) "
        },
        "destination_id": {
          "type": "string",
          "description": "The Social ID of the destination to which this remote_url points (UUID) "
        },
        "action": {
          "type": "string",
          "description": "The last action Social attempted to take for this video with respect to this destination (UPLOAD, UPDATE, or DELETE) "
        },
        "result": {
          "type": "string",
          "description": "The result of the last action Social attempted (SUCCESS or &#39;ERROR&#39;) "
        },
        "error": {
          "type": "string",
          "description": "The error that Social encountered while trying to complete this action.  Will only exist if the &#39;result&#39; was ERROR "
        },
        "distribution_method": {
          "type": "string",
          "description": "Whether this video was distributed automatically via an Autosync, or manually via Single Video Publish (svp) "
        }
      },
      "required": [
        "video_id",
        "time",
        "remote_url",
        "destination_id",
        "action",
        "result",
        "error",
        "distribution_method"
      ]
    },
    "Get_Status_of_Video_for_Destination200": {
      "properties": {
        "video_id": {
          "type": "number",
          "description": "The video id "
        },
        "time": {
          "type": "string",
          "description": "The time at which Social last attempted to modify the video on the remote social platform "
        },
        "remote_url": {
          "type": "string",
          "description": "The URL of the video on the remote social platform.  May not exist.  (e.g.,  If the last action was DELETE, or an UPLOAD with result ERROR.) "
        },
        "destination_id": {
          "type": "string",
          "description": "The Social ID of the destination to which this remote_url points (UUID) "
        },
        "action": {
          "type": "string",
          "description": "The last action Social attempted to take for this video with respect to this destination (UPLOAD, UPDATE, or DELETE) "
        },
        "result": {
          "type": "string",
          "description": "The result of the last action Social attempted (SUCCESS or &#39;ERROR&#39;) "
        },
        "error": {
          "type": "string",
          "description": "The error that Social encountered while trying to complete this action.  Will only exist if the &#39;result&#39; was ERROR "
        },
        "distribution_method": {
          "type": "string",
          "description": "Whether this video was distributed automatically via an Autosync, or manually via Single Video Publish (svp) "
        }
      },
      "required": [
        "video_id",
        "time",
        "remote_url",
        "destination_id",
        "action",
        "result",
        "error",
        "distribution_method"
      ]
    },
    "Get_Status_of_Videos_for_Destination200": {
      "properties": {
        "video_id": {
          "type": "number",
          "description": "The video id "
        },
        "time": {
          "type": "string",
          "description": "The time at which Social last attempted to modify the video on the remote social platform "
        },
        "remote_url": {
          "type": "string",
          "description": "The URL of the video on the remote social platform.  May not exist.  (e.g.,  If the last action was DELETE, or an UPLOAD with result ERROR.) "
        },
        "destination_id": {
          "type": "string",
          "description": "The Social ID of the destination to which this remote_url points (UUID) "
        },
        "action": {
          "type": "string",
          "description": "The last action Social attempted to take for this video with respect to this destination (UPLOAD, UPDATE, or DELETE) "
        },
        "result": {
          "type": "string",
          "description": "The result of the last action Social attempted (SUCCESS or &#39;ERROR&#39;) "
        },
        "error": {
          "type": "string",
          "description": "The error that Social encountered while trying to complete this action.  Will only exist if the &#39;result&#39; was ERROR "
        },
        "distribution_method": {
          "type": "string",
          "description": "Whether this video was distributed automatically via an Autosync, or manually via Single Video Publish (svp) "
        }
      },
      "required": [
        "video_id",
        "time",
        "remote_url",
        "destination_id",
        "action",
        "result",
        "error",
        "distribution_method"
      ]
    }
  },
  "schemes": [
    "https"
  ],
  "host": "social.api.brightcove.com",
  "basePath": "/v1"
}
