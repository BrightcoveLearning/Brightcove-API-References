{
  "openapi": "3.0.0",
  "info": {
    "title": "Social API Reference",
    "description": "Reference for the Brightcove Social API, used to check the status of videos distributed to social platforms.",
    "version": "1.0.0"
  },
  "servers": [{
    "url": "https://social.api.brightcove.com/v1",
    "variables": {}
  }],
  "paths": {
    "/accounts/{account_id}/social-status/video/{video_id}": {
      "get": {
        "tags": [
          "Status"
        ],
        "summary": "Get_Status_of_Video",
        "description": "Get the current status of the requested video on every destination to which Social has ever attempted to distribute it, ordered by date, most recent first. ",
        "operationId": "GetStatusOfVideo",
        "parameters": [{
            "name": "account_id",
            "in": "path",
            "description": "Video Cloud account ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "video_id",
            "in": "path",
            "description": "Video ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "before",
            "in": "query",
            "description": "Only videos last modified at or before the specified timestamp will be returned - ISO 8601 Timestamp",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "since",
            "in": "query",
            "description": "Only videos last modified at or since the specified timestamp will be returned - ISO 8601 Timestamp",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageKey",
            "in": "query",
            "description": "The key for the next page of data to return. If left empty the API returns the first page of data",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The number of entries to return in this page of data",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "default": 100,
              "minimum": 1,
              "maximum": 100
            }
          },
          {
            "name": "platform",
            "in": "query",
            "description": "The number of entries to return in this page of data",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": ["YOUTUBE", "TWITTER", "FACEBOOK"]
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type: application/json",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "description": "200",
                  "$ref": "#/components/schemas/GetStatusOfVideo200"
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Insufficient permissions to access this API method "
          },
          "422": {
            "description": "UNPROCESSIBLE: Invalid query parameters. "
          },
          "500": {
            "description": "TIMEOUT: Server likely too busy; try again later. "
          }
        },
        "deprecated": false,
        "security": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/accounts/{account_id}/social-status/destination/{destination_id}/video/{video_id}": {
      "get": {
        "tags": [
          "Status"
        ],
        "summary": "Get_Status_of_Video_for_Destination",
        "description": "Get the current status of one video with respect to one destination. ",
        "operationId": "GetStatusOfVideoForDestination",
        "parameters": [{
            "name": "account_id",
            "in": "path",
            "description": "Video Cloud account ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "destination_id",
            "in": "path",
            "description": "The Social ID of the destination",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "video_id",
            "in": "path",
            "description": "Video ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type: application/json",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "description": "200",
                  "$ref": "#/components/schemas/GetStatusOfVideoForDestination200"
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Insufficient permissions to access this API method "
          },
          "422": {
            "description": "UNPROCESSIBLE: Invalid query parameters. "
          },
          "500": {
            "description": "TIMEOUT: Server likely too busy; try again later. "
          }
        },
        "deprecated": false,
        "security": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/accounts/{account_id}/social-status/destination/{destination_id}": {
      "get": {
        "tags": [
          "Status"
        ],
        "summary": "Get_Status_of_Videos_for_Destination",
        "description": "Get the current status of every video which Social ever attempted to distribute to the given destination. ",
        "operationId": "GetStatusOfVideosForDestination",
        "parameters": [{
            "name": "account_id",
            "in": "path",
            "description": "Video Cloud account ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "destination_id",
            "in": "path",
            "description": "The Social ID of the destination",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "before",
            "in": "query",
            "description": "Only videos last modified at or before the specified timestamp will be returned - ISO 8601 Timestamp",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "since",
            "in": "query",
            "description": "Only videos last modified at or since the specified timestamp will be returned - ISO 8601 Timestamp",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageKey",
            "in": "query",
            "description": "The key for the next page of data to return. If left empty the API returns the first page of data",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The number of entries to return in this page of data",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "default": 100,
              "minimum": 1,
              "maximum": 100
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type: application/json",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "description": "200",
                  "$ref": "#/components/schemas/GetStatusOfVideosForDestination200"
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Insufficient permissions to access this API method "
          },
          "422": {
            "description": "UNPROCESSIBLE: Invalid query parameters. "
          },
          "500": {
            "description": "TIMEOUT: Server likely too busy; try again later. "
          }
        },
        "deprecated": false,
        "security": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    }
  },
  "components": {
    "schemas": {
      "GetStatusOfVideo200": {
        "title": "Get_Status_of_Video200",
        "required": [
          "video_id",
          "time",
          "remote_url",
          "destination_id",
          "action",
          "result",
          "error",
          "distribution_method"
        ],
        "type": "object",
        "properties": {
          "video_id": {
            "type": "number",
            "description": "The video id"
          },
          "time": {
            "type": "string",
            "description": "The time at which Social last attempted to modify the video on the remote social platform"
          },
          "remote_url": {
            "type": "string",
            "description": "The URL of the video on the remote social platform.  May not exist.  (e.g.,  If the last action was DELETE, or an UPLOAD with result ERROR.)"
          },
          "destination_id": {
            "type": "string",
            "description": "The Social ID of the destination to which this remote_url points (UUID)"
          },
          "action": {
            "type": "string",
            "description": "The last action Social attempted to take for this video with respect to this destination (UPLOAD, UPDATE, or DELETE)"
          },
          "result": {
            "type": "string",
            "description": "The result of the last action Social attempted (SUCCESS or &#39;ERROR&#39;)"
          },
          "error": {
            "type": "string",
            "description": "The error that Social encountered while trying to complete this action.  Will only exist if the &#39;result&#39; was ERROR"
          },
          "distribution_method": {
            "type": "string",
            "description": "Whether this video was distributed automatically via an Autosync, or manually via Single Video Publish (svp)"
          }
        }
      },
      "GetStatusOfVideoForDestination200": {
        "title": "Get_Status_of_Video_for_Destination200",
        "required": [
          "video_id",
          "time",
          "remote_url",
          "destination_id",
          "action",
          "result",
          "error",
          "distribution_method"
        ],
        "type": "object",
        "properties": {
          "video_id": {
            "type": "number",
            "description": "The video id"
          },
          "time": {
            "type": "string",
            "description": "The time at which Social last attempted to modify the video on the remote social platform"
          },
          "remote_url": {
            "type": "string",
            "description": "The URL of the video on the remote social platform.  May not exist.  (e.g.,  If the last action was DELETE, or an UPLOAD with result ERROR.)"
          },
          "destination_id": {
            "type": "string",
            "description": "The Social ID of the destination to which this remote_url points (UUID)"
          },
          "action": {
            "type": "string",
            "description": "The last action Social attempted to take for this video with respect to this destination (UPLOAD, UPDATE, or DELETE)"
          },
          "result": {
            "type": "string",
            "description": "The result of the last action Social attempted (SUCCESS or &#39;ERROR&#39;)"
          },
          "error": {
            "type": "string",
            "description": "The error that Social encountered while trying to complete this action.  Will only exist if the &#39;result&#39; was ERROR"
          },
          "distribution_method": {
            "type": "string",
            "description": "Whether this video was distributed automatically via an Autosync, or manually via Single Video Publish (svp)"
          }
        }
      },
      "GetStatusOfVideosForDestination200": {
        "title": "Get_Status_of_Videos_for_Destination200",
        "required": [
          "video_id",
          "time",
          "remote_url",
          "destination_id",
          "action",
          "result",
          "error",
          "distribution_method"
        ],
        "type": "object",
        "properties": {
          "video_id": {
            "type": "number",
            "description": "The video id"
          },
          "time": {
            "type": "string",
            "description": "The time at which Social last attempted to modify the video on the remote social platform"
          },
          "remote_url": {
            "type": "string",
            "description": "The URL of the video on the remote social platform.  May not exist.  (e.g.,  If the last action was DELETE, or an UPLOAD with result ERROR.)"
          },
          "destination_id": {
            "type": "string",
            "description": "The Social ID of the destination to which this remote_url points (UUID)"
          },
          "action": {
            "type": "string",
            "description": "The last action Social attempted to take for this video with respect to this destination (UPLOAD, UPDATE, or DELETE)"
          },
          "result": {
            "type": "string",
            "description": "The result of the last action Social attempted (SUCCESS or &#39;ERROR&#39;)"
          },
          "error": {
            "type": "string",
            "description": "The error that Social encountered while trying to complete this action.  Will only exist if the &#39;result&#39; was ERROR"
          },
          "distribution_method": {
            "type": "string",
            "description": "Whether this video was distributed automatically via an Autosync, or manually via Single Video Publish (svp)"
          }
        }
      }
    }
  }
}
