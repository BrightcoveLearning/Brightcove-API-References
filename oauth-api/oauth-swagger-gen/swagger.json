{
  "swagger": "2.0",
  "info": {
    "title": "OAuth API Reference",
    "version": "4.0.0",
    "description": "Reference for the Brightcove OAuth API, used to get client credentials and access tokens for the other APIs."
  },
  "paths": {
    "/access_token": {
      "post": {
        "tags": [
          "Access_Token"
        ],
        "summary": "Create Access Token",
        "description": "create a temporary access token for an API request ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/x-www-form-urlencoded "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Basic client_id:client_secret (the &quot;client_id:client_secret&quot; string must be BASE64-encoded; see Getting Access Tokens) "
          }
        ],
        "responses": {
          "400": {
            "description": "invalid_client: credential is not valid "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "Success 200": {
            "description": "Success 200",
            "schema": {
              "$ref": "#/definitions/Create_Access_TokenSuccess200"
            }
          }
        },
        "operationId": "Create_Access_Token"
      }
    },
    "/client_credentials": {
      "post": {
        "tags": [
          "Client_Credential"
        ],
        "summary": "Create Client Credential",
        "description": "Create client credential, consisting of a client-id and client_secret used in getting an access token for one or more APIs Note: client credentials are permanent unless revoked, but you must save the client secret when you create it - it can never be retrieved again. ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Create_Client_CredentialBody",
            "description": "Create client credential, consisting of a client-id and client_secret used in getting an access token for one or more APIs Note: client credentials are permanent unless revoked, but you must save the client secret when you create it - it can never be retrieved again. ",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Create_Client_CredentialBody"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: BC_TOKEN your_BC_TOKEN (see Get BC_TOKEN) "
          }
        ],
        "responses": {
          "400": {
            "description": "BAD_VALUE: The JSON could not be parsed "
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; The request does not carry authentication credentials sufficient to authorize the requested access. "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "409": {
            "description": "REFERENCE_ID_IN_USE: The specified reference id is already in use \nILLEGAL_FIELD: Spelling error or other use of non-existent field \nVALIDATION_ERROR: the JSON data was not valid; error messages vary depending on the problem "
          },
          "Success 200": {
            "description": "Success 200",
            "schema": {
              "$ref": "#/definitions/Create_Client_CredentialSuccess200"
            }
          }
        },
        "operationId": "Create_Client_Credential"
      },
      "get": {
        "tags": [
          "Client_Credential"
        ],
        "summary": "Get Client Credentials",
        "description": "Get an array of client credentials for one or more accounts ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: BC_TOKEN your_BC_TOKEN (see Get BC_TOKEN) "
          }
        ],
        "responses": {
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; The request does not carry authentication credentials sufficient to authorize the requested access. "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "Success 200": {
            "description": "Success 200",
            "schema": {
              "$ref": "#/definitions/Get_Client_CredentialsSuccess200"
            }
          }
        },
        "operationId": "Get_Client_Credentials"
      }
    },
    "/client_credentials/{client_id}": {
      "delete": {
        "tags": [
          "Client_Credential"
        ],
        "summary": "Delete Client Credential",
        "description": "Update a client credential ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "client_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "client id for the credential "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: BC_TOKEN your_BC_TOKEN (see Get BC_TOKEN) "
          }
        ],
        "responses": {
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; The request does not carry authentication credentials sufficient to authorize the requested access. "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          }
        },
        "operationId": "Delete_Client_Credential"
      },
      "get": {
        "tags": [
          "Client_Credential"
        ],
        "summary": "Get Client Credential by ID",
        "description": "Get a client credential ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: BC_TOKEN your_BC_TOKEN (see Get BC_TOKEN) "
          }
        ],
        "responses": {
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; The request does not carry authentication credentials sufficient to authorize the requested access. "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "Success 200": {
            "description": "Success 200",
            "schema": {
              "$ref": "#/definitions/Get_Client_Credential_By_IDSuccess200"
            }
          }
        },
        "operationId": "Get_Client_Credential_By_ID"
      },
      "put": {
        "tags": [
          "Client_Credential"
        ],
        "summary": "Update Client Credential",
        "description": "Update a client credential ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "client_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "client id for the credential "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: BC_TOKEN your_BC_TOKEN (see Get BC_TOKEN) "
          }
        ],
        "responses": {
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; The request does not carry authentication credentials sufficient to authorize the requested access. "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "Success 200": {
            "description": "Success 200",
            "schema": {
              "$ref": "#/definitions/Update_Client_CredentialSuccess200"
            }
          }
        },
        "operationId": "Update_Client_Credential"
      }
    }
  },
  "definitions": {
    "URL Parameters": {
      "properties": {
        "grant_type": {
          "type": "string",
          "description": "always equal to &quot;client_credentials&quot; "
        },
        "origin_account_ids": {
          "type": "string",
          "description": "list of account ids "
        }
      },
      "required": [
        "grant_type",
        "origin_account_ids"
      ]
    },
    "Create_Access_TokenSuccess200": {
      "properties": {
        "access_token": {
          "type": "string",
          "description": "the access token "
        },
        "expires_in": {
          "type": "number",
          "description": "how long before the token expires (seconds) "
        },
        "type": {
          "type": "string",
          "description": "the token type - always &quot;Bearer&quot; "
        }
      },
      "required": [
        "access_token",
        "expires_in",
        "type"
      ]
    },
    "Create_Client_CredentialBody": {
      "properties": {
        "type": {
          "type": "string",
          "description": "always equal to credential "
        },
        "maximum_scope": {
          "type": "array",
          "description": "array of maps specifying the accounts and API operations for the credentials ",
          "items": {
            "$ref": "#/definitions/Create_Client_CredentialBody.maximum_scope"
          }
        },
        "name": {
          "type": "string",
          "description": "name for the credentials "
        },
        "description": {
          "type": "string",
          "description": "description for the credentials "
        }
      },
      "required": [
        "type",
        "maximum_scope",
        "name",
        "description"
      ]
    },
    "Create_Client_CredentialBody.maximum_scope": {
      "properties": {
        "identity": {
          "type": "object",
          "description": "map defining the account and operations ",
          "$ref": "#/definitions/Create_Client_CredentialBody.maximum_scope.identity"
        }
      },
      "required": [
        "identity"
      ]
    },
    "Create_Client_CredentialBody.maximum_scope.identity": {
      "properties": {
        "type": {
          "type": "string",
          "description": "the type of account "
        },
        "account-id": {
          "type": "string",
          "description": "the account ID "
        },
        "operations": {
          "type": "array",
          "description": "array of operations the credentials grant access to (see Operations) ",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "type",
        "account-id",
        "operations"
      ]
    },
    "Create_Client_CredentialSuccess200": {
      "properties": {
        "name": {
          "type": "string",
          "description": "credential name "
        },
        "name_html": {
          "type": "string",
          "description": "html version of credential name "
        },
        "description": {
          "type": "string",
          "description": "credential description "
        },
        "description_html": {
          "type": "string",
          "description": "html version of credential description "
        },
        "client_id": {
          "type": "string",
          "description": "the client id "
        },
        "client_secret": {
          "type": "string",
          "description": "client secret &mdash; note that this is the only request that will return the client secret; if you do not save it, there is no way to retrieve it again "
        },
        "type": {
          "type": "string",
          "description": "the type - currently always equals credential "
        },
        "issued_to": {
          "type": "string",
          "description": "the email address of the account user issued to "
        },
        "issued_user": {
          "type": "string",
          "description": "system id for user issued to "
        },
        "redirect_url": {
          "type": "string",
          "description": "currently not used "
        },
        "trusted": {
          "type": "boolean",
          "description": "whether the client is trusted "
        },
        "revoked": {
          "type": "boolean",
          "description": "whether the credential is revoked "
        },
        "expires_at": {
          "type": "string",
          "description": "when the credential expires "
        },
        "issued_at": {
          "type": "string",
          "description": "when the credential was issued "
        },
        "maximum_scope": {
          "type": "array",
          "description": "array of maps specifying the accounts and API operations for the credentials ",
          "items": {
            "$ref": "#/definitions/maximum_scope"
          }
        }
      },
      "required": [
        "name",
        "name_html",
        "description",
        "description_html",
        "client_id",
        "client_secret",
        "type",
        "issued_to",
        "issued_user",
        "redirect_url",
        "trusted",
        "revoked",
        "expires_at",
        "issued_at",
        "maximum_scope"
      ]
    },
    "maximum_scope": {
      "properties": {
        "identity": {
          "type": "object",
          "description": "map defining the account and operations ",
          "$ref": "#/definitions/maximum_scope.identity"
        }
      },
      "required": [
        "identity"
      ]
    },
    "maximum_scope.identity": {
      "properties": {
        "type": {
          "type": "string",
          "description": "the type of account "
        },
        "account-id": {
          "type": "string",
          "description": "the account ID "
        },
        "operations": {
          "type": "array",
          "description": "array of operations the credentials grant access to (see Operations) ",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "type",
        "account-id",
        "operations"
      ]
    },
    "Get_Client_CredentialsSuccess200": {
      "properties": {
        "name": {
          "type": "string",
          "description": "credential name "
        },
        "name_html": {
          "type": "string",
          "description": "html version of credential name "
        },
        "description": {
          "type": "string",
          "description": "credential description "
        },
        "description_html": {
          "type": "string",
          "description": "html version of credential description "
        },
        "client_id": {
          "type": "string",
          "description": "the client id "
        },
        "client_secret": {
          "type": "string",
          "description": "client secret &mdash; note that it will always be null; it is returned only for the POST request that creates the credential "
        },
        "type": {
          "type": "string",
          "description": "the type - currently always equals credential "
        },
        "issued_to": {
          "type": "string",
          "description": "the email address of the account user issued to "
        },
        "issued_user": {
          "type": "string",
          "description": "system id for user issued to "
        },
        "redirect_url": {
          "type": "string",
          "description": "currently not used "
        },
        "trusted": {
          "type": "boolean",
          "description": "whether the client is trusted "
        },
        "revoked": {
          "type": "boolean",
          "description": "whether the credential is revoked "
        },
        "expires_at": {
          "type": "string",
          "description": "when the credential expires "
        },
        "issued_at": {
          "type": "string",
          "description": "when the credential was issued "
        },
        "maximum_scope": {
          "type": "array",
          "description": "array of maps specifying the accounts and API operations for the credentials ",
          "items": {
            "$ref": "#/definitions/maximum_scope"
          }
        }
      },
      "required": [
        "name",
        "name_html",
        "description",
        "description_html",
        "client_id",
        "client_secret",
        "type",
        "issued_to",
        "issued_user",
        "redirect_url",
        "trusted",
        "revoked",
        "expires_at",
        "issued_at",
        "maximum_scope"
      ]
    },
    "Get_Client_Credential_By_IDSuccess200": {
      "properties": {
        "name": {
          "type": "string",
          "description": "credential name "
        },
        "name_html": {
          "type": "string",
          "description": "html version of credential name "
        },
        "description": {
          "type": "string",
          "description": "credential description "
        },
        "description_html": {
          "type": "string",
          "description": "html version of credential description "
        },
        "client_id": {
          "type": "string",
          "description": "the client id "
        },
        "client_secret": {
          "type": "string",
          "description": "client secret &mdash; note that it will always be null; it is returned only for the POST request that creates the credential "
        },
        "type": {
          "type": "string",
          "description": "the type - currently always equals credential "
        },
        "issued_to": {
          "type": "string",
          "description": "the email address of the account user issued to "
        },
        "issued_user": {
          "type": "string",
          "description": "system id for user issued to "
        },
        "redirect_url": {
          "type": "string",
          "description": "currently not used "
        },
        "trusted": {
          "type": "boolean",
          "description": "whether the client is trusted "
        },
        "revoked": {
          "type": "boolean",
          "description": "whether the credential is revoked "
        },
        "expires_at": {
          "type": "string",
          "description": "when the credential expires "
        },
        "issued_at": {
          "type": "string",
          "description": "when the credential was issued "
        },
        "maximum_scope": {
          "type": "array",
          "description": "array of maps specifying the accounts and API operations for the credentials ",
          "items": {
            "$ref": "#/definitions/maximum_scope"
          }
        }
      },
      "required": [
        "name",
        "name_html",
        "description",
        "description_html",
        "client_id",
        "client_secret",
        "type",
        "issued_to",
        "issued_user",
        "redirect_url",
        "trusted",
        "revoked",
        "expires_at",
        "issued_at",
        "maximum_scope"
      ]
    },
    "Update_Client_CredentialSuccess200": {
      "properties": {
        "name": {
          "type": "string",
          "description": "credential name "
        },
        "name_html": {
          "type": "string",
          "description": "html version of credential name "
        },
        "description": {
          "type": "string",
          "description": "credential description "
        },
        "description_html": {
          "type": "string",
          "description": "html version of credential description "
        },
        "client_id": {
          "type": "string",
          "description": "the client id "
        },
        "client_secret": {
          "type": "string",
          "description": "client secret &mdash; note that it will always be null; it is returned only for the POST request that creates the credential "
        },
        "type": {
          "type": "string",
          "description": "the type - currently always equals credential "
        },
        "issued_to": {
          "type": "string",
          "description": "the email address of the account user issued to "
        },
        "issued_user": {
          "type": "string",
          "description": "system id for user issued to "
        },
        "redirect_url": {
          "type": "string",
          "description": "currently not used "
        },
        "trusted": {
          "type": "boolean",
          "description": "whether the client is trusted "
        },
        "revoked": {
          "type": "boolean",
          "description": "whether the credential is revoked "
        },
        "expires_at": {
          "type": "string",
          "description": "when the credential expires "
        },
        "issued_at": {
          "type": "string",
          "description": "when the credential was issued "
        },
        "maximum_scope": {
          "type": "array",
          "description": "array of maps specifying the accounts and API operations for the credentials ",
          "items": {
            "$ref": "#/definitions/maximum_scope"
          }
        }
      },
      "required": [
        "name",
        "name_html",
        "description",
        "description_html",
        "client_id",
        "client_secret",
        "type",
        "issued_to",
        "issued_user",
        "redirect_url",
        "trusted",
        "revoked",
        "expires_at",
        "issued_at",
        "maximum_scope"
      ]
    }
  },
  "schemes": [
    "https"
  ],
  "host": "oauth.brightcove.com",
  "basePath": "/v4"
}