{
  "openapi": "3.0.0",
  "info": {
    "title": "OAuth API Reference",
    "description": "Reference for the Brightcove OAuth API, used to get client credentials and access tokens for the other APIs.",
    "version": "4.0.0"
  },
  "servers": [
    {
      "url": "https://oauth.brightcove.com/v4",
      "variables": {}
    }
  ],
  "paths": {
    "/access_token": {
      "post": {
        "tags": [
          "Access_Token"
        ],
        "summary": "Create_Access_Token",
        "description": "create a temporary access token for an API request ",
        "operationId": "CreateAccessToken",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type: application/x-www-form-urlencoded",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization: Basic client_id:client_secret (the &quot;client_id:client_secret&quot; string must be BASE64-encoded; see Getting Access Tokens)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "description": "200",
                  "$ref": "#/components/schemas/CreateAccessToken200"
                }
              }
            }
          },
          "400": {
            "description": "invalid_client: credential is not valid "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          }
        },
        "deprecated": false,
        "security": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/client_credentials": {
      "get": {
        "tags": [
          "Client_Credential"
        ],
        "summary": "Get_Client_Credentials",
        "description": "Get an array of client credentials for one or more accounts ",
        "operationId": "GetClientCredentials",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type: application/json",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization: BC_TOKEN your_BC_TOKEN (see Get BC_TOKEN)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "description": "200",
                  "$ref": "#/components/schemas/GetClientCredentials200"
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; The request does not carry authentication credentials sufficient to authorize the requested access. "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          }
        },
        "deprecated": false,
        "security": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "post": {
        "tags": [
          "Client_Credential"
        ],
        "summary": "Create_Client_Credential",
        "description": "Create client credential, consisting of a client-id and client_secret used in getting an access token for one or more APIs Note: client credentials are permanent unless revoked, but you must save the client secret when you create it - it can never be retrieved again. ",
        "operationId": "CreateClientCredential",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type: application/json",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization: BC_TOKEN your_BC_TOKEN (see Get BC_TOKEN)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Create client credential, consisting of a client-id and client_secret used in getting an access token for one or more APIs Note: client credentials are permanent unless revoked, but you must save the client secret when you create it - it can never be retrieved again.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Create client credential, consisting of a client-id and client_secret used in getting an access token for one or more APIs Note: client credentials are permanent unless revoked, but you must save the client secret when you create it - it can never be retrieved again.",
                "$ref": "#/components/schemas/CreateClientCredentialbody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "description": "200",
                  "$ref": "#/components/schemas/CreateClientCredential200"
                }
              }
            }
          },
          "400": {
            "description": "BAD_VALUE: The JSON could not be parsed "
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; The request does not carry authentication credentials sufficient to authorize the requested access. "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "409": {
            "description": "REFERENCE_ID_IN_USE: The specified reference id is already in use \nILLEGAL_FIELD: Spelling error or other use of non-existent field \nVALIDATION_ERROR: the JSON data was not valid; error messages vary depending on the problem "
          }
        },
        "deprecated": false,
        "security": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/client_credentials/{client_id}": {
      "get": {
        "tags": [
          "Client_Credential"
        ],
        "summary": "Get_Client_Credential_By_ID",
        "description": "Get a client credential ",
        "operationId": "GetClientCredentialById",
        "parameters": [
          {
            "name": "client_id",
            "in": "path",
            "description": "client id for the credential",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type: application/json",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization: BC_TOKEN your_BC_TOKEN (see Get BC_TOKEN)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "description": "200",
                  "$ref": "#/components/schemas/GetClientCredentialById200"
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; The request does not carry authentication credentials sufficient to authorize the requested access. "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          }
        },
        "deprecated": false,
        "security": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "put": {
        "tags": [
          "Client_Credential"
        ],
        "summary": "Update_Client_Credential",
        "description": "Update a client credential ",
        "operationId": "UpdateClientCredential",
        "parameters": [
          {
            "name": "client_id",
            "in": "path",
            "description": "client id for the credential",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type: application/json",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization: BC_TOKEN your_BC_TOKEN (see Get BC_TOKEN)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "description": "200",
                  "$ref": "#/components/schemas/UpdateClientCredential200"
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; The request does not carry authentication credentials sufficient to authorize the requested access. "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          }
        },
        "deprecated": false,
        "security": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "delete": {
        "tags": [
          "Client_Credential"
        ],
        "summary": "Delete_Client_Credential",
        "description": "Update a client credential ",
        "operationId": "DeleteClientCredential",
        "parameters": [
          {
            "name": "client_id",
            "in": "path",
            "description": "client id for the credential",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type: application/json",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization: BC_TOKEN your_BC_TOKEN (see Get BC_TOKEN)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; The request does not carry authentication credentials sufficient to authorize the requested access. "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          }
        },
        "deprecated": false,
        "security": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    }
  },
  "components": {
    "schemas": {
      "UrlParameters": {
        "title": "URL Parameters",
        "required": [
          "grant_type",
          "origin_account_ids"
        ],
        "type": "object",
        "properties": {
          "grant_type": {
            "type": "string",
            "description": "always equal to &quot;client_credentials&quot;"
          },
          "origin_account_ids": {
            "type": "string",
            "description": "list of account ids"
          }
        }
      },
      "CreateAccessToken200": {
        "title": "Create_Access_Token200",
        "required": [
          "access_token",
          "expires_in",
          "type"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "the access token"
          },
          "expires_in": {
            "type": "number",
            "description": "how long before the token expires (seconds)"
          },
          "type": {
            "type": "string",
            "description": "the token type - always &quot;Bearer&quot;"
          }
        }
      },
      "CreateClientCredentialbody": {
        "title": "Create_Client_CredentialBody",
        "required": [
          "type",
          "maximum_scope",
          "name",
          "description"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "always equal to credential"
          },
          "maximum_scope": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateClientCredentialbody.maximumScope"
            },
            "description": "array of maps specifying the accounts and API operations for the credentials"
          },
          "name": {
            "type": "string",
            "description": "name for the credentials"
          },
          "description": {
            "type": "string",
            "description": "description for the credentials"
          }
        }
      },
      "CreateClientCredentialbody.maximumScope": {
        "title": "Create_Client_CredentialBody.maximum_scope",
        "required": [
          "identity"
        ],
        "type": "object",
        "properties": {
          "identity": {
            "description": "map defining the account and operations",
            "$ref": "#/components/schemas/CreateClientCredentialbody.maximumScope.identity"
          }
        }
      },
      "CreateClientCredentialbody.maximumScope.identity": {
        "title": "Create_Client_CredentialBody.maximum_scope.identity",
        "required": [
          "type",
          "account-id",
          "operations"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "the type of account"
          },
          "account-id": {
            "type": "string",
            "description": "the account ID"
          },
          "operations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "array of operations the credentials grant access to (see Operations)"
          }
        }
      },
      "CreateClientCredential200": {
        "title": "Create_Client_Credential200",
        "required": [
          "name",
          "name_html",
          "description",
          "description_html",
          "client_id",
          "client_secret",
          "type",
          "issued_to",
          "issued_user",
          "redirect_url",
          "trusted",
          "revoked",
          "expires_at",
          "issued_at",
          "maximum_scope"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "credential name"
          },
          "name_html": {
            "type": "string",
            "description": "html version of credential name"
          },
          "description": {
            "type": "string",
            "description": "credential description"
          },
          "description_html": {
            "type": "string",
            "description": "html version of credential description"
          },
          "client_id": {
            "type": "string",
            "description": "the client id"
          },
          "client_secret": {
            "type": "string",
            "description": "client secret &mdash; note that this is the only request that will return the client secret; if you do not save it, there is no way to retrieve it again"
          },
          "type": {
            "type": "string",
            "description": "the type - currently always equals credential"
          },
          "issued_to": {
            "type": "string",
            "description": "the email address of the account user issued to"
          },
          "issued_user": {
            "type": "string",
            "description": "system id for user issued to"
          },
          "redirect_url": {
            "type": "string",
            "description": "currently not used"
          },
          "trusted": {
            "type": "boolean",
            "description": "whether the client is trusted"
          },
          "revoked": {
            "type": "boolean",
            "description": "whether the credential is revoked"
          },
          "expires_at": {
            "type": "string",
            "description": "when the credential expires"
          },
          "issued_at": {
            "type": "string",
            "description": "when the credential was issued"
          },
          "maximum_scope": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MaximumScope"
            },
            "description": "array of maps specifying the accounts and API operations for the credentials"
          }
        }
      },
      "MaximumScope": {
        "title": "maximum_scope",
        "required": [
          "identity"
        ],
        "type": "object",
        "properties": {
          "identity": {
            "description": "map defining the account and operations",
            "$ref": "#/components/schemas/MaximumScope.identity"
          }
        }
      },
      "MaximumScope.identity": {
        "title": "maximum_scope.identity",
        "required": [
          "type",
          "account-id",
          "operations"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "the type of account"
          },
          "account-id": {
            "type": "string",
            "description": "the account ID"
          },
          "operations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "array of operations the credentials grant access to (see Operations)"
          }
        }
      },
      "GetClientCredentials200": {
        "title": "Get_Client_Credentials200",
        "required": [
          "name",
          "name_html",
          "description",
          "description_html",
          "client_id",
          "client_secret",
          "type",
          "issued_to",
          "issued_user",
          "redirect_url",
          "trusted",
          "revoked",
          "expires_at",
          "issued_at",
          "maximum_scope"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "credential name"
          },
          "name_html": {
            "type": "string",
            "description": "html version of credential name"
          },
          "description": {
            "type": "string",
            "description": "credential description"
          },
          "description_html": {
            "type": "string",
            "description": "html version of credential description"
          },
          "client_id": {
            "type": "string",
            "description": "the client id"
          },
          "client_secret": {
            "type": "string",
            "description": "client secret &mdash; note that it will always be null; it is returned only for the POST request that creates the credential"
          },
          "type": {
            "type": "string",
            "description": "the type - currently always equals credential"
          },
          "issued_to": {
            "type": "string",
            "description": "the email address of the account user issued to"
          },
          "issued_user": {
            "type": "string",
            "description": "system id for user issued to"
          },
          "redirect_url": {
            "type": "string",
            "description": "currently not used"
          },
          "trusted": {
            "type": "boolean",
            "description": "whether the client is trusted"
          },
          "revoked": {
            "type": "boolean",
            "description": "whether the credential is revoked"
          },
          "expires_at": {
            "type": "string",
            "description": "when the credential expires"
          },
          "issued_at": {
            "type": "string",
            "description": "when the credential was issued"
          },
          "maximum_scope": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MaximumScope"
            },
            "description": "array of maps specifying the accounts and API operations for the credentials"
          }
        }
      },
      "GetClientCredentialById200": {
        "title": "Get_Client_Credential_By_ID200",
        "required": [
          "name",
          "name_html",
          "description",
          "description_html",
          "client_id",
          "client_secret",
          "type",
          "issued_to",
          "issued_user",
          "redirect_url",
          "trusted",
          "revoked",
          "expires_at",
          "issued_at",
          "maximum_scope"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "credential name"
          },
          "name_html": {
            "type": "string",
            "description": "html version of credential name"
          },
          "description": {
            "type": "string",
            "description": "credential description"
          },
          "description_html": {
            "type": "string",
            "description": "html version of credential description"
          },
          "client_id": {
            "type": "string",
            "description": "the client id"
          },
          "client_secret": {
            "type": "string",
            "description": "client secret &mdash; note that it will always be null; it is returned only for the POST request that creates the credential"
          },
          "type": {
            "type": "string",
            "description": "the type - currently always equals credential"
          },
          "issued_to": {
            "type": "string",
            "description": "the email address of the account user issued to"
          },
          "issued_user": {
            "type": "string",
            "description": "system id for user issued to"
          },
          "redirect_url": {
            "type": "string",
            "description": "currently not used"
          },
          "trusted": {
            "type": "boolean",
            "description": "whether the client is trusted"
          },
          "revoked": {
            "type": "boolean",
            "description": "whether the credential is revoked"
          },
          "expires_at": {
            "type": "string",
            "description": "when the credential expires"
          },
          "issued_at": {
            "type": "string",
            "description": "when the credential was issued"
          },
          "maximum_scope": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MaximumScope"
            },
            "description": "array of maps specifying the accounts and API operations for the credentials"
          }
        }
      },
      "UpdateClientCredential200": {
        "title": "Update_Client_Credential200",
        "required": [
          "name",
          "name_html",
          "description",
          "description_html",
          "client_id",
          "client_secret",
          "type",
          "issued_to",
          "issued_user",
          "redirect_url",
          "trusted",
          "revoked",
          "expires_at",
          "issued_at",
          "maximum_scope"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "credential name"
          },
          "name_html": {
            "type": "string",
            "description": "html version of credential name"
          },
          "description": {
            "type": "string",
            "description": "credential description"
          },
          "description_html": {
            "type": "string",
            "description": "html version of credential description"
          },
          "client_id": {
            "type": "string",
            "description": "the client id"
          },
          "client_secret": {
            "type": "string",
            "description": "client secret &mdash; note that it will always be null; it is returned only for the POST request that creates the credential"
          },
          "type": {
            "type": "string",
            "description": "the type - currently always equals credential"
          },
          "issued_to": {
            "type": "string",
            "description": "the email address of the account user issued to"
          },
          "issued_user": {
            "type": "string",
            "description": "system id for user issued to"
          },
          "redirect_url": {
            "type": "string",
            "description": "currently not used"
          },
          "trusted": {
            "type": "boolean",
            "description": "whether the client is trusted"
          },
          "revoked": {
            "type": "boolean",
            "description": "whether the credential is revoked"
          },
          "expires_at": {
            "type": "string",
            "description": "when the credential expires"
          },
          "issued_at": {
            "type": "string",
            "description": "when the credential was issued"
          },
          "maximum_scope": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MaximumScope"
            },
            "description": "array of maps specifying the accounts and API operations for the credentials"
          }
        }
      }
    }
  }
}
