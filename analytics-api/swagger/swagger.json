{
  "swagger": "2.0",
  "info": {
    "title": "Analytics API Reference",
    "version": "1.0.0",
    "description": "Reference for the Brightcove Analytics API, used to retrieve analytics data for your accounts. To test API requests, you can use our <a href=\"https://support.brightcove.com/node/17910\" target=\"_blank\">API Testing Tools</a>."
  },
  "paths": {
    "/engagement/accounts/{account_id}": {
      "get": {
        "tags": [
          "Engagement"
        ],
        "summary": "Get Account Engagement",
        "description": "Get a summary report of engagement for the account. Note:  Engagement reports are only available for periods within the past 32 days. Requests outside that range will return an error The only parameters supported for Engagement reports are from and to Engagement reports are available for single accounts only - reports on multiple accounts will not work  ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "a Video Cloud account ID "
          },
          {
            "name": "from",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Start time for the period covered by the report &mdash; epoch time in milliseconds or a date in the format yyyy-mm-dd (such as 2013-09-26) "
          },
          {
            "name": "to",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "End time for the period covered by the report &mdash; epoch time in milliseconds or a date in the format yyyy-mm-dd (such as 2013-09-26) "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          },
          {
            "name": "Accept-Encoding",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Accept-Encoding: gzip (optional) "
          }
        ],
        "responses": {
          "Response Fields": {
            "description": "Response Fields",
            "schema": {
              "$ref": "#/definitions/timeline"
            }
          },
          "Error 4xx": {
            "description": "Error 4xx",
            "schema": {
              "$ref": "#/definitions/Get_Account_EngagementError4xx"
            }
          },
          "Error 5xx": {
            "description": "Error 5xx",
            "schema": {
              "$ref": "#/definitions/Get_Account_EngagementError5xx"
            }
          }
        },
        "operationId": "Get_Account_Engagement"
      }
    },
    "/engagement/accounts/{account_id}/players/{player_id}": {
      "get": {
        "tags": [
          "Engagement"
        ],
        "summary": "Get Player Engagement",
        "description": "Get a summary report of engagement for a player. Note:  Engagement reports are only available for periods within the past 32 days. Requests outside that range will return an error The only parameters supported for Engagement reports are from and to Engagement reports are available for single accounts only - reports on multiple accounts will not work  ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "a Video Cloud account ID "
          },
          {
            "name": "player_id",
            "in": "path",
            "required": false,
            "type": "string",
            "description": "a Video Cloud player ID "
          },
          {
            "name": "from",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Start time for the period covered by the report &mdash; epoch time in milliseconds or a date in the format yyyy-mm-dd (such as 2013-09-26) "
          },
          {
            "name": "to",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "End time for the period covered by the report &mdash; epoch time in milliseconds or a date in the format yyyy-mm-dd (such as 2013-09-26) "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          },
          {
            "name": "Accept-Encoding",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Accept-Encoding: gzip (optional) "
          }
        ],
        "responses": {
          "Response Fields": {
            "description": "Response Fields",
            "schema": {
              "$ref": "#/definitions/timeline"
            }
          },
          "Error 4xx": {
            "description": "Error 4xx",
            "schema": {
              "$ref": "#/definitions/Get_Player_EngagementError4xx"
            }
          },
          "Error 5xx": {
            "description": "Error 5xx",
            "schema": {
              "$ref": "#/definitions/Get_Player_EngagementError5xx"
            }
          }
        },
        "operationId": "Get_Player_Engagement"
      }
    },
    "/engagement/accounts/{account_id}/videos/{video_id}": {
      "get": {
        "tags": [
          "Engagement"
        ],
        "summary": "Get Video Engagement",
        "description": "Get a summary report of engagement for a video. Note:  Engagement reports are only available for periods within the past 32 days. Requests outside that range will return an error The only parameters supported for Engagement reports are from and to Engagement reports are available for single accounts only - reports on multiple accounts will not work  ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "a Video Cloud account ID "
          },
          {
            "name": "video_id",
            "in": "path",
            "required": false,
            "type": "string",
            "description": "a Video Cloud video ID "
          },
          {
            "name": "from",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Start time for the period covered by the report &mdash; epoch time in milliseconds or a date in the format yyyy-mm-dd (such as 2013-09-26) "
          },
          {
            "name": "to",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "End time for the period covered by the report &mdash; epoch time in milliseconds or a date in the format yyyy-mm-dd (such as 2013-09-26) "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          },
          {
            "name": "Accept-Encoding",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Accept-Encoding: gzip (optional) "
          }
        ],
        "responses": {
          "Response Fields": {
            "description": "Response Fields",
            "schema": {
              "$ref": "#/definitions/timeline"
            }
          },
          "Error 4xx": {
            "description": "Error 4xx",
            "schema": {
              "$ref": "#/definitions/Get_Video_EngagementError4xx"
            }
          },
          "Error 5xx": {
            "description": "Error 5xx",
            "schema": {
              "$ref": "#/definitions/Get_Video_EngagementError5xx"
            }
          }
        },
        "operationId": "Get_Video_Engagement"
      }
    },
    "/data": {
      "get": {
        "tags": [
          "Report"
        ],
        "summary": "Get Analytics Report",
        "description": "Get an analytics report on one or more dimensions. Note that the fields returned in the response will vary according to the dimension(s) requested and the fields specified in the fields parameter ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accounts",
            "in": "query",
            "required": true,
            "type": "number",
            "description": "one or more Video Cloud account IDs separated by commas "
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "number",
            "description": "number of videos to return "
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "number",
            "description": "number of videos to skip in the response "
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "field to sort results by (for video dimension reports, valid sort fields include the video metadata fields video.name, video.tags, video.reference_id and video.custom_fields - see (Fields and Sort)) "
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "fields to return for items; see Dimensions and Fields for the available fields for each dimension "
          },
          {
            "name": "dimensions",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "one or more dimensions to report on; see Multiple Dimensions for which combined dimensions are supported "
          },
          {
            "name": "where",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "one or more dimension==value pairs to filter the results; see Where Filters for details "
          },
          {
            "name": "from",
            "in": "query",
            "required": false,
            "type": "mixed",
            "description": "Start time for the period covered by the report &mdash; alltime or epoch time in milliseconds or a date in the format yyyy-mm-dd (such as 2013-09-26) "
          },
          {
            "name": "to",
            "in": "query",
            "required": false,
            "type": "mixed",
            "description": "End time for the period covered by the report &mdash; now or epoch time in milliseconds or a date in the format yyyy-mm-dd (such as 2013-09-26) "
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "format to return the results in "
          },
          {
            "name": "reconciled",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "if true, only reconciled data is returned; if false, only realtime data is returned; if not present, both reconciled and realtime data are returned "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          },
          {
            "name": "Accept-Encoding",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Accept-Encoding: gzip (optional) "
          }
        ],
        "responses": {
          "Response Fields": {
            "description": "Response Fields",
            "schema": {
              "$ref": "#/definitions/Get_Analytics_ReportResponseFields"
            }
          },
          "Error 4xx": {
            "description": "Error 4xx",
            "schema": {
              "$ref": "#/definitions/Get_Analytics_ReportError4xx"
            }
          },
          "Error 5xx": {
            "description": "Error 5xx",
            "schema": {
              "$ref": "#/definitions/Get_Analytics_ReportError5xx"
            }
          }
        },
        "operationId": "Get_Analytics_Report"
      }
    },
    "/data/status": {
      "get": {
        "tags": [
          "Report"
        ],
        "summary": "Get Available Date Range",
        "description": "Get the date range for which reconciled data is available for any Analytics API report. All parameters are allowed, but only account, dimensions, and where affect the result &mdash; all others are ignored. Note that date range for this request must fall within the available date range for the dimensions requested &mdash; the simplest thing to do is to use from=alltime ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accounts",
            "in": "query",
            "required": true,
            "type": "number",
            "description": "one or more Video Cloud account IDs separated by commas "
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "number",
            "description": "ignored "
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "number",
            "description": "ignored "
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ignored "
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ignored "
          },
          {
            "name": "dimensions",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "one or more dimensions to report on; see Multiple Dimensions for which combined dimensions are supported "
          },
          {
            "name": "where",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "one or more dimension==value pairs to filter the results; see Where Filters for details "
          },
          {
            "name": "from",
            "in": "query",
            "required": false,
            "type": "mixed",
            "description": "ignored "
          },
          {
            "name": "to",
            "in": "query",
            "required": false,
            "type": "mixed",
            "description": "ignored "
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ignored "
          },
          {
            "name": "reconciled",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "if true, only reconciled data is returned; if false, only realtime data is returned; if not present, both reconciled and realtime data are returned "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          },
          {
            "name": "Accept-Encoding",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Accept-Encoding: gzip (optional) "
          }
        ],
        "responses": {
          "Response Fields": {
            "description": "Response Fields",
            "schema": {
              "$ref": "#/definitions/Get_Available_Date_RangeResponseFields"
            }
          },
          "Error 4xx": {
            "description": "Error 4xx",
            "schema": {
              "$ref": "#/definitions/Get_Available_Date_RangeError4xx"
            }
          },
          "Error 5xx": {
            "description": "Error 5xx",
            "schema": {
              "$ref": "#/definitions/Get_Available_Date_RangeError5xx"
            }
          }
        },
        "operationId": "Get_Available_Date_Range"
      }
    },
    "/alltime/accounts/{account_id}/videos/{video_id}": {
      "get": {
        "tags": [
          "Video_Data"
        ],
        "summary": "Get Alltime Video Views",
        "description": "returns the total alltime video views for a video ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "a Video Cloud account ID "
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "a Video Cloud video ID "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          },
          {
            "name": "Accept-Encoding",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Accept-Encoding: gzip (optional) "
          }
        ],
        "responses": {
          "Response Fields": {
            "description": "Response Fields",
            "schema": {
              "$ref": "#/definitions/Get_Alltime_Video_ViewsResponseFields"
            }
          },
          "Error 4xx": {
            "description": "Error 4xx",
            "schema": {
              "$ref": "#/definitions/Get_Alltime_Video_ViewsError4xx"
            }
          },
          "Error 5xx": {
            "description": "Error 5xx",
            "schema": {
              "$ref": "#/definitions/Get_Alltime_Video_ViewsError5xx"
            }
          }
        },
        "operationId": "Get_Alltime_Video_Views"
      }
    },
    "": {
      "": {
        "tags": [
          "_Users_rcrooks_git_Brightcove_API_References_analytics_api_v1_doc_main_js"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "Success 200": {
            "description": "Success 200"
          }
        },
        "operationId": ""
      }
    }
  },
  "definitions": {
    "timeline": {
      "properties": {
        "type": {
          "type": "string",
          "description": "type of data in the values array "
        },
        "values": {
          "type": "array",
          "description": "array of views in each 100th part of video duration ",
          "items": {
            "type": "number"
          }
        }
      },
      "required": [
        "type",
        "values"
      ]
    },
    "Get_Account_EngagementError4xx": {
      "properties": {
        "UNAUTHORIZED": {
          "type": "json",
          "description": "401: Authentication failed; check to make sure your policy key is correct "
        },
        "RESOURCE_NOT_FOUND": {
          "type": "json",
          "description": "404: The api couldn&#39;t find the resource you requested "
        },
        "BAD_REQUEST": {
          "type": "json",
          "description": "400: The message fields of the response contains information about what caused the error such as invalid value for sort parameter "
        },
        "UNSUPPORTED_FIELD_COMBINATION_ERROR": {
          "type": "json",
          "description": "400: The message fields of the response contains information about what invalid fields were specifed "
        },
        "METHOD_NOT_ALLOWED": {
          "type": "json",
          "description": "405: This error occurs when the api request is made with an HTTP method other than GET "
        }
      },
      "required": [
        "UNAUTHORIZED",
        "RESOURCE_NOT_FOUND",
        "BAD_REQUEST",
        "UNSUPPORTED_FIELD_COMBINATION_ERROR",
        "METHOD_NOT_ALLOWED"
      ]
    },
    "Get_Account_EngagementError5xx": {
      "properties": {
        "SERVER_ERROR": {
          "type": "json",
          "description": "500: Issue in Brightcove system; try again later "
        },
        "PROCESSING": {
          "type": "json",
          "description": "500: The analytics API may send back this message if it encounters a long running query. Once the query has finished it will be stored in the server’s cache for up to 5 minutes. Therefore we suggest querying the API 4 minutes after receiving this error "
        }
      },
      "required": [
        "SERVER_ERROR",
        "PROCESSING"
      ]
    },
    "Get_Player_EngagementError4xx": {
      "properties": {
        "UNAUTHORIZED": {
          "type": "json",
          "description": "401: Authentication failed; check to make sure your policy key is correct "
        },
        "RESOURCE_NOT_FOUND": {
          "type": "json",
          "description": "404: The api couldn&#39;t find the resource you requested "
        },
        "BAD_REQUEST": {
          "type": "json",
          "description": "400: The message fields of the response contains information about what caused the error such as invalid value for sort parameter "
        },
        "UNSUPPORTED_FIELD_COMBINATION_ERROR": {
          "type": "json",
          "description": "400: The message fields of the response contains information about what invalid fields were specifed "
        },
        "METHOD_NOT_ALLOWED": {
          "type": "json",
          "description": "405: This error occurs when the api request is made with an HTTP method other than GET "
        }
      },
      "required": [
        "UNAUTHORIZED",
        "RESOURCE_NOT_FOUND",
        "BAD_REQUEST",
        "UNSUPPORTED_FIELD_COMBINATION_ERROR",
        "METHOD_NOT_ALLOWED"
      ]
    },
    "Get_Player_EngagementError5xx": {
      "properties": {
        "SERVER_ERROR": {
          "type": "json",
          "description": "500: Issue in Brightcove system; try again later "
        },
        "PROCESSING": {
          "type": "json",
          "description": "500: The analytics API may send back this message if it encounters a long running query. Once the query has finished it will be stored in the server’s cache for up to 5 minutes. Therefore we suggest querying the API 4 minutes after receiving this error "
        }
      },
      "required": [
        "SERVER_ERROR",
        "PROCESSING"
      ]
    },
    "Get_Video_EngagementResponseFields": {
      "properties": {
        "video_duration": {
          "type": "string",
          "description": "the video duration in seconds "
        }
      },
      "required": [
        "video_duration"
      ]
    },
    "Get_Video_EngagementError4xx": {
      "properties": {
        "UNAUTHORIZED": {
          "type": "json",
          "description": "401: Authentication failed; check to make sure your policy key is correct "
        },
        "RESOURCE_NOT_FOUND": {
          "type": "json",
          "description": "404: The api couldn&#39;t find the resource you requested "
        },
        "BAD_REQUEST": {
          "type": "json",
          "description": "400: The message fields of the response contains information about what caused the error such as invalid value for sort parameter "
        },
        "UNSUPPORTED_FIELD_COMBINATION_ERROR": {
          "type": "json",
          "description": "400: The message fields of the response contains information about what invalid fields were specifed "
        },
        "METHOD_NOT_ALLOWED": {
          "type": "json",
          "description": "405: This error occurs when the api request is made with an HTTP method other than GET "
        }
      },
      "required": [
        "UNAUTHORIZED",
        "RESOURCE_NOT_FOUND",
        "BAD_REQUEST",
        "UNSUPPORTED_FIELD_COMBINATION_ERROR",
        "METHOD_NOT_ALLOWED"
      ]
    },
    "Get_Video_EngagementError5xx": {
      "properties": {
        "SERVER_ERROR": {
          "type": "json",
          "description": "500: Issue in Brightcove system; try again later "
        },
        "PROCESSING": {
          "type": "json",
          "description": "500: The analytics API may send back this message if it encounters a long running query. Once the query has finished it will be stored in the server’s cache for up to 5 minutes. Therefore we suggest querying the API 4 minutes after receiving this error "
        }
      },
      "required": [
        "SERVER_ERROR",
        "PROCESSING"
      ]
    },
    "Get_Analytics_ReportResponseFields": {
      "properties": {
        "account": {
          "type": "string",
          "description": "the Video Cloud account id "
        },
        "item_count": {
          "type": "number",
          "description": "the total number of items matching the request "
        },
        "items": {
          "type": "array",
          "description": "array of analytics objects for the videos returned ",
          "items": {
            "$ref": "#/definitions/items"
          }
        },
        "summary": {
          "type": "object",
          "description": "of all videos matching this request that had views ",
          "$ref": "#/definitions/summary"
        },
        "video_engagement_1": {
          "type": "number",
          "description": "number of views at the 1% point of the video duration for all videos "
        },
        "video_engagement_25": {
          "type": "number",
          "description": "number of views at the 25% point of the video duration for all videos "
        },
        "video_engagement_50": {
          "type": "number",
          "description": "number of views at the 50% point of the video duration for all videos "
        },
        "video_engagement_75": {
          "type": "number",
          "description": "number of views at the 75% point of the video duration for all videos "
        },
        "video_engagement_100": {
          "type": "number",
          "description": "number of views at the 100% point of the video duration for all videos "
        }
      },
      "required": [
        "account",
        "item_count",
        "items",
        "summary",
        "video_engagement_1",
        "video_engagement_25",
        "video_engagement_50",
        "video_engagement_75",
        "video_engagement_100"
      ]
    },
    "account": {
      "properties": {
        "name": {
          "type": "string",
          "description": "the name of the Video Cloud account id "
        }
      },
      "required": [
        "name"
      ]
    },
    "items": {
      "properties": {
        "ad_mode_begin": {
          "type": "number",
          "description": "number of times a player entered ad mode "
        },
        "ad_mode_complete": {
          "type": "number",
          "description": "number of times a player completed ad mode "
        },
        "bytes_delivered": {
          "type": "number",
          "description": "the total bytes of data delivered, including the videos, other assets such as images and captions, and (for player reports) the player code &mdash; some of the date is obtained from CDNs and may not be available for up to 3 days "
        },
        "engagement_score": {
          "type": "number",
          "description": "the calculated engagement score for the video "
        },
        "play_rate": {
          "type": "number",
          "description": "video views divided by video impressions "
        },
        "play_request": {
          "type": "number",
          "description": "number of play requests received for a video "
        },
        "video": {
          "type": "string",
          "description": "the video id "
        },
        "duration": {
          "type": "string",
          "description": "the duration of the video in seconds "
        },
        "video_engagement_1": {
          "type": "number",
          "description": "number of views at the 1% point of the video duration "
        },
        "video_engagement_25": {
          "type": "number",
          "description": "number of views at the 25% point of the video duration "
        },
        "video_engagement_50": {
          "type": "number",
          "description": "number of views at the 50% point of the video duration "
        },
        "video_engagement_75": {
          "type": "number",
          "description": "number of views at the 75% point of the video duration "
        },
        "video_engagement_100": {
          "type": "number",
          "description": "number of views at the 100% point of the video duration "
        },
        "video_impression": {
          "type": "number",
          "description": "number of times the video was loaded in a player "
        },
        "name": {
          "type": "string",
          "description": "name of the video "
        },
        "video_percent_viewed": {
          "type": "number",
          "description": "average percentage of the video played when viewed "
        },
        "video_seconds_viewed": {
          "type": "number",
          "description": "total seconds of the video viewed "
        },
        "video_view": {
          "type": "number",
          "description": "number of times some portion of the video was viewed "
        }
      },
      "required": [
        "ad_mode_begin",
        "ad_mode_complete",
        "bytes_delivered",
        "engagement_score",
        "play_rate",
        "play_request",
        "video",
        "duration",
        "video_engagement_1",
        "video_engagement_25",
        "video_engagement_50",
        "video_engagement_75",
        "video_engagement_100",
        "video_impression",
        "name",
        "video_percent_viewed",
        "video_seconds_viewed",
        "video_view"
      ]
    },
    "Get_Analytics_ReportError4xx": {
      "properties": {
        "UNAUTHORIZED": {
          "type": "json",
          "description": "401: Authentication failed; check to make sure your policy key is correct "
        },
        "RESOURCE_NOT_FOUND": {
          "type": "json",
          "description": "404: The api couldn&#39;t find the resource you requested "
        },
        "BAD_REQUEST": {
          "type": "json",
          "description": "400: The message fields of the response contains information about what caused the error such as invalid value for sort parameter "
        },
        "UNSUPPORTED_FIELD_COMBINATION_ERROR": {
          "type": "json",
          "description": "400: The message fields of the response contains information about what invalid fields were specifed "
        },
        "METHOD_NOT_ALLOWED": {
          "type": "json",
          "description": "405: This error occurs when the api request is made with an HTTP method other than GET "
        }
      },
      "required": [
        "UNAUTHORIZED",
        "RESOURCE_NOT_FOUND",
        "BAD_REQUEST",
        "UNSUPPORTED_FIELD_COMBINATION_ERROR",
        "METHOD_NOT_ALLOWED"
      ]
    },
    "Get_Analytics_ReportError5xx": {
      "properties": {
        "SERVER_ERROR": {
          "type": "json",
          "description": "500: Issue in Brightcove system; try again later "
        },
        "PROCESSING": {
          "type": "json",
          "description": "500: The analytics API may send back this message if it encounters a long running query. Once the query has finished it will be stored in the server’s cache for up to 5 minutes. Therefore we suggest querying the API 4 minutes after receiving this error "
        }
      },
      "required": [
        "SERVER_ERROR",
        "PROCESSING"
      ]
    },
    "Get_Available_Date_RangeResponseFields": {
      "properties": {
        "reconciled_from": {
          "type": "datestring",
          "description": "the earliest date that you can use for from and get reconciled data "
        },
        "reconciled_to": {
          "type": "datestring",
          "description": "the latest date that you can use for to and get reconciled data (realtime data may be available for later dates) "
        }
      },
      "required": [
        "reconciled_from",
        "reconciled_to"
      ]
    },
    "Get_Available_Date_RangeError4xx": {
      "properties": {
        "UNAUTHORIZED": {
          "type": "json",
          "description": "401: Authentication failed; check to make sure your policy key is correct "
        },
        "RESOURCE_NOT_FOUND": {
          "type": "json",
          "description": "404: The api couldn&#39;t find the resource you requested "
        },
        "BAD_REQUEST": {
          "type": "json",
          "description": "400: The message fields of the response contains information about what caused the error such as invalid value for sort parameter "
        },
        "UNSUPPORTED_FIELD_COMBINATION_ERROR": {
          "type": "json",
          "description": "400: The message fields of the response contains information about what invalid fields were specifed "
        },
        "METHOD_NOT_ALLOWED": {
          "type": "json",
          "description": "405: This error occurs when the api request is made with an HTTP method other than GET "
        }
      },
      "required": [
        "UNAUTHORIZED",
        "RESOURCE_NOT_FOUND",
        "BAD_REQUEST",
        "UNSUPPORTED_FIELD_COMBINATION_ERROR",
        "METHOD_NOT_ALLOWED"
      ]
    },
    "Get_Available_Date_RangeError5xx": {
      "properties": {
        "SERVER_ERROR": {
          "type": "json",
          "description": "500: Issue in Brightcove system; try again later "
        },
        "PROCESSING": {
          "type": "json",
          "description": "500: The analytics API may send back this message if it encounters a long running query. Once the query has finished it will be stored in the server’s cache for up to 5 minutes. Therefore we suggest querying the API 4 minutes after receiving this error "
        }
      },
      "required": [
        "SERVER_ERROR",
        "PROCESSING"
      ]
    },
    "Get_Alltime_Video_ViewsResponseFields": {
      "properties": {
        "alltime_video_views": {
          "type": "number",
          "description": "all-time video views "
        }
      },
      "required": [
        "alltime_video_views"
      ]
    },
    "Get_Alltime_Video_ViewsError4xx": {
      "properties": {
        "UNAUTHORIZED": {
          "type": "json",
          "description": "401: Authentication failed; check to make sure your policy key is correct "
        },
        "RESOURCE_NOT_FOUND": {
          "type": "json",
          "description": "404: The api couldn&#39;t find the resource you requested "
        },
        "BAD_REQUEST": {
          "type": "json",
          "description": "400: The message fields of the response contains information about what caused the error such as invalid value for sort parameter "
        },
        "METHOD_NOT_ALLOWED": {
          "type": "json",
          "description": "405: This error occurs when the api request is made with an HTTP method other than GET "
        }
      },
      "required": [
        "UNAUTHORIZED",
        "RESOURCE_NOT_FOUND",
        "BAD_REQUEST",
        "METHOD_NOT_ALLOWED"
      ]
    },
    "Get_Alltime_Video_ViewsError5xx": {
      "properties": {
        "SERVER_ERROR": {
          "type": "json",
          "description": "500: Issue in Brightcove system; try again later "
        }
      },
      "required": [
        "SERVER_ERROR"
      ]
    }
  },
  "schemes": [
    "https"
  ],
  "host": "analytics.api.brightcove.com",
  "basePath": "/v1"
}