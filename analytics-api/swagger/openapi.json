{
  "openapi": "3.0.0",
  "info": {
    "title": "Brightcove Analytics API Reference",
    "description": "Reference for the Brightcove Analytics API, used to retrieve analytics data for your accounts. To test API requests, you can use our <a href=\"https://support.brightcove.com/node/17910\" target=\"_blank\">API Testing Tools</a>.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://analytics.api.brightcove.com/v1",
      "variables": {}
    }
  ],
  "paths": {
    "/engagement/accounts/{account_id}": {
      "get": {
        "tags": [
          "Engagement"
        ],
        "summary": "Get_Account_Engagement",
        "description": "Get a summary report of engagement for the account. Note:  Engagement reports are only available for periods within the past 32 days. Requests outside that range will return an error The only parameters supported for Engagement reports are from and to Engagement reports are available for single accounts only - reports on multiple accounts will not work  ",
        "operationId": "GetAccountEngagement",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "a Video Cloud account ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type: application/json",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Encoding",
            "in": "header",
            "description": "Accept-Encoding: gzip (optional)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "description": "200",
                  "$ref": "#/components/schemas/Timeline"
                }
              }
            }
          },
          "400": {
            "description": "BAD_REQUEST: The message fields of the response contains information about what caused the error such as invalid value for sort parameter \nUNSUPPORTED_FIELD_COMBINATION_ERROR: The message fields of the response contains information about what invalid fields were specifed "
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your policy key is correct "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: This error occurs when the api request is made with an HTTP method other than GET "
          },
          "500": {
            "description": "SERVER_ERROR: Issue in Brightcove system; try again later \nPROCESSING: The analytics API may send back this message if it encounters a long running query. Once the query has finished it will be stored in the server’s cache for up to 5 minutes. Therefore we suggest querying the API 4 minutes after receiving this error "
          }
        },
        "deprecated": false,
        "security": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/engagement/accounts/{account_id}/players/{player_id}": {
      "get": {
        "tags": [
          "Engagement"
        ],
        "summary": "Get_Player_Engagement",
        "description": "Get a summary report of engagement for a player. Note:  Engagement reports are only available for periods within the past 32 days. Requests outside that range will return an error The only parameters supported for Engagement reports are from and to Engagement reports are available for single accounts only - reports on multiple accounts will not work  ",
        "operationId": "GetPlayerEngagement",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "a Video Cloud account ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "player_id",
            "in": "path",
            "description": "a Video Cloud player ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type: application/json",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Encoding",
            "in": "header",
            "description": "Accept-Encoding: gzip (optional)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "description": "200",
                  "$ref": "#/components/schemas/Timeline"
                }
              }
            }
          },
          "400": {
            "description": "BAD_REQUEST: The message fields of the response contains information about what caused the error such as invalid value for sort parameter \nUNSUPPORTED_FIELD_COMBINATION_ERROR: The message fields of the response contains information about what invalid fields were specifed "
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your policy key is correct "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: This error occurs when the api request is made with an HTTP method other than GET "
          },
          "500": {
            "description": "SERVER_ERROR: Issue in Brightcove system; try again later \nPROCESSING: The analytics API may send back this message if it encounters a long running query. Once the query has finished it will be stored in the server’s cache for up to 5 minutes. Therefore we suggest querying the API 4 minutes after receiving this error "
          }
        },
        "deprecated": false,
        "security": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/engagement/accounts/{account_id}/videos/{video_id}": {
      "get": {
        "tags": [
          "Engagement"
        ],
        "summary": "Get_Video_Engagement",
        "description": "Get a summary report of engagement for a video. Note:  Engagement reports are only available for periods within the past 32 days. Requests outside that range will return an error The only parameters supported for Engagement reports are from and to Engagement reports are available for single accounts only - reports on multiple accounts will not work  ",
        "operationId": "GetVideoEngagement",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "a Video Cloud account ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "video_id",
            "in": "path",
            "description": "a Video Cloud video ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type: application/json",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Encoding",
            "in": "header",
            "description": "Accept-Encoding: gzip (optional)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "description": "200",
                  "$ref": "#/components/schemas/GetVideoEngagement200"
                }
              }
            }
          },
          "400": {
            "description": "BAD_REQUEST: The message fields of the response contains information about what caused the error such as invalid value for sort parameter \nUNSUPPORTED_FIELD_COMBINATION_ERROR: The message fields of the response contains information about what invalid fields were specifed "
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your policy key is correct "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: This error occurs when the api request is made with an HTTP method other than GET "
          },
          "500": {
            "description": "SERVER_ERROR: Issue in Brightcove system; try again later \nPROCESSING: The analytics API may send back this message if it encounters a long running query. Once the query has finished it will be stored in the server’s cache for up to 5 minutes. Therefore we suggest querying the API 4 minutes after receiving this error "
          }
        },
        "deprecated": false,
        "security": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/data": {
      "get": {
        "tags": [
          "Report"
        ],
        "summary": "Get_Analytics_Report",
        "description": "Get an analytics report on one or more dimensions. Note that the fields returned in the response will vary according to the dimension(s) requested and the fields specified in the fields parameter ",
        "operationId": "GetAnalyticsReport",
        "parameters": [
          {
            "name": "accounts",
            "in": "query",
            "description": "One or more account ids, separated by commas",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dimensions",
            "in": "query",
            "description": "One or more dimensions to report on; see [Multiple Dimensions](https://support.brightcove.com/overview-analytics-api-v1#metrics) for which combined dimensions are supported",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/Dimensions"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type: application/json",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Encoding",
            "in": "header",
            "description": "Accept-Encoding: gzip (optional)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items to return",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10,
              "example": 10
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Number of items to skip",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0,
              "example": 0
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Field to sort results by (prefix with `-` for descending order)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "default": "video_view",
              "example": "video_view"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Fields to return",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "default": "`video_view` + others (varies by dimension)",
              "example": "`video_view` + others (varies by dimension)"
            }
          },
          {
            "name": "where",
            "in": "query",
            "description": "one or more 'dimension==value' pairs to filter the results; see [Where Filters](https://support.brightcove.com/overview-analytics-api-v1#filterValues) for details",
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/Where"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Start time for the period covered by the report — `alltime` or epoch time in milliseconds or a date in the format `yyyy-mm-dd` (such as `2013-09-26`)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "default": "(30 days before now)",
              "example": "(30 days before now)"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "End time for the period covered by the report — `now` or epoch time in milliseconds or a date in the format `yyyy-mm-dd` (such as `2013-09-26`)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "default": "now",
              "example": "now"
            }
          },
          {
            "name": "format",
            "in": "query",
            "description": "format to return the results in",
            "style": "form",
            "explode": true,
            "schema": {
              "default": "json",
              "example": "json",
              "$ref": "#/components/schemas/Format"
            }
          },
          {
            "name": "reconciled",
            "in": "query",
            "description": "if true, only reconciled data is returned; if false, only realtime data is returned; if not present, both reconciled and realtime data are returned",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "default": true,
              "example": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "description": "200",
                  "$ref": "#/components/schemas/GetAnalyticsReport200"
                }
              }
            }
          },
          "400": {
            "description": "BAD_REQUEST: The message fields of the response contains information about what caused the error such as invalid value for sort parameter \nUNSUPPORTED_FIELD_COMBINATION_ERROR: The message fields of the response contains information about what invalid fields were specifed "
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your policy key is correct "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: This error occurs when the api request is made with an HTTP method other than GET "
          },
          "500": {
            "description": "SERVER_ERROR: Issue in Brightcove system; try again later \nPROCESSING: The analytics API may send back this message if it encounters a long running query. Once the query has finished it will be stored in the server’s cache for up to 5 minutes. Therefore we suggest querying the API 4 minutes after receiving this error "
          }
        },
        "deprecated": false,
        "security": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/data/status": {
      "get": {
        "tags": [
          "Report"
        ],
        "summary": "Get_Available_Date_Range",
        "description": "Get the date range for which reconciled data is available for any Analytics API report. All parameters are allowed, but only account, dimensions, and where affect the result &mdash; all others are ignored. Note that date range for this request must fall within the available date range for the dimensions requested &mdash; the simplest thing to do is to use from=alltime ",
        "operationId": "GetAvailableDateRange",
        "parameters": [
          {
            "name": "accounts",
            "in": "query",
            "description": "One or more account ids, separated by commas",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dimensions",
            "in": "query",
            "description": "One or more dimensions to report on; see [Multiple Dimensions](https://support.brightcove.com/overview-analytics-api-v1#metrics) for which combined dimensions are supported",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/Dimensions"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type: application/json",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Encoding",
            "in": "header",
            "description": "Accept-Encoding: gzip (optional)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items to return",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10,
              "example": 10
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Number of items to skip",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0,
              "example": 0
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Field to sort results by (prefix with `-` for descending order)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "default": "video_view",
              "example": "video_view"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Fields to return",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "default": "`video_view` + others (varies by dimension)",
              "example": "`video_view` + others (varies by dimension)"
            }
          },
          {
            "name": "where",
            "in": "query",
            "description": "one or more 'dimension==value' pairs to filter the results; see [Where Filters](https://support.brightcove.com/overview-analytics-api-v1#filterValues) for details",
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/Where"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Start time for the period covered by the report — `alltime` or epoch time in milliseconds or a date in the format `yyyy-mm-dd` (such as `2013-09-26`)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "default": "(30 days before now)",
              "example": "(30 days before now)"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "End time for the period covered by the report — `now` or epoch time in milliseconds or a date in the format `yyyy-mm-dd` (such as `2013-09-26`)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "default": "now",
              "example": "now"
            }
          },
          {
            "name": "format",
            "in": "query",
            "description": "format to return the results in",
            "style": "form",
            "explode": true,
            "schema": {
              "default": "json",
              "example": "json",
              "$ref": "#/components/schemas/Format"
            }
          },
          {
            "name": "reconciled",
            "in": "query",
            "description": "if true, only reconciled data is returned; if false, only realtime data is returned; if not present, both reconciled and realtime data are returned",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "default": true,
              "example": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "description": "200",
                  "$ref": "#/components/schemas/GetAvailableDateRange200"
                }
              }
            }
          },
          "400": {
            "description": "BAD_REQUEST: The message fields of the response contains information about what caused the error such as invalid value for sort parameter \nUNSUPPORTED_FIELD_COMBINATION_ERROR: The message fields of the response contains information about what invalid fields were specifed "
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your policy key is correct "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: This error occurs when the api request is made with an HTTP method other than GET "
          },
          "500": {
            "description": "SERVER_ERROR: Issue in Brightcove system; try again later \nPROCESSING: The analytics API may send back this message if it encounters a long running query. Once the query has finished it will be stored in the server’s cache for up to 5 minutes. Therefore we suggest querying the API 4 minutes after receiving this error "
          }
        },
        "deprecated": false,
        "security": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/alltime/accounts/{account_id}/videos/{video_id}": {
      "get": {
        "tags": [
          "Video Data"
        ],
        "summary": "Get_Alltime_Video_Views",
        "description": "returns the total alltime video views for a video ",
        "operationId": "GetAlltimeVideoViews",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "a Video Cloud account ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "video_id",
            "in": "path",
            "description": "a Video Cloud video ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type: application/json",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Encoding",
            "in": "header",
            "description": "Accept-Encoding: gzip (optional)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "description": "200",
                  "$ref": "#/components/schemas/GetAlltimeVideoViews200"
                }
              }
            }
          },
          "400": {
            "description": "BAD_REQUEST: The message fields of the response contains information about what caused the error such as invalid value for sort parameter "
          },
          "401": {
            "description": "UNAUTHORIZED: Authentication failed; check to make sure your policy key is correct "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: This error occurs when the api request is made with an HTTP method other than GET "
          },
          "500": {
            "description": "SERVER_ERROR: Issue in Brightcove system; try again later "
          }
        },
        "deprecated": false,
        "security": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    }
  },
  "components": {
    "schemas": {
      "UrlParameters": {
        "title": "URL Parameters",
        "required": [
          "accounts",
          "dimensions"
        ],
        "type": "object",
        "properties": {
          "accounts": {
            "type": "string",
            "description": "one or more Video Cloud account IDs separated by commas"
          },
          "dimensions": {
            "type": "string",
            "description": "one or more dimensions to report on; see Multiple Dimensions for which combined dimensions are supported"
          },
          "from": {
            "type": "string",
            "description": "Start time for the period covered by the report &mdash; epoch time in milliseconds or a date in the format yyyy-mm-dd (such as 2013-09-26)",
            "example": "30_days_before_now"
          },
          "to": {
            "type": "string",
            "description": "End time for the period covered by the report &mdash; epoch time in milliseconds or a date in the format yyyy-mm-dd (such as 2013-09-26)",
            "example": "now"
          },
          "limit": {
            "type": "integer",
            "description": "number of videos to return",
            "format": "int32"
          },
          "offset": {
            "type": "integer",
            "description": "number of videos to skip in the response",
            "format": "int32"
          },
          "sort": {
            "type": "string",
            "description": "field to sort results by (for video dimension reports, valid sort fields include the video metadata fields video.name, video.tags, video.reference_id and video.custom_fields - see (Fields and Sort))"
          },
          "fields": {
            "type": "string",
            "description": "fields to return for items; see Dimensions and Fields for the available fields for each dimension"
          },
          "where": {
            "type": "string",
            "description": "one or more dimension==value pairs to filter the results; see Where Filters for details"
          },
          "format": {
            "type": "string",
            "description": "format to return the results in"
          },
          "reconciled": {
            "type": "boolean",
            "description": "if true, only reconciled data is returned; if false, only realtime data is returned; if not present, both reconciled and realtime data are returned"
          }
        }
      },
      "Summary": {
        "title": "summary",
        "type": "object",
        "properties": {
          "ad_mode_begin": {
            "type": "integer",
            "description": "Total ad mode begin events received for all items - note that properties included in the summary vary depending on the dimension(s) and fields requested",
            "format": "int32"
          },
          "ad_mode_complete": {
            "type": "integer",
            "description": "Total ad mode complete events received for all items - note that properties included in the summary vary depending on the dimension(s) and fields requested",
            "format": "int32"
          },
          "active_media": {
            "type": "integer",
            "description": "Total active videos in account(s) - note that properties included in the summary vary depending on the dimension(s) and fields requested",
            "format": "int32"
          },
          "bytes_delivered": {
            "type": "integer",
            "description": "Total bytes of data delivered for all items - note that properties included in the summary vary depending on the dimension(s) and fields requested",
            "format": "int32"
          },
          "daily_unique_viewers": {
            "type": "integer",
            "description": "Total daily unique viewers for all items - note that properties included in the summary vary depending on the dimension(s) and fields requested",
            "format": "int32"
          },
          "drm_bytes_packaged": {
            "type": "number",
            "description": "Total DRM bytes packaged for all items - note that properties included in the summary vary depending on the dimension(s) and fields requested"
          },
          "engagement_score": {
            "type": "number",
            "description": "Average engagement score for all items - note that properties included in the summary vary depending on the dimension(s) and fields requested"
          },
          "licenses_served": {
            "type": "integer",
            "description": "Total DRM licenses serverd for all items - note that properties included in the summary vary depending on the dimension(s) and fields requested",
            "format": "int32"
          },
          "live_seconds_streamed": {
            "type": "number",
            "description": "Total second of live video streamed for all items - note that properties included in the summary vary depending on the dimension(s) and fields requested"
          },
          "play_rate": {
            "type": "number",
            "description": "Average play rate for all items - note that properties included in the summary vary depending on the dimension(s) and fields requested"
          },
          "play_request": {
            "type": "integer",
            "description": "Total play requests for all items - note that properties included in the summary vary depending on the dimension(s) and fields requested",
            "format": "int32"
          },
          "player_load": {
            "type": "integer",
            "description": "Total player loads for all items - note that properties included in the summary vary depending on the dimension(s) and fields requested",
            "format": "int32"
          },
          "video_engagement_1": {
            "type": "number",
            "description": "Average views at 1% point for all items - note that properties included in the summary vary depending on the dimension(s) and fields requested"
          },
          "video_engagement_25": {
            "type": "number",
            "description": "Average views at 25% point for all items - note that properties included in the summary vary depending on the dimension(s) and fields requested"
          },
          "video_engagement_50": {
            "type": "number",
            "description": "Average views at 50% point for all items - note that properties included in the summary vary depending on the dimension(s) and fields requested"
          },
          "video_engagement_75": {
            "type": "number",
            "description": "Average views at 75% point for all items - note that properties included in the summary vary depending on the dimension(s) and fields requested"
          },
          "video_engagement_100": {
            "type": "number",
            "description": "Average views at 100% point for all items - note that properties included in the summary vary depending on the dimension(s) and fields requested"
          },
          "video_impression": {
            "type": "integer",
            "description": "Total video impressions for all items - note that properties included in the summary vary depending on the dimension(s) and fields requested",
            "format": "int32"
          },
          "video_view": {
            "type": "integer",
            "description": "Total video views for all items - note that properties included in the summary vary depending on the dimension(s) and fields requested",
            "format": "int32"
          }
        }
      },
      "Timeline": {
        "title": "timeline",
        "required": [
          "type",
          "values"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "The type of the timeline array"
          },
          "values": {
            "type": "array",
            "items": {
              "type": "number"
            },
            "description": "Array of views in each 100th part of video duration"
          }
        }
      },
      "GetVideoEngagement200": {
        "title": "Get_Video_Engagement200",
        "required": [
          "video_duration"
        ],
        "type": "object",
        "properties": {
          "video_duration": {
            "type": "string",
            "description": "the video duration in seconds"
          }
        }
      },
      "GetAnalyticsReport200": {
        "title": "Get_Analytics_Report200",
        "required": [
          "account",
          "item_count",
          "items",
          "summary",
          "video_engagement_1",
          "video_engagement_25",
          "video_engagement_50",
          "video_engagement_75",
          "video_engagement_100"
        ],
        "type": "object",
        "properties": {
          "account": {
            "type": "string",
            "description": "the Video Cloud account id"
          },
          "item_count": {
            "type": "integer",
            "description": "the total number of items matching the request",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Items"
            },
            "description": "array of analytics objects for the videos returned"
          },
          "summary": {
            "$ref": "#/components/schemas/Summary"
          },
          "video_engagement_1": {
            "type": "number",
            "description": "number of views at the 1% point of the video duration for all videos"
          },
          "video_engagement_25": {
            "type": "number",
            "description": "number of views at the 25% point of the video duration for all videos"
          },
          "video_engagement_50": {
            "type": "number",
            "description": "number of views at the 50% point of the video duration for all videos"
          },
          "video_engagement_75": {
            "type": "number",
            "description": "number of views at the 75% point of the video duration for all videos"
          },
          "video_engagement_100": {
            "type": "number",
            "description": "number of views at the 100% point of the video duration for all videos"
          }
        }
      },
      "Items": {
        "title": "items",
        "required": [
          "ad_mode_begin",
          "ad_mode_complete",
          "bytes_delivered",
          "engagement_score",
          "play_rate",
          "play_request",
          "video",
          "duration",
          "video_engagement_1",
          "video_engagement_25",
          "video_engagement_50",
          "video_engagement_75",
          "video_engagement_100",
          "video_impression",
          "name",
          "video_percent_viewed",
          "video_seconds_viewed",
          "video_view"
        ],
        "type": "object",
        "properties": {
          "ad_mode_begin": {
            "type": "integer",
            "description": "number of times a player entered ad mode",
            "format": "int32"
          },
          "ad_mode_complete": {
            "type": "integer",
            "description": "number of times a player completed ad mode",
            "format": "int32"
          },
          "bytes_delivered": {
            "type": "number",
            "description": "the total bytes of data delivered, including the videos, other assets such as images and captions, and (for player reports) the player code &mdash; some of the date is obtained from CDNs and may not be available for up to 3 days"
          },
          "engagement_score": {
            "type": "number",
            "description": "the calculated engagement score for the video"
          },
          "play_rate": {
            "type": "number",
            "description": "video views divided by video impressions"
          },
          "play_request": {
            "type": "integer",
            "description": "number of play requests received for a video",
            "format": "int32"
          },
          "video": {
            "type": "string",
            "description": "the video id"
          },
          "duration": {
            "type": "string",
            "description": "the duration of the video in seconds (note that the duration is available only if there is at least one `video_view`)"
          },
          "video_engagement_1": {
            "type": "number",
            "description": "number of views at the 1% point of the video duration"
          },
          "video_engagement_25": {
            "type": "number",
            "description": "number of views at the 25% point of the video duration"
          },
          "video_engagement_50": {
            "type": "number",
            "description": "number of views at the 50% point of the video duration"
          },
          "video_engagement_75": {
            "type": "number",
            "description": "number of views at the 75% point of the video duration"
          },
          "video_engagement_100": {
            "type": "number",
            "description": "number of views at the 100% point of the video duration"
          },
          "video_impression": {
            "type": "integer",
            "description": "number of times the video was loaded in a player",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "name of the video"
          },
          "video_percent_viewed": {
            "type": "number",
            "description": "average percentage of the video played when viewed"
          },
          "video_seconds_viewed": {
            "type": "number",
            "description": "total seconds of the video viewed"
          },
          "video_view": {
            "type": "integer",
            "description": "number of times some portion of the video was viewed",
            "format": "int32"
          }
        }
      },
      "Account": {
        "title": "account",
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "the name of the Video Cloud account id"
          }
        }
      },
      "GetAvailableDateRange200": {
        "title": "Get_Available_Date_Range200",
        "required": [
          "reconciled_from",
          "reconciled_to"
        ],
        "type": "object",
        "properties": {
          "reconciled_from": {
            "type": "string",
            "description": "the earliest date that you can use for from and get reconciled data"
          },
          "reconciled_to": {
            "type": "string",
            "description": "the latest date that you can use for to and get reconciled data (realtime data may be available for later dates)"
          }
        }
      },
      "GetAlltimeVideoViews200": {
        "title": "Get_Alltime_Video_Views200",
        "required": [
          "alltime_video_views"
        ],
        "type": "object",
        "properties": {
          "alltime_video_views": {
            "type": "integer",
            "description": "all-time video views",
            "format": "int32"
          }
        }
      },
      "Dimensions": {
        "title": "dimensions",
        "enum": [
          "account",
          "city",
          "country",
          "region",
          "date",
          "date-time",
          "device_os",
          "device_type",
          "player",
          "referrer_domain",
          "destination_domain",
          "search_terms",
          "source_type",
          "video"
        ],
        "type": "string",
        "example": "account",
        "x-enum-elements": [
          {
            "name": "account",
            "description": "Analytics data for account as a whole"
          },
          {
            "name": "city",
            "description": "Geo analytics for cities"
          },
          {
            "name": "country",
            "description": "Geo analytics for countries"
          },
          {
            "name": "region",
            "description": "Geo analytics for regions of countries"
          },
          {
            "name": "date",
            "description": "Daily analytics for a range of days"
          },
          {
            "name": "datetime",
            "description": "Hourly analytics for a range of hours - available for the previous 32 days"
          },
          {
            "name": "device_os",
            "description": "Analytics by device operating systems"
          },
          {
            "name": "device_type",
            "description": "Analytics by device type"
          },
          {
            "name": "player",
            "description": "Analytics by player"
          },
          {
            "name": "referrer_domain",
            "description": "Analytics by referring domain"
          },
          {
            "name": "destination_domain",
            "description": "Analytics by the destination domain"
          },
          {
            "name": "search_terms",
            "description": "Search terms that brought the user to the page"
          },
          {
            "name": "source_type",
            "description": "Source such as search or direct link"
          },
          {
            "name": "video",
            "description": "Analytics by video"
          }
        ]
      },
      "Where": {
        "title": "where",
        "enum": [
          "account",
          "city",
          "country",
          "region",
          "date",
          "date-time",
          "device_os",
          "device_type",
          "player",
          "referrer_domain",
          "destination_domain",
          "search_terms",
          "source_type",
          "video"
        ],
        "type": "string",
        "example": "account",
        "x-enum-elements": [
          {
            "name": "account",
            "description": ""
          },
          {
            "name": "city",
            "description": ""
          },
          {
            "name": "country",
            "description": ""
          },
          {
            "name": "region",
            "description": ""
          },
          {
            "name": "date",
            "description": ""
          },
          {
            "name": "datetime",
            "description": ""
          },
          {
            "name": "device_os",
            "description": ""
          },
          {
            "name": "device_type",
            "description": ""
          },
          {
            "name": "player",
            "description": ""
          },
          {
            "name": "referrer_domain",
            "description": ""
          },
          {
            "name": "destination_domain",
            "description": ""
          },
          {
            "name": "search_terms",
            "description": ""
          },
          {
            "name": "source_type",
            "description": ""
          },
          {
            "name": "video",
            "description": ""
          }
        ]
      },
      "Format": {
        "title": "format",
        "enum": [
          "csv",
          "json",
          "xlxs"
        ],
        "type": "string",
        "example": "csv",
        "x-enum-elements": [
          {
            "name": "csv",
            "description": ""
          },
          {
            "name": "json",
            "description": ""
          },
          {
            "name": "xlxs",
            "description": ""
          }
        ]
      }
    }
  }
}
