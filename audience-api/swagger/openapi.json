{
  "openapi": "3.0.0",
  "info": {
    "title": "Audience API Reference",
    "description": "Reference for the Brightcove Audience API, used to retrieve audience data for your accounts. To test API requests, you can use our [API Testing Tools](https://support.brightcove.com/node/17910).",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://audience.api.brightcove.com/v1",
      "variables": {}
    }
  ],
  "paths": {
    "/accounts/{account_id}/leads": {
      "get": {
        "tags": [
          "Leads"
        ],
        "summary": "Get_Leads",
        "description": "Get leads for an account ",
        "operationId": "GetLeads",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "a Video Cloud account ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type: application/json",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
          "name": "limit",
          "in": "query",
          "description": "Number of items to return",
          "style": "form",
          "explode": true,
          "schema": {
            "type": "integer",
            "format": "int32",
            "default": 25,
            "example": 25
          }
        },
        {
          "name": "offset",
          "in": "query",
          "description": "Number of items to skip",
          "style": "form",
          "explode": true,
          "schema": {
            "type": "integer",
            "format": "int32",
            "default": 0,
            "example": 0
          }
        },
        {
          "name": "sort",
          "in": "query",
          "description": "Field to sort results by (prefix with `-` for descending order)",
          "style": "form",
          "explode": true,
          "schema": {
            "default": "created_at",
            "example": "created_at",
            "$ref": "#/components/schemas/Sort"
          }
        },
        {
          "name": "fields",
          "in": "query",
          "description": "Fields to return",
          "style": "form",
          "explode": true,
          "schema": {
            "$ref": "#/components/schemas/Fields"
          }
        },
        {
          "name": "where",
          "in": "query",
          "description": "0ne or more field==value pairs to filter the results; fields supported are `video_id`, `video_name`, `tracking_id`, `external_id`, `player_id`, `page_url`, `watched`, `time_watched`, `created_at`, `updated_at`, `is_synced`",
          "style": "form",
          "explode": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "from",
          "in": "query",
          "description": "Start time for the period covered by the report — epoch time in milliseconds or a date in the format `yyyy-mm-dd` (such as `2013-09-26`) or a relative date in `d` (days), `h` (hours), `m` (minutes), `s` (seconds) (such as `-2d` or `-6h`)",
          "style": "form",
          "explode": true,
          "schema": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "integer"
              }
            ]
          }
        },
        {
          "name": "to",
          "in": "query",
          "description": "End time for the period covered by the report — epoch time in milliseconds or a date in the format `yyyy-mm-dd` (such as `2013-09-26`) or a relative date in `d` (days), `h` (hours), `m` (minutes), `s` (seconds) (such as `-2d` or `-6h`)",
          "style": "form",
          "explode": true,
          "schema": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "integer"
              }
            ]
          }
        }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "description": "200",
                  "$ref": "#/components/schemas/GetLeads200"
                }
              }
            }
          },
          "400": {
            "description": "BAD_REQUEST_ERROR: Query parameters are invalid "
          },
          "401": {
            "description": "UNAUTHORIZED_ERROR: The access token is either absent, has expired, or is invalid "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The URL does not exist "
          },
          "429": {
            "description": "REQUEST_THROTTLED_ERROR: The user has exceeded the rate limiting policy "
          },
          "500": {
            "description": "INTERNAL_ERROR: An internal error has occurred "
          },
          "504": {
            "description": "GATEWAY_TIMEOUT_ERROR: The server timed out while fulfilling your request "
          }
        },
        "deprecated": false,
        "security": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/accounts/{account_id}/view_events": {
      "get": {
        "tags": [
          "View_Events"
        ],
        "summary": "Get_View_Events",
        "description": "Get view events for an account - note that only view events that have been processed will appear in the response ",
        "operationId": "GetViewEvents",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "a Video Cloud account ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type: application/json",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items to return",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 25,
              "example": 25
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Number of items to skip",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0,
              "example": 0
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Field to sort results by (prefix with `-` for descending order)",
            "style": "form",
            "explode": true,
            "schema": {
              "default": "created_at",
              "example": "created_at",
              "$ref": "#/components/schemas/Sort"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Fields to return",
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/Fields"
            }
          },
          {
            "name": "where",
            "in": "query",
            "description": "0ne or more field==value pairs to filter the results; fields supported are `video_id`, `video_name`, `tracking_id`, `external_id`, `player_id`, `page_url`, `watched`, `time_watched`, `created_at`, `updated_at`, `is_synced`,`utm_source`, `utm_medium`, `utm_campaign`, `utm_term`, `utm_content`",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Start time for the period covered by the report — epoch time in milliseconds or a date in the format `yyyy-mm-dd` (such as `2013-09-26`) or a relative date in `d` (days), `h` (hours), `m` (minutes), `s` (seconds) (such as `-2d` or `-6h`)",
            "style": "form",
            "explode": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "End time for the period covered by the report — epoch time in milliseconds or a date in the format `yyyy-mm-dd` (such as `2013-09-26`) or a relative date in `d` (days), `h` (hours), `m` (minutes), `s` (seconds) (such as `-2d` or `-6h`)",
            "style": "form",
            "explode": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "description": "200",
                  "$ref": "#/components/schemas/GetViewEvents200"
                }
              }
            }
          },
          "400": {
            "description": "BAD_REQUEST_ERROR: Query parameters are invalid "
          },
          "401": {
            "description": "UNAUTHORIZED_ERROR: The access token is either absent, has expired, or is invalid "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The URL does not exist "
          },
          "429": {
            "description": "REQUEST_THROTTLED_ERROR: The user has exceeded the rate limiting policy "
          },
          "500": {
            "description": "INTERNAL_ERROR: An internal error has occurred "
          },
          "504": {
            "description": "GATEWAY_TIMEOUT_ERROR: The server timed out while fulfilling your request "
          }
        },
        "deprecated": false,
        "security": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    }
  },
  "components": {
    "schemas": {
      "UrlParameters": {
        "title": "URL Parameters",
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "description": "number of items to return"
          },
          "offset": {
            "type": "number",
            "description": "number of videos to skip in the response"
          },
          "sort": {
            "type": "string",
            "description": "field to sort results by"
          },
          "fields": {
            "type": "string",
            "description": ",&quot;external_id&quot;,&quot;player_id&quot;,&quot;page_url&quot;,&quot;created_at&quot;,&quot;email_address&quot;,&quot;first_name&quot;,&quot;last_name&quot;,&quot;business_phone&quot;,&quot;country&quot;,&quot;company_name&quot;,&quot;industry&quot;] fields to return for items (one or more as a comma-delimited list &mdash; by default, all fields are returned)"
          },
          "where": {
            "type": "string",
            "description": "one or more field==value pairs to filter the results; fields supported are &quot;video_id&quot;, &quot;external_id&quot;, &quot;player_id&quot;, &quot;page_url&quot;, &quot;created_at&quot;, &quot;email_address&quot;, &quot;first_name&quot;, &quot;last_name&quot;, &quot;business_phone&quot;, &quot;country&quot;, &quot;company_name&quot;, &quot;industry&quot;"
          },
          "from": {
            "type": "string",
            "description": "Start time for the period covered by the report &mdash; epoch time in milliseconds or a date in the format yyyy-mm-dd (such as 2013-09-26) or a relative date in d (days), h (hours), m (minutes), s (seconds) (such as -2d or -6h)"
          },
          "to": {
            "type": "string",
            "description": "End time for the period covered by the report &mdash; now or epoch time in milliseconds or a date in the format yyyy-mm-dd (such as 2013-09-26) or a relative date in d (days), h (hours), m (minutes), s (seconds) (such as 2d or 6h)"
          }
        }
      },
      "GetLeads200": {
        "title": "Get_Leads200",
        "required": [
          "count",
          "limit",
          "offset",
          "result"
        ],
        "type": "object",
        "properties": {
          "count": {
            "type": "number",
            "description": "the total number of items"
          },
          "limit": {
            "type": "number",
            "description": "the limit for items in this request"
          },
          "offset": {
            "type": "number",
            "description": "the offset for items in this request"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result"
            },
            "description": "array of result items"
          }
        }
      },
      "Result": {
        "title": "result",
        "required": [
          "created_at",
          "email_address",
          "first_name",
          "last_name",
          "business_phone",
          "country",
          "company_name",
          "industry",
          "page_url",
          "player_id",
          "video_id",
          "video_name",
          "watched",
          "time_watched"
        ],
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string",
            "description": "the date created"
          },
          "email_address": {
            "type": "string",
            "description": "the lead&#39;s email address"
          },
          "first_name": {
            "type": "string",
            "description": "the lead&#39;s first name"
          },
          "last_name": {
            "type": "string",
            "description": "the lead&#39;s last name"
          },
          "business_phone": {
            "type": "string",
            "description": "the lead&#39;s phone number"
          },
          "country": {
            "type": "string",
            "description": "the lead&#39;s country"
          },
          "company_name": {
            "type": "string",
            "description": "the lead&#39;s company name"
          },
          "industry": {
            "type": "string",
            "description": "the lead&#39;s industry"
          },
          "page_url": {
            "type": "string",
            "description": "the url for the Brightcove player"
          },
          "player_id": {
            "type": "string",
            "description": "the ID for the Brightcove player"
          },
          "video_id": {
            "type": "string",
            "description": "the Video Cloud video id"
          },
          "video_name": {
            "type": "string",
            "description": "the Video Cloud video name"
          },
          "watched": {
            "type": "number",
            "description": "the percentage of the video watched (current playhead position / video duration)"
          },
          "time_watched": {
            "type": "number",
            "description": "the seconds of the video watched"
          }
        }
      },
      "GetViewEvents200": {
        "title": "Get_View_Events200",
        "required": [
          "count",
          "limit",
          "offset",
          "result"
        ],
        "type": "object",
        "properties": {
          "count": {
            "type": "number",
            "description": "the total number of items"
          },
          "limit": {
            "type": "number",
            "description": "the limit for items in this request"
          },
          "offset": {
            "type": "number",
            "description": "the offset for items in this request"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result"
            },
            "description": "array of result items"
          }
        }
      },
      "Sort": {
        "title": "sort",
        "enum": [
          "video_id",
          "video_name",
          "tracking_id",
          "external_id",
          "player_id",
          "page_url",
          "watched",
          "time_watched",
          "created_at",
          "updated_at",
          "is_synced",
          "utm_source",
          "utm_medium",
          "utm_campaign",
          "utm_term",
          "utm_content"
        ],
        "type": "string",
        "example": "video_id",
        "default": "created_at",
        "x-enum-elements": [
          {
            "name": "video_id",
            "description": "Video id"
          },
          {
            "name": "video_name",
            "description": "Video name"
          },
          {
            "name": "tracking_id",
            "description": "Custom tracking id"
          },
          {
            "name": "external_id",
            "description": "The Marketo, Eloqua or other custom GUID"
          },
          {
            "name": "player_id",
            "description": "Player id"
          },
          {
            "name": "page_url",
            "description": "URL of the video page"
          },
          {
            "name": "watched",
            "description": "Percent of video watched"
          },
          {
            "name": "time_watched",
            "description": "Total secondes video was watched"
          },
          {
            "name": "created_at",
            "description": "When video was created"
          },
          {
            "name": "updated_at",
            "description": "When video was last updated"
          },
          {
            "name": "is_synced",
            "description": "A boolean denoting whether or not the view event has been synchronized"
          },
          {
            "name": "utm_source",
            "description": "UTM field found in the page_url"
          },
          {
            "name": "utm_medium",
            "description": "UTM field found in the page_url"
          },
          {
            "name": "utm_medium",
            "description": "UTM field found in the page_url"
          },
          {
            "name": "utm_term",
            "description": "UTM field found in the page_url"
          },
          {
            "name": "utm_content",
            "description": "UTM field found in the page_url"
          }
        ]
      },
      "Fields": {
        "title": "fields",
        "description": "See [Fields for filtering and selection](https://support.brightcove.com/overview-audience-api#Retrieving_view_events) for more information",
        "enum": [
          "video_id",
          "video_name",
          "tracking_id",
          "external_id",
          "player_id",
          "page_url",
          "watched",
          "time_watched",
          "created_at",
          "updated_at",
          "is_synced",
          "utm_source",
          "utm_medium",
          "utm_campaign",
          "utm_term",
          "utm_content"
        ],
        "type": "string",
        "example": "video_id",
        "x-enum-elements": [
          {
            "name": "video_id",
            "description": "Brightcove video id"
          },
          {
            "name": "video_name",
            "description": "Brightcove video name"
          },
          {
            "name": "tracking_id",
            "description": "Custom tracking id"
          },
          {
            "name": "external_id",
            "description": "The Marketo, Eloqua or other custom GUID"
          },
          {
            "name": "player_id",
            "description": "Brightcove player id"
          },
          {
            "name": "page_url",
            "description": "The URL of the page where the view event was created"
          },
          {
            "name": "watched",
            "description": "Percent watched"
          },
          {
            "name": "time_watched",
            "description": "Seconds watched"
          },
          {
            "name": "created_at",
            "description": "Creation date"
          },
          {
            "name": "updated_at",
            "description": "Last modified date"
          },
          {
            "name": "is_synced",
            "description": "A boolean denoting whether or not the view event has been synchronized"
          },
          {
            "name": "utm_source",
            "description": "UTM field found in the page_url"
          },
          {
            "name": "utm_medium",
            "description": "UTM field found in the page_url"
          },
          {
            "name": "utm_medium",
            "description": "UTM field found in the page_url"
          },
          {
            "name": "utm_term",
            "description": "UTM field found in the page_url"
          },
          {
            "name": "utm_content",
            "description": "UTM field found in the page_url"
          }
        ]
      }
    }
  }
}
