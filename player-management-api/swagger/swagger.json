{
  "swagger": "2.0",
  "info": {
    "title": "Player Management API Reference",
    "version": "2.0.0",
    "description": "Reference for the Brightcove Player - Player Management API, used to manipulate players, player configurations and child players (embeds). To test API requests, you can use our <a href='https://support.brightcove.com/node/17910'>API Testing Tools</a>.<br><br>If you haven't gone through the <a href='https://support.brightcove.com/node/18268'>Quick Start to Player Management</a>, it's highly suggested you start there. You'll get security set up and learn some of the basics of using the Player Management API. If you are working with this API for the first time, read the <a href='https://support.brightcove.com/node/18269'>Player Management API Overview</a>.<br><br>Remember that after making any configuration changes you MUST re-publish your player.<br><br><strong>Note:</strong> Fields in configuration objects need to be set only if you wish to change their values. Fields in configuration objects will be displayed in the response only if explicitly set."
  },
  "paths": {
    "/accounts/{account_id}/players/{player_id}/players/{embed_id}/configuration": {
      "get": {
        "tags": [
          "Embed_Configurations"
        ],
        "summary": "Get Configuration Combinations",
        "description": "Retrieve the configuration for a parent/child combination of master and preview branches.  If you are using the second query parameter (and hence using the ampersand [&amp;]), you MUST use quotes around the endpoint or the curl statement will fail at the ampersand. For example:  &quot;https://players.api.brightcove.com/v1/accounts/$ACCOUNT_ID/players/$PLAYER_ID/embeds/$EMBED_ID/configuration/merged?playerBranch=preview&amp;embedBranch=master&quot;  Using this endpoint provides a way to view what the resulting configuration would be when combining different combinations of parent and child (also called embed) versions of players. You can fetch the resulting JSON configuration of any of these four combinations:  published parent - published child published parent - preview child preview parent - published child preview parent - preview child  Using this endpoint does not change any configurations, it is only useful for seeing results of merging changes to configurations. ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "account ID "
          },
          {
            "name": "player_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "player ID "
          },
          {
            "name": "embed_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "embed ID "
          },
          {
            "name": "playerBranch",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "branch of the player to use, master or preview, for merged combination "
          },
          {
            "name": "embedBranch",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "branch of the embed to use, master or preview, for merged combination "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "Response Fields - Note: Fields in configuration objects will be displayed in the response only if explicitly set": {
            "description": "Response Fields - Note: Fields in configuration objects will be displayed in the response only if explicitly set",
            "schema": {
              "$ref": "#/definitions/configuration"
            }
          }
        },
        "operationId": "Get_Configuration_Combinations"
      },
      "patch": {
        "tags": [
          "Embed_Configurations"
        ],
        "summary": "Update an Embed Configuration",
        "description": "Update the configuration for an embed. Note that you will need to publish the altered embed for optimization and production use. You can also use a PUT HTTP method instead of the PATCH shown here. When using PUT it replaces all embed configuration information, so you must supply all embed configuration information when using PUT. In contrast, PATCH appends or modifies existing configuration information. Using PUT is such rare use case it is not detailed in this reference. ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "account ID "
          },
          {
            "name": "player_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "player ID "
          },
          {
            "name": "embed_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "embed ID "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "Response Fields": {
            "description": "Response Fields",
            "schema": {
              "$ref": "#/definitions/Update_an_Embed_ConfigurationResponseFields"
            }
          }
        },
        "operationId": "Update_an_Embed_Configuration"
      }
    },
    "/accounts/{account_id}/players/{player_id}/players/{embed_id}/{branch}": {
      "get": {
        "tags": [
          "Embed_Configurations"
        ],
        "summary": "Get an Embed Configuration",
        "description": "Get the configuration for an embed. You must specify the branch, either `master&#39; or &#39;preview&#39;. ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "account ID "
          },
          {
            "name": "player_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "player ID "
          },
          {
            "name": "embed_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "embed ID "
          },
          {
            "name": "branch",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "branch to retrieve, master (published) or preview "
          },
          {
            "name": "comment",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "parameter which will be placed in the GitHub repo of the player "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "Response Fields - Note: Fields in configuration objects will be displayed in the response only if explicitly set": {
            "description": "Response Fields - Note: Fields in configuration objects will be displayed in the response only if explicitly set",
            "schema": {
              "$ref": "#/definitions/configuration"
            }
          }
        },
        "operationId": "Get_an_Embed_Configuration"
      }
    },
    "/accounts/{account_id}/players/{player_id}/configuration/{branch}": {
      "get": {
        "tags": [
          "Player_Configurations"
        ],
        "summary": "Get a Player Configuration",
        "description": "Get a player configuration. Note that you specify which branch you wish to act upon, either the master (published) or preview. ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "account ID "
          },
          {
            "name": "player_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "player ID "
          },
          {
            "name": "branch",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Which branch to act upon, master (published) or preview. "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "Response Fields - Note: Fields in configuration objects will be displayed in the response only if explicitly set": {
            "description": "Response Fields - Note: Fields in configuration objects will be displayed in the response only if explicitly set",
            "schema": {
              "$ref": "#/definitions/Get_a_Player_ConfigurationResponseFields-Note:FieldsInConfigurationObjectsWillBeDisplayedInTheResponseOnlyIfExplicitlySet"
            }
          }
        },
        "operationId": "Get_a_Player_Configuration"
      }
    },
    "/accounts/{account_id}/players/{player_id}/configuration": {
      "patch": {
        "tags": [
          "Player_Configurations"
        ],
        "summary": "Update a Player Configuration",
        "description": "Update a player configuration. This operation allows you to replace, and in some cases update, any property in the JSON configuration for a player. This is the recommended way to update a player configuration, rather than the PUT operation below. The PATCH will modify the configuration whereas the PUT will replace the configuration. ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "account ID "
          },
          {
            "name": "player_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "player ID "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "Response Fields - Note: Fields in configuration objects will be displayed in the response only if explicitly set": {
            "description": "Response Fields - Note: Fields in configuration objects will be displayed in the response only if explicitly set",
            "schema": {
              "$ref": "#/definitions/Update_a_Player_ConfigurationResponseFields-Note:FieldsInConfigurationObjectsWillBeDisplayedInTheResponseOnlyIfExplicitlySet"
            }
          }
        },
        "operationId": "Update_a_Player_Configuration"
      }
    },
    "/accounts/{account_id}/players/{player_id}/embeds": {
      "post": {
        "tags": [
          "Player_Embeds"
        ],
        "summary": "Create an Embed",
        "description": "Create an embed (child player) for a player. Note that the initial creation of the embed is automatically published. Any changes to the embed thereafter will need to be published.  When creating the embed, the body must be an object representing configuration settings for the new embed. By default when you create an embed, data in the embed overrides like data that would otherwise be inherited from the common player. This situation is different for fields that contain arrays. When the data type of the field is an array, you can choose the inheritance behavior to be overwrite, prepend or append. The fields whose data type is an array, and for which you can control inheritance behavior are:  scripts stylesheets plugins sources You can add special field names to the configuration object to control array inheritance, and change the default behavior of embeds overriding common player data. If a array field in an embed&#39;s configuration has a child item called array_prepend or array_append the data will be correspondingly prepended or appended to the common player&#39;s data for the like field. See the Array fields section of the Embeds Guide for a complete discussion.   ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "account ID "
          },
          {
            "name": "player_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "player ID "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "Response Fields": {
            "description": "Response Fields",
            "schema": {
              "$ref": "#/definitions/Create_an_EmbedResponseFields"
            }
          }
        },
        "operationId": "Create_an_Embed"
      },
      "get": {
        "tags": [
          "Player_Embeds"
        ],
        "summary": "Get All Embeds",
        "description": "Get all the embeds (child players) for a player. ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "account ID "
          },
          {
            "name": "player_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "player ID "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "Response Fields": {
            "description": "Response Fields",
            "schema": {
              "$ref": "#/definitions/items"
            }
          },
          "Response Fields for Parent Player - Note: Fields in configuration objects will be displayed in the response only if explicitly set": {
            "description": "Response Fields for Parent Player - Note: Fields in configuration objects will be displayed in the response only if explicitly set",
            "schema": {
              "$ref": "#/definitions/branches"
            }
          },
          "Response Fields for Each Embed - Note: Fields in configuration objects will be displayed in the response only if explicitly set": {
            "description": "Response Fields for Each Embed - Note: Fields in configuration objects will be displayed in the response only if explicitly set",
            "schema": {
              "$ref": "#/definitions/branches"
            }
          }
        },
        "operationId": "Get_All_Embeds"
      }
    },
    "/accounts/{account_id}/players/{player_id}/embeds/{embed_id}": {
      "delete": {
        "tags": [
          "Player_Embeds"
        ],
        "summary": "Delete an Embed",
        "description": "Delete an embed. ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "account ID "
          },
          {
            "name": "player_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "player ID "
          },
          {
            "name": "embed_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "embed ID "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "Response Fields": {
            "description": "Response Fields",
            "schema": {
              "$ref": "#/definitions/Delete_an_EmbedResponseFields"
            }
          }
        },
        "operationId": "Delete_an_Embed"
      },
      "get": {
        "tags": [
          "Player_Embeds"
        ],
        "summary": "Get Single Embed",
        "description": "Get specific embed. ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "account ID "
          },
          {
            "name": "player_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "player ID "
          },
          {
            "name": "embed_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "embed ID "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "Response Fields - Note: Fields in configuration objects will be displayed in the response only if explicitly set": {
            "description": "Response Fields - Note: Fields in configuration objects will be displayed in the response only if explicitly set",
            "schema": {
              "$ref": "#/definitions/branches"
            }
          }
        },
        "operationId": "Get_Single_Embed"
      }
    },
    "/accounts/{account_id}/players/{player_id}/embeds/{embed_id}/publish": {
      "post": {
        "tags": [
          "Player_Embeds"
        ],
        "summary": "Publish an Embed",
        "description": "Publish an updated embed. ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "account ID "
          },
          {
            "name": "player_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "player ID "
          },
          {
            "name": "embed_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "embed ID "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "Response Fields": {
            "description": "Response Fields",
            "schema": {
              "$ref": "#/definitions/Publish_an_EmbedResponseFields"
            }
          }
        },
        "operationId": "Publish_an_Embed"
      }
    },
    "/accounts/{account_id}/players": {
      "post": {
        "tags": [
          "Players"
        ],
        "summary": "Create a Player",
        "description": "Create a player. The POST method creates a player by submitting a player configuration. The properties of Brightcove Player you can manipulate with player management are detailed in the Request Body Fields section below. To create a player, a publisher must decide what properties the final player will have. If no properites are given at creation, a &quot;blank&quot; player will be created with only the base player skin applied to the player. A user may then use an HTTP PATCH method to update properties after the player has been created. ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "account ID "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "Response Fields": {
            "description": "Response Fields",
            "schema": {
              "$ref": "#/definitions/Create_a_PlayerResponseFields"
            }
          }
        },
        "operationId": "Create_a_Player"
      },
      "get": {
        "tags": [
          "Players"
        ],
        "summary": "Get All Players",
        "description": "Get all players in an account. The response will list all the players associated with a particular account ID. The player information returns the full details regarding each of the players. Amid this data is a set of branches. Branches distinguish between published (master) and unpublished (preview) changes. ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "account ID "
          },
          {
            "name": "player_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "player ID "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "Response Fields - Note: Fields in configuration objects will be displayed in the response only if explicitly set": {
            "description": "Response Fields - Note: Fields in configuration objects will be displayed in the response only if explicitly set",
            "schema": {
              "$ref": "#/definitions/items"
            }
          }
        },
        "operationId": "Get_All_Players"
      }
    },
    "/accounts/{account_id}/players/{player_id}": {
      "delete": {
        "tags": [
          "Players"
        ],
        "summary": "Delete a Player",
        "description": "Delete a player and all embeds associated with it. ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "account ID "
          },
          {
            "name": "player_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "player ID "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "Response Fields": {
            "description": "Response Fields",
            "schema": {
              "$ref": "#/definitions/Delete_a_PlayerResponseFields"
            }
          }
        },
        "operationId": "Delete_a_Player"
      },
      "get": {
        "tags": [
          "Players"
        ],
        "summary": "Get Single Player",
        "description": "Get a player by ID. ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "account ID "
          },
          {
            "name": "player_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "player ID "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "Response Fields - Note: Fields in configuration objects will be displayed in the response only if explicitly set": {
            "description": "Response Fields - Note: Fields in configuration objects will be displayed in the response only if explicitly set",
            "schema": {
              "$ref": "#/definitions/Get_Single_PlayerResponseFields-Note:FieldsInConfigurationObjectsWillBeDisplayedInTheResponseOnlyIfExplicitlySet"
            }
          }
        },
        "operationId": "Get_Single_Player"
      },
      "patch": {
        "tags": [
          "Players"
        ],
        "summary": "Update a Player",
        "description": "Update a player. The PATCH method can be used on a single player to do a VERY limited update. The only fields you can update in this manner are the name and description properties. All other player configuration must be done via the PLAYER CONFIGURATIONS APIs, detailed below. ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "account ID "
          },
          {
            "name": "player_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "player ID "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "Response Fields": {
            "description": "Response Fields",
            "schema": {
              "$ref": "#/definitions/Update_a_PlayerResponseFields"
            }
          }
        },
        "operationId": "Update_a_Player"
      }
    },
    "/accounts/{account_id}/players/{player_id}/publish": {
      "post": {
        "tags": [
          "Players"
        ],
        "summary": "Publish a Player",
        "description": "Publish a player for optimization and production use. ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "account ID "
          },
          {
            "name": "player_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "player ID "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "Response Fields": {
            "description": "Response Fields",
            "schema": {
              "$ref": "#/definitions/Publish_a_PlayerResponseFields"
            }
          }
        },
        "operationId": "Publish_a_Player"
      }
    },
    "/accounts/{account_id}/plugins": {
      "get": {
        "tags": [
          "Plugin_Registry"
        ],
        "summary": "Get All Plugins",
        "description": "Get a player plugin by id. Note that the plugin id must be URI_encoded. ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "account ID "
          },
          {
            "name": "plugin_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "plugin id - must be URI_encoded "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "Response Fields": {
            "description": "Response Fields",
            "schema": {
              "$ref": "#/definitions/versions"
            }
          }
        },
        "operationId": "Get_All_Plugins"
      }
    },
    "/accounts/{account_id}/plugins/{plugin_id}": {
      "get": {
        "tags": [
          "Plugin_Registry"
        ],
        "summary": "Get Single Plugin",
        "description": "Get a player plugin by id. Note that the plugin id must be URI_encoded. ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "account ID "
          },
          {
            "name": "plugin_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "plugin id - must be URI_encoded "
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Content-Type: application/json "
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens) "
          }
        ],
        "responses": {
          "Response Fields": {
            "description": "Response Fields",
            "schema": {
              "$ref": "#/definitions/versions"
            }
          }
        },
        "operationId": "Get_Single_Plugin"
      }
    },
    "": {
      "": {
        "tags": [
          "_Users_rcrooks_git_Brightcove_API_References_player_management_api_v2_doc_main_js"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "Success 200": {
            "description": "Success 200"
          }
        },
        "operationId": ""
      }
    }
  },
  "definitions": {
    "configuration": {
      "properties": {},
      "required": []
    },
    "Update_an_Embed_ConfigurationResponseFields": {
      "properties": {
        "preview_url": {
          "type": "string",
          "description": "URL to preview embed "
        },
        "preview_embed_code": {
          "type": "string",
          "description": "preview embed iframe tag "
        }
      },
      "required": [
        "preview_url",
        "preview_embed_code"
      ]
    },
    "Get_a_Player_ConfigurationResponseFields-Note:FieldsInConfigurationObjectsWillBeDisplayedInTheResponseOnlyIfExplicitlySet": {
      "properties": {
        "autoadvance": {
          "type": "boolean",
          "description": "autoadvance setting if using playlists: 0 for no wait; a number for seconds between advance; null to cancel autoadvance "
        },
        "autoplay": {
          "type": "boolean",
          "description": "indicates player should play video immediately, on platforms that allow this "
        },
        "compatibility": {
          "type": "boolean",
          "description": "provides compatibility with the Player 1.x.x API - you should not change this setting "
        },
        "css": {
          "type": "object",
          "description": "object containing CSS color overrides ",
          "$ref": "#/definitions/css"
        },
        "errors": {
          "type": "boolean",
          "description": "indicates if the error messages plugin should be excluded "
        },
        "fullscreenControl": {
          "type": "boolean",
          "description": "indicates whether the fullscreen control should be shown in the control bar "
        },
        "languages": {
          "type": "array",
          "description": "languages (2 letter abbreviations) you wish your player to support, from the Vides.js supported list ",
          "items": {
            "type": "string"
          }
        },
        "loop": {
          "type": "boolean",
          "description": "indicates if the video should play over as soon as it ends "
        },
        "media": {
          "type": "object",
          "description": "media information for non-Video Cloud media ",
          "$ref": "#/definitions/media"
        },
        "player": {
          "type": "object",
          "description": "player information object ",
          "$ref": "#/definitions/player"
        },
        "playlist": {
          "type": "boolean",
          "description": "indicates if a playlist should be used "
        },
        "plugins": {
          "type": "array",
          "description": "array of plugin objects ",
          "items": {
            "$ref": "#/definitions/plugins"
          }
        },
        "preload": {
          "type": "string",
          "description": "informs the browser whether or not the video data should begin downloading as soon as the video tag is loaded; the options are auto, metadata, and none "
        },
        "scripts": {
          "type": "array",
          "description": "URLs to JavaScript files that should be included with the player ",
          "items": {
            "type": "string"
          }
        },
        "skin": {
          "type": "mixed",
          "description": "indicates is the default look-and-feel will be used with the player; set to false when creating a new, highly customized skin "
        },
        "studio_configuration": {
          "type": "object",
          "description": "object containing playlist information normally set in Studio ",
          "$ref": "#/definitions/studio_configuration"
        },
        "stylesheets": {
          "type": "array",
          "description": "URLs to CSS files that should be included with the player ",
          "items": {
            "type": "string"
          }
        },
        "techOrder": {
          "type": "array",
          "description": "order that playback technologies should be used; only visible if changed from default ",
          "items": {
            "type": "string"
          }
        },
        "video_cloud": {
          "type": "object",
          "description": "Video Cloud configuration information ",
          "$ref": "#/definitions/video_cloud"
        }
      },
      "required": [
        "autoadvance",
        "autoplay",
        "compatibility",
        "css",
        "errors",
        "fullscreenControl",
        "languages",
        "loop",
        "media",
        "player",
        "playlist",
        "plugins",
        "preload",
        "scripts",
        "skin",
        "studio_configuration",
        "stylesheets",
        "techOrder",
        "video_cloud"
      ]
    },
    "css": {
      "properties": {
        "controlBarColor": {
          "type": "object",
          "description": "background color of control bar ",
          "$ref": "#/definitions/css.controlBarColor"
        },
        "controlColor": {
          "type": "object",
          "description": "color of buttons and text in control bar ",
          "$ref": "#/definitions/css.controlColor"
        },
        "progressColor": {
          "type": "object",
          "description": "color of progress bar ",
          "$ref": "#/definitions/css.progressColor"
        }
      },
      "required": [
        "controlBarColor",
        "controlColor",
        "progressColor"
      ]
    },
    "media": {
      "properties": {
        "sources": {
          "type": "array",
          "description": "array of media source objects ",
          "items": {
            "$ref": "#/definitions/media.sources"
          }
        },
        "src": {
          "type": "string",
          "description": "URL to media asset "
        },
        "tracks": {
          "type": "array",
          "description": "array of track objects ",
          "items": {
            "type": "objects"
          }
        }
      },
      "required": [
        "sources",
        "src",
        "tracks"
      ]
    },
    "media.sources": {
      "properties": {
        "height": {
          "type": "string",
          "description": "height of the video "
        },
        "src": {
          "type": "string",
          "description": "URL to media asset "
        },
        "title": {
          "type": "string",
          "description": "content of the &lt;title&gt; element of the page "
        },
        "tracks": {
          "type": "array",
          "description": "array of track objects ",
          "items": {
            "$ref": "#/definitions/media.sources.tracks"
          }
        },
        "type": {
          "type": "string",
          "description": "MIME type of the video, as specified in the HTML5 standard, for instance video/mp4 form MP4 or application/x-mpegURL for HLS "
        },
        "width": {
          "type": "string",
          "description": "width of the video "
        }
      },
      "required": [
        "height",
        "src",
        "title",
        "tracks",
        "type",
        "width"
      ]
    },
    "media.sources.poster": {
      "properties": {
        "highres": {
          "type": "string",
          "description": "URL to the poster image "
        }
      },
      "required": [
        "highres"
      ]
    },
    "media.tracks": {
      "properties": {
        "label": {
          "type": "string",
          "description": "text label for the track, for instance English for an English language text track "
        },
        "src": {
          "type": "string",
          "description": "URL to source of track, required in a track object "
        },
        "srclang": {
          "type": "string",
          "description": "2 letter code (valid BCP 47 language tag) for the language of the text track, for example "
        }
      },
      "required": [
        "label",
        "src",
        "srclang"
      ]
    },
    "player": {
      "properties": {
        "inactive": {
          "type": "boolean",
          "description": "indicates if a player is inactive "
        },
        "template": {
          "type": "object",
          "description": "specific template details ",
          "$ref": "#/definitions/player.template"
        }
      },
      "required": [
        "inactive",
        "template"
      ]
    },
    "player.template": {
      "properties": {
        "name": {
          "type": "string",
          "description": "name of player template "
        },
        "version": {
          "type": "string",
          "description": "version of player template "
        }
      },
      "required": [
        "name",
        "version"
      ]
    },
    "playlist": {
      "properties": {
        "playOnSelect": {
          "type": "boolean",
          "description": "indicates if a video loaded from a playlist should play on load "
        }
      },
      "required": [
        "playOnSelect"
      ]
    },
    "plugins": {
      "properties": {
        "name": {
          "type": "string",
          "description": "name of plugin "
        },
        "options": {
          "type": "json",
          "description": "configuration options for plugin "
        }
      },
      "required": [
        "name",
        "options"
      ]
    },
    "studio_configuration": {
      "properties": {
        "player": {
          "type": "object",
          "description": "object containing playlist information ",
          "$ref": "#/definitions/studio_configuration.player"
        }
      },
      "required": [
        "player"
      ]
    },
    "studio_configuration.player": {
      "properties": {
        "adjusted": {
          "type": "boolean",
          "description": "indicates if player dimensions should be adjusted for playlist "
        },
        "height": {
          "type": "string",
          "description": "player height when displayed with playlist; if the height and width are not assigned values, the sizes of the player and playlist are automatically adjusted "
        },
        "width": {
          "type": "string",
          "description": "player width when displayed with playlist; if the height and width are not assigned values, the sizes of the player and playlist are automatically adjusted "
        }
      },
      "required": [
        "adjusted",
        "height",
        "width"
      ]
    },
    "video_cloud": {
      "properties": {
        "policy_key": {
          "type": "string",
          "description": "policy key for Video Cloud account "
        },
        "video": {
          "type": "string",
          "description": "if using a Video Cloud video asset, that asset&#39;s ID "
        }
      },
      "required": [
        "policy_key",
        "video"
      ]
    },
    "Update_a_Player_ConfigurationResponseFields-Note:FieldsInConfigurationObjectsWillBeDisplayedInTheResponseOnlyIfExplicitlySet": {
      "properties": {
        "accountId": {
          "type": "string",
          "description": "account ID "
        },
        "branches": {
          "type": "object",
          "description": "contains objects for the preview and master (published) player ",
          "$ref": "#/definitions/branches"
        },
        "created_at": {
          "type": "string",
          "description": "player creation time "
        },
        "description": {
          "type": "string",
          "description": "player description "
        },
        "embed_count": {
          "type": "string",
          "description": "number of embeds, will always be at least 1 "
        },
        "id": {
          "type": "string",
          "description": "video id "
        },
        "name": {
          "type": "string",
          "description": "name give to player "
        },
        "url": {
          "type": "string",
          "description": "URL to player "
        }
      },
      "required": [
        "accountId",
        "branches",
        "created_at",
        "description",
        "embed_count",
        "id",
        "name",
        "url"
      ]
    },
    "branches": {
      "properties": {
        "master": {
          "type": "object",
          "description": "contains master (published) player object ",
          "$ref": "#/definitions/branches.master"
        },
        "preview": {
          "type": "object",
          "description": "contains preview player object ",
          "$ref": "#/definitions/branches.preview"
        }
      },
      "required": [
        "master",
        "preview"
      ]
    },
    "branches.master": {
      "properties": {
        "configuration": {
          "type": "object",
          "description": "configuration of master player ",
          "$ref": "#/definitions/branches.master.configuration"
        },
        "master_url": {
          "type": "string",
          "description": "URL of master player "
        },
        "template_updated_at": {
          "type": "string",
          "description": "time of last update to player template "
        },
        "updated_at": {
          "type": "string",
          "description": "time of last update to master player "
        },
        "name": {
          "type": "string",
          "description": "name of master (published) version of embed "
        }
      },
      "required": [
        "configuration",
        "master_url",
        "template_updated_at",
        "updated_at",
        "name"
      ]
    },
    "branches.master.configuration": {
      "properties": {
        "autoadvance": {
          "type": "boolean",
          "description": "autoadvance setting if using playlists: 0 for no wait; a number for seconds between advance; null to cancel autoadvance "
        },
        "autoplay": {
          "type": "boolean",
          "description": "indicates player should play video immediately, on platforms that allow this "
        },
        "css": {
          "type": "object",
          "description": "object containing CSS color overrides ",
          "$ref": "#/definitions/branches.master.configuration.css"
        },
        "errors": {
          "type": "boolean",
          "description": "indicates if the error messages plugin should be excluded "
        },
        "fullscreenControl": {
          "type": "boolean",
          "description": "indicates whether the fullscreen control should be shown in the control bar "
        },
        "languages": {
          "type": "array",
          "description": "languages (2 letter abbreviations) you wish your player to support, from the Vides.js supported list ",
          "items": {
            "type": "string"
          }
        },
        "loop": {
          "type": "boolean",
          "description": "indicates if the video should play over as soon as it ends "
        },
        "media": {
          "type": "object",
          "description": "media information for non-Video Cloud media ",
          "$ref": "#/definitions/branches.master.configuration.media"
        },
        "player": {
          "type": "object",
          "description": "player information object ",
          "$ref": "#/definitions/branches.master.configuration.player"
        },
        "playlist": {
          "type": "boolean",
          "description": "indicates if a playlist should be used "
        },
        "plugins": {
          "type": "array",
          "description": "array of plugin objects ",
          "items": {
            "$ref": "#/definitions/branches.master.configuration.plugins"
          }
        },
        "preload": {
          "type": "string",
          "description": "informs the browser whether or not the video data should begin downloading as soon as the video tag is loaded; the options are auto, metadata, and none "
        },
        "scripts": {
          "type": "array",
          "description": "URLs to JavaScript files that should be included with the player ",
          "items": {
            "type": "string"
          }
        },
        "skin": {
          "type": "boolean",
          "description": "indicates is the default look-and-feel will be used with the player; set to false when creating a new, highly customized skin "
        },
        "studio_configuration": {
          "type": "object",
          "description": "object containing playlist information normally set in Studio ",
          "$ref": "#/definitions/branches.master.configuration.studio_configuration"
        },
        "stylesheets": {
          "type": "array",
          "description": "URLs to CSS files that should be included with the player ",
          "items": {
            "type": "string"
          }
        },
        "techOrder": {
          "type": "array",
          "description": "order that playback technologies should be used; only visible if changed from default ",
          "items": {
            "type": "string"
          }
        },
        "video_cloud": {
          "type": "object",
          "description": "Video Cloud configuration information ",
          "$ref": "#/definitions/branches.master.configuration.video_cloud"
        },
        "configuration": {
          "type": "object",
          "description": "configuration object, refer to the PLAYER CONFIGURATIONS &gt; Get a Player Configuration above for all player options. ",
          "$ref": "#/definitions/branches.master.configuration.configuration"
        }
      },
      "required": [
        "autoadvance",
        "autoplay",
        "css",
        "errors",
        "fullscreenControl",
        "languages",
        "loop",
        "media",
        "player",
        "playlist",
        "plugins",
        "preload",
        "scripts",
        "skin",
        "studio_configuration",
        "stylesheets",
        "techOrder",
        "video_cloud",
        "configuration"
      ]
    },
    "branches.master.configuration.css": {
      "properties": {
        "controlBarColor": {
          "type": "object",
          "description": "background color of control bar ",
          "$ref": "#/definitions/branches.master.configuration.css.controlBarColor"
        },
        "controlColor": {
          "type": "object",
          "description": "color of buttons and text in control bar ",
          "$ref": "#/definitions/branches.master.configuration.css.controlColor"
        },
        "progressColor": {
          "type": "object",
          "description": "color of progress bar ",
          "$ref": "#/definitions/branches.master.configuration.css.progressColor"
        }
      },
      "required": [
        "controlBarColor",
        "controlColor",
        "progressColor"
      ]
    },
    "branches.master.configuration.media": {
      "properties": {
        "sources": {
          "type": "array",
          "description": "array of media source objects ",
          "items": {
            "$ref": "#/definitions/branches.master.configuration.media.sources"
          }
        },
        "src": {
          "type": "string",
          "description": "URL to media asset "
        },
        "tracks": {
          "type": "array",
          "description": "array of track objects ",
          "items": {
            "type": "objects"
          }
        }
      },
      "required": [
        "sources",
        "src",
        "tracks"
      ]
    },
    "branches.master.configuration.media.sources": {
      "properties": {
        "height": {
          "type": "string",
          "description": "height of the video "
        },
        "src": {
          "type": "string",
          "description": "URL to media asset "
        },
        "title": {
          "type": "string",
          "description": "content of the &lt;title&gt; element of the page "
        },
        "tracks": {
          "type": "array",
          "description": "array of track objects ",
          "items": {
            "$ref": "#/definitions/branches.master.configuration.media.sources.tracks"
          }
        },
        "type": {
          "type": "string",
          "description": "MIME type of the video, as specified in the HTML5 standard, for instance video/mp4 form MP4 or application/x-mpegURL for HLS "
        },
        "width": {
          "type": "string",
          "description": "width of the video "
        },
        "poster": {
          "type": "object",
          "description": "Only value settable from this object is the string poster.highres which is the URL to the poster image ",
          "$ref": "#/definitions/branches.master.configuration.media.sources.poster"
        }
      },
      "required": [
        "height",
        "src",
        "title",
        "tracks",
        "type",
        "width",
        "poster"
      ]
    },
    "branches.master.configuration.media.sources.poster": {
      "properties": {
        "highres": {
          "type": "string",
          "description": "URL to the poster image "
        }
      },
      "required": [
        "highres"
      ]
    },
    "branches.master.configuration.media.tracks": {
      "properties": {
        "label": {
          "type": "string",
          "description": "text label for the track, for instance English for an English language text track "
        },
        "src": {
          "type": "string",
          "description": "URL to source of track, required in a track object "
        },
        "srclang": {
          "type": "string",
          "description": "2 letter code (valid BCP 47 language tag) for the language of the text track, for example "
        }
      },
      "required": [
        "label",
        "src",
        "srclang"
      ]
    },
    "branches.master.configuration.player": {
      "properties": {
        "inactive": {
          "type": "boolean",
          "description": "indicates if a player is inactive "
        },
        "template": {
          "type": "object",
          "description": "specific template details ",
          "$ref": "#/definitions/branches.master.configuration.player.template"
        }
      },
      "required": [
        "inactive",
        "template"
      ]
    },
    "branches.master.configuration.player.template": {
      "properties": {
        "name": {
          "type": "string",
          "description": "name of player template "
        },
        "version": {
          "type": "string",
          "description": "version of player template "
        }
      },
      "required": [
        "name",
        "version"
      ]
    },
    "branches.master.configuration.playlist": {
      "properties": {
        "playOnSelect": {
          "type": "boolean",
          "description": "indicates if a video loaded from a playlist should play on load "
        }
      },
      "required": [
        "playOnSelect"
      ]
    },
    "branches.master.configuration.plugins": {
      "properties": {
        "name": {
          "type": "string",
          "description": "name of plugin "
        },
        "options": {
          "type": "json",
          "description": "configuration options for plugin "
        }
      },
      "required": [
        "name",
        "options"
      ]
    },
    "branches.master.configuration.studio_configuration": {
      "properties": {
        "player": {
          "type": "object",
          "description": "object containing playlist information ",
          "$ref": "#/definitions/branches.master.configuration.studio_configuration.player"
        }
      },
      "required": [
        "player"
      ]
    },
    "branches.master.configuration.studio_configuration.player": {
      "properties": {
        "adjusted": {
          "type": "boolean",
          "description": "indicates if player dimensions should be adjusted for playlist "
        },
        "height": {
          "type": "string",
          "description": "player height when displayed with playlist; if the height and width are not assigned values, the sizes of the player and playlist are automatically adjusted "
        },
        "width": {
          "type": "string",
          "description": "player width when displayed with playlist; if the height and width are not assigned values, the sizes of the player and playlist are automatically adjusted "
        }
      },
      "required": [
        "adjusted",
        "height",
        "width"
      ]
    },
    "branches.master.configuration.video_cloud": {
      "properties": {
        "policy_key": {
          "type": "string",
          "description": "policy key for Video Cloud account "
        },
        "video": {
          "type": "string",
          "description": "if using a Video Cloud video asset, that asset&#39;s ID "
        }
      },
      "required": [
        "policy_key",
        "video"
      ]
    },
    "branches.preview": {
      "properties": {
        "configuration": {
          "type": "object",
          "description": "configuration of preview player ",
          "$ref": "#/definitions/branches.preview.configuration"
        },
        "preview_url": {
          "type": "string",
          "description": "URL of preview player "
        },
        "template_updated_at": {
          "type": "string",
          "description": "time of last update to player template "
        },
        "updated_at": {
          "type": "string",
          "description": "time of last update to preview player "
        },
        "name": {
          "type": "string",
          "description": "name of preview version of the embed "
        }
      },
      "required": [
        "configuration",
        "preview_url",
        "template_updated_at",
        "updated_at",
        "name"
      ]
    },
    "branches.preview.configuration": {
      "properties": {
        "autoadvance": {
          "type": "boolean",
          "description": "autoadvance setting if using playlists: 0 for no wait; a number for seconds between advance; null to cancel autoadvance "
        },
        "autoplay": {
          "type": "boolean",
          "description": "indicates player should play video immediately, on platforms that allow this "
        },
        "css": {
          "type": "object",
          "description": "object containing CSS color overrides ",
          "$ref": "#/definitions/branches.preview.configuration.css"
        },
        "errors": {
          "type": "boolean",
          "description": "indicates if the error messages plugin should be excluded "
        },
        "fullscreenControl": {
          "type": "boolean",
          "description": "indicates whether the fullscreen control should be shown in the control bar "
        },
        "languages": {
          "type": "array",
          "description": "languages (2 letter abbreviations) you wish your player to support, from the Vides.js supported list ",
          "items": {
            "type": "string"
          }
        },
        "loop": {
          "type": "boolean",
          "description": "indicates if the video should play over as soon as it ends "
        },
        "media": {
          "type": "object",
          "description": "media information for non-Video Cloud media ",
          "$ref": "#/definitions/branches.preview.configuration.media"
        },
        "player": {
          "type": "object",
          "description": "player information object ",
          "$ref": "#/definitions/branches.preview.configuration.player"
        },
        "playlist": {
          "type": "boolean",
          "description": "indicates if a playlist should be used "
        },
        "plugins": {
          "type": "array",
          "description": "array of plugin objects ",
          "items": {
            "$ref": "#/definitions/branches.preview.configuration.plugins"
          }
        },
        "preload": {
          "type": "string",
          "description": "informs the browser whether or not the video data should begin downloading as soon as the video tag is loaded; the options are auto, metadata, and none "
        },
        "scripts": {
          "type": "array",
          "description": "URLs to JavaScript files that should be included with the player ",
          "items": {
            "type": "string"
          }
        },
        "skin": {
          "type": "boolean",
          "description": "indicates is the default look-and-feel will be used with the player; set to false when creating a new, highly customized skin "
        },
        "studio_configuration": {
          "type": "object",
          "description": "object containing playlist information normally set in Studio ",
          "$ref": "#/definitions/branches.preview.configuration.studio_configuration"
        },
        "stylesheets": {
          "type": "array",
          "description": "URLs to CSS files that should be included with the player ",
          "items": {
            "type": "string"
          }
        },
        "techOrder": {
          "type": "array",
          "description": "order that playback technologies should be used; only visible if changed from default ",
          "items": {
            "type": "string"
          }
        },
        "video_cloud": {
          "type": "object",
          "description": "Video Cloud configuration information ",
          "$ref": "#/definitions/branches.preview.configuration.video_cloud"
        },
        "configuration": {
          "type": "object",
          "description": "configuration object, refer to the PLAYER CONFIGURATIONS &gt; Get a Player Configuration above for all player options. ",
          "$ref": "#/definitions/branches.preview.configuration.configuration"
        }
      },
      "required": [
        "autoadvance",
        "autoplay",
        "css",
        "errors",
        "fullscreenControl",
        "languages",
        "loop",
        "media",
        "player",
        "playlist",
        "plugins",
        "preload",
        "scripts",
        "skin",
        "studio_configuration",
        "stylesheets",
        "techOrder",
        "video_cloud",
        "configuration"
      ]
    },
    "branches.preview.configuration.css": {
      "properties": {
        "controlBarColor": {
          "type": "object",
          "description": "background color of control bar ",
          "$ref": "#/definitions/branches.preview.configuration.css.controlBarColor"
        },
        "controlColor": {
          "type": "object",
          "description": "color of buttons and text in control bar ",
          "$ref": "#/definitions/branches.preview.configuration.css.controlColor"
        },
        "progressColor": {
          "type": "object",
          "description": "color of progress bar ",
          "$ref": "#/definitions/branches.preview.configuration.css.progressColor"
        }
      },
      "required": [
        "controlBarColor",
        "controlColor",
        "progressColor"
      ]
    },
    "branches.preview.configuration.media": {
      "properties": {
        "sources": {
          "type": "array",
          "description": "array of media source objects ",
          "items": {
            "$ref": "#/definitions/branches.preview.configuration.media.sources"
          }
        },
        "src": {
          "type": "string",
          "description": "URL to media asset "
        },
        "tracks": {
          "type": "array",
          "description": "array of track objects ",
          "items": {
            "type": "objects"
          }
        }
      },
      "required": [
        "sources",
        "src",
        "tracks"
      ]
    },
    "branches.preview.configuration.media.sources": {
      "properties": {
        "height": {
          "type": "string",
          "description": "height of the video "
        },
        "src": {
          "type": "string",
          "description": "URL to media asset "
        },
        "title": {
          "type": "string",
          "description": "content of the &lt;title&gt; element of the page "
        },
        "tracks": {
          "type": "array",
          "description": "array of track objects ",
          "items": {
            "$ref": "#/definitions/branches.preview.configuration.media.sources.tracks"
          }
        },
        "type": {
          "type": "string",
          "description": "MIME type of the video, as specified in the HTML5 standard, for instance video/mp4 form MP4 or application/x-mpegURL for HLS "
        },
        "width": {
          "type": "string",
          "description": "width of the video "
        }
      },
      "required": [
        "height",
        "src",
        "title",
        "tracks",
        "type",
        "width"
      ]
    },
    "branches.preview.configuration.media.sources.poster": {
      "properties": {
        "highres": {
          "type": "string",
          "description": "URL to the poster image "
        }
      },
      "required": [
        "highres"
      ]
    },
    "branches.preview.configuration.media.tracks": {
      "properties": {
        "label": {
          "type": "string",
          "description": "text label for the track, for instance English for an English language text track "
        },
        "src": {
          "type": "string",
          "description": "URL to source of track, required in a track object "
        },
        "srclang": {
          "type": "string",
          "description": "2 letter code (valid BCP 47 language tag) for the language of the text track, for example "
        }
      },
      "required": [
        "label",
        "src",
        "srclang"
      ]
    },
    "branches.preview.configuration.player": {
      "properties": {
        "inactive": {
          "type": "boolean",
          "description": "indicates if a player is inactive "
        },
        "template": {
          "type": "object",
          "description": "specific template details ",
          "$ref": "#/definitions/branches.preview.configuration.player.template"
        }
      },
      "required": [
        "inactive",
        "template"
      ]
    },
    "branches.preview.configuration.player.template": {
      "properties": {
        "name": {
          "type": "string",
          "description": "name of player template "
        },
        "version": {
          "type": "string",
          "description": "version of player template "
        }
      },
      "required": [
        "name",
        "version"
      ]
    },
    "branches.preview.configuration.playlist": {
      "properties": {
        "playOnSelect": {
          "type": "boolean",
          "description": "indicates if a video loaded from a playlist should play on load "
        }
      },
      "required": [
        "playOnSelect"
      ]
    },
    "branches.preview.configuration.plugins": {
      "properties": {
        "name": {
          "type": "string",
          "description": "name of plugin "
        },
        "options": {
          "type": "json",
          "description": "configuration options for plugin "
        }
      },
      "required": [
        "name",
        "options"
      ]
    },
    "branches.preview.configuration.studio_configuration": {
      "properties": {
        "player": {
          "type": "object",
          "description": "object containing playlist information ",
          "$ref": "#/definitions/branches.preview.configuration.studio_configuration.player"
        }
      },
      "required": [
        "player"
      ]
    },
    "branches.preview.configuration.studio_configuration.player": {
      "properties": {
        "adjusted": {
          "type": "boolean",
          "description": "indicates if player dimensions should be adjusted for playlist "
        },
        "height": {
          "type": "string",
          "description": "player height when displayed with playlist; if the height and width are not assigned values, the sizes of the player and playlist are automatically adjusted "
        },
        "width": {
          "type": "string",
          "description": "player width when displayed with playlist; if the height and width are not assigned values, the sizes of the player and playlist are automatically adjusted "
        }
      },
      "required": [
        "adjusted",
        "height",
        "width"
      ]
    },
    "branches.preview.configuration.video_cloud": {
      "properties": {
        "policy_key": {
          "type": "string",
          "description": "policy key for Video Cloud account "
        },
        "video": {
          "type": "string",
          "description": "if using a Video Cloud video asset, that asset&#39;s ID "
        }
      },
      "required": [
        "policy_key",
        "video"
      ]
    },
    "Create_an_EmbedResponseFields": {
      "properties": {
        "id": {
          "type": "string",
          "description": "embed ID "
        },
        "url": {
          "type": "string",
          "description": "URL to published embed "
        },
        "embed_code": {
          "type": "string",
          "description": "published embed iframe tag "
        },
        "embed_in_page": {
          "type": "string",
          "description": "URL to browse to retrieve the in-page embed code for published embed "
        },
        "preview_url": {
          "type": "string",
          "description": "URL to preview embed "
        },
        "preview_embed_code": {
          "type": "string",
          "description": "preview embed iframe tag "
        }
      },
      "required": [
        "id",
        "url",
        "embed_code",
        "embed_in_page",
        "preview_url",
        "preview_embed_code"
      ]
    },
    "items": {
      "properties": {
        "embed_code": {
          "type": "string",
          "description": "published embed iframe tag "
        },
        "embed_in_page": {
          "type": "string",
          "description": "URL to browse to retrieve the in-page embed code for embed "
        },
        "id": {
          "type": "string",
          "description": "video id "
        },
        "name": {
          "type": "string",
          "description": "name give to player "
        },
        "preview_embed_code": {
          "type": "string",
          "description": "preview iframe tag for embed "
        },
        "preview_url": {
          "type": "string",
          "description": "URL to preview embed "
        },
        "publish_request": {
          "type": "object",
          "description": "publish request information ",
          "$ref": "#/definitions/items.publish_request"
        },
        "repository_url": {
          "type": "string",
          "description": "URL to repository of embed "
        },
        "url": {
          "type": "string",
          "description": "URL to player "
        },
        "accountId": {
          "type": "string",
          "description": "account ID "
        },
        "branches": {
          "type": "object",
          "description": "contains objects for the preview and master (published) player ",
          "$ref": "#/definitions/items.branches"
        },
        "created_at": {
          "type": "string",
          "description": "player creation time "
        },
        "description": {
          "type": "string",
          "description": "player description "
        },
        "embed_count": {
          "type": "string",
          "description": "number of embeds, will always be at least 1 "
        }
      },
      "required": [
        "embed_code",
        "embed_in_page",
        "id",
        "name",
        "preview_embed_code",
        "preview_url",
        "publish_request",
        "repository_url",
        "url",
        "accountId",
        "branches",
        "created_at",
        "description",
        "embed_count"
      ]
    },
    "Get_All_EmbedsResponseFields": {
      "properties": {
        "item_count": {
          "type": "number",
          "description": "number of items in items array, corresponds to number of embeds, plus one for parent player "
        }
      },
      "required": [
        "item_count"
      ]
    },
    "items.branches": {
      "properties": {
        "master": {
          "type": "object",
          "description": "contains master (published) player object ",
          "$ref": "#/definitions/items.branches.master"
        },
        "preview": {
          "type": "object",
          "description": "contains preview player object ",
          "$ref": "#/definitions/items.branches.preview"
        }
      },
      "required": [
        "master",
        "preview"
      ]
    },
    "items.branches.master": {
      "properties": {
        "updated_at": {
          "type": "string",
          "description": "time of last update to master player "
        },
        "video_cloud": {
          "type": "boolean",
          "description": "indicates if account is Video Cloud enabled "
        },
        "configuration": {
          "type": "object",
          "description": "configuration of master player ",
          "$ref": "#/definitions/items.branches.master.configuration"
        },
        "name": {
          "type": "string",
          "description": "name of master (published) version of embed "
        },
        "master_url": {
          "type": "string",
          "description": "URL of master player "
        },
        "template_updated_at": {
          "type": "string",
          "description": "time of last update to player template "
        }
      },
      "required": [
        "updated_at",
        "video_cloud",
        "configuration",
        "name",
        "master_url",
        "template_updated_at"
      ]
    },
    "items.branches.preview": {
      "properties": {
        "updated_at": {
          "type": "string",
          "description": "time of last update to preview player "
        },
        "video_cloud": {
          "type": "boolean",
          "description": "indicates if account is Video Cloud enabled "
        },
        "configuration": {
          "type": "object",
          "description": "configuration of preview player ",
          "$ref": "#/definitions/items.branches.preview.configuration"
        },
        "name": {
          "type": "string",
          "description": "name of preview version of the embed "
        },
        "preview_url": {
          "type": "string",
          "description": "URL of preview player "
        },
        "template_updated_at": {
          "type": "string",
          "description": "time of last update to player template "
        }
      },
      "required": [
        "updated_at",
        "video_cloud",
        "configuration",
        "name",
        "preview_url",
        "template_updated_at"
      ]
    },
    "items.publish_request": {
      "properties": {
        "author": {
          "type": "string",
          "description": "email address of person requesting embed creation "
        },
        "buildLog": {
          "type": "string",
          "description": "URL to build information "
        },
        "comment": {
          "type": "string",
          "description": "comment on action, e.g. Player created "
        },
        "elapsed_time": {
          "type": "string",
          "description": "time in milliseconds of embed creation "
        },
        "errorCode": {
          "type": "string",
          "description": "error code, if no error value is null "
        },
        "errorMessage": {
          "type": "string",
          "description": "error message, if no error value is null "
        },
        "queue_msg_id": {
          "type": "string",
          "description": "unique identifier of message "
        },
        "requested_at": {
          "type": "string",
          "description": "time of embed creation request "
        },
        "retries": {
          "type": "string",
          "description": "number of retries to create embed "
        },
        "status": {
          "type": "string",
          "description": "status of request, for e.g. COMPLETE "
        }
      },
      "required": [
        "author",
        "buildLog",
        "comment",
        "elapsed_time",
        "errorCode",
        "errorMessage",
        "queue_msg_id",
        "requested_at",
        "retries",
        "status"
      ]
    },
    "items.branches.master.configuration": {
      "properties": {
        "configuration": {
          "type": "object",
          "description": "configuration object, refer to the PLAYER CONFIGURATIONS &gt; Get a Player Configuration above for all player options. ",
          "$ref": "#/definitions/items.branches.master.configuration.configuration"
        },
        "autoadvance": {
          "type": "boolean",
          "description": "autoadvance setting if using playlists: 0 for no wait; a number for seconds between advance; null to cancel autoadvance "
        },
        "autoplay": {
          "type": "boolean",
          "description": "indicates player should play video immediately, on platforms that allow this "
        },
        "css": {
          "type": "object",
          "description": "object containing CSS color overrides ",
          "$ref": "#/definitions/items.branches.master.configuration.css"
        },
        "errors": {
          "type": "boolean",
          "description": "indicates if the error messages plugin should be excluded "
        },
        "fullscreenControl": {
          "type": "boolean",
          "description": "indicates whether the fullscreen control should be shown in the control bar "
        },
        "media": {
          "type": "object",
          "description": "media information for non-Video Cloud media ",
          "$ref": "#/definitions/items.branches.master.configuration.media"
        },
        "player": {
          "type": "object",
          "description": "player information object ",
          "$ref": "#/definitions/items.branches.master.configuration.player"
        },
        "playlist": {
          "type": "boolean",
          "description": "indicates if a playlist should be used "
        },
        "plugins": {
          "type": "array",
          "description": "array of plugin objects ",
          "items": {
            "$ref": "#/definitions/items.branches.master.configuration.plugins"
          }
        },
        "preload": {
          "type": "string",
          "description": "informs the browser whether or not the video data should begin downloading as soon as the video tag is loaded; the options are auto, metadata, and none "
        },
        "scripts": {
          "type": "array",
          "description": "URLs to JavaScript files that should be included with the player ",
          "items": {
            "type": "string"
          }
        },
        "skin": {
          "type": "boolean",
          "description": "indicates is the default look-and-feel will be used with the player; set to false when creating a new, highly customized skin "
        },
        "studio_configuration": {
          "type": "object",
          "description": "object containing playlist information normally set in Studio ",
          "$ref": "#/definitions/items.branches.master.configuration.studio_configuration"
        },
        "stylesheets": {
          "type": "array",
          "description": "URLs to CSS files that should be included with the player ",
          "items": {
            "type": "string"
          }
        },
        "techOrder": {
          "type": "array",
          "description": "order that playback technologies should be used; only visible if changed from default ",
          "items": {
            "type": "string"
          }
        },
        "video_cloud": {
          "type": "object",
          "description": "Video Cloud configuration information ",
          "$ref": "#/definitions/items.branches.master.configuration.video_cloud"
        }
      },
      "required": [
        "configuration",
        "autoadvance",
        "autoplay",
        "css",
        "errors",
        "fullscreenControl",
        "media",
        "player",
        "playlist",
        "plugins",
        "preload",
        "scripts",
        "skin",
        "studio_configuration",
        "stylesheets",
        "techOrder",
        "video_cloud"
      ]
    },
    "items.branches.preview.configuration": {
      "properties": {
        "configuration": {
          "type": "object",
          "description": "configuration object, refer to the PLAYER CONFIGURATIONS &gt; Get a Player Configuration above for all player options. ",
          "$ref": "#/definitions/items.branches.preview.configuration.configuration"
        },
        "autoadvance": {
          "type": "boolean",
          "description": "autoadvance setting if using playlists: 0 for no wait; a number for seconds between advance; null to cancel autoadvance "
        },
        "autoplay": {
          "type": "boolean",
          "description": "indicates player should play video immediately, on platforms that allow this "
        },
        "css": {
          "type": "object",
          "description": "object containing CSS color overrides ",
          "$ref": "#/definitions/items.branches.preview.configuration.css"
        },
        "errors": {
          "type": "boolean",
          "description": "indicates if the error messages plugin should be excluded "
        },
        "fullscreenControl": {
          "type": "boolean",
          "description": "indicates whether the fullscreen control should be shown in the control bar "
        },
        "languages": {
          "type": "array",
          "description": "languages (2 letter abbreviations) you wish your player to support, from the Vides.js supported list ",
          "items": {
            "type": "string"
          }
        },
        "loop": {
          "type": "boolean",
          "description": "indicates if the video should play over as soon as it ends "
        },
        "media": {
          "type": "object",
          "description": "media information for non-Video Cloud media ",
          "$ref": "#/definitions/items.branches.preview.configuration.media"
        },
        "player": {
          "type": "object",
          "description": "player information object ",
          "$ref": "#/definitions/items.branches.preview.configuration.player"
        },
        "playlist": {
          "type": "boolean",
          "description": "indicates if a playlist should be used "
        },
        "plugins": {
          "type": "array",
          "description": "array of plugin objects ",
          "items": {
            "$ref": "#/definitions/items.branches.preview.configuration.plugins"
          }
        },
        "preload": {
          "type": "string",
          "description": "informs the browser whether or not the video data should begin downloading as soon as the video tag is loaded; the options are auto, metadata, and none "
        },
        "scripts": {
          "type": "array",
          "description": "URLs to JavaScript files that should be included with the player ",
          "items": {
            "type": "string"
          }
        },
        "skin": {
          "type": "boolean",
          "description": "indicates is the default look-and-feel will be used with the player; set to false when creating a new, highly customized skin "
        },
        "studio_configuration": {
          "type": "object",
          "description": "object containing playlist information normally set in Studio ",
          "$ref": "#/definitions/items.branches.preview.configuration.studio_configuration"
        },
        "stylesheets": {
          "type": "array",
          "description": "URLs to CSS files that should be included with the player ",
          "items": {
            "type": "string"
          }
        },
        "techOrder": {
          "type": "array",
          "description": "order that playback technologies should be used; only visible if changed from default ",
          "items": {
            "type": "string"
          }
        },
        "video_cloud": {
          "type": "object",
          "description": "Video Cloud configuration information ",
          "$ref": "#/definitions/items.branches.preview.configuration.video_cloud"
        }
      },
      "required": [
        "configuration",
        "autoadvance",
        "autoplay",
        "css",
        "errors",
        "fullscreenControl",
        "languages",
        "loop",
        "media",
        "player",
        "playlist",
        "plugins",
        "preload",
        "scripts",
        "skin",
        "studio_configuration",
        "stylesheets",
        "techOrder",
        "video_cloud"
      ]
    },
    "Delete_an_EmbedResponseFields": {
      "properties": {
        "message": {
          "type": "string",
          "description": "report of embed deletion "
        }
      },
      "required": [
        "message"
      ]
    },
    "Get_Single_EmbedResponseFields-Note:FieldsInConfigurationObjectsWillBeDisplayedInTheResponseOnlyIfExplicitlySet": {
      "properties": {
        "embed_code": {
          "type": "string",
          "description": "published embed iframe tag "
        },
        "embed_in_page": {
          "type": "string",
          "description": "URL to browse to retrieve the in-page embed code for embed "
        },
        "id": {
          "type": "string",
          "description": "id embed "
        },
        "name": {
          "type": "string",
          "description": "name of embed "
        },
        "preview_embed_code": {
          "type": "string",
          "description": "preview iframe tag for embed "
        },
        "publish_request": {
          "type": "object",
          "description": "publish request information ",
          "$ref": "#/definitions/publish_request"
        },
        "preview_url": {
          "type": "string",
          "description": "URL to preview embed "
        },
        "repository_url": {
          "type": "string",
          "description": "URL to repository of embed "
        },
        "url": {
          "type": "string",
          "description": "URL to embed "
        }
      },
      "required": [
        "embed_code",
        "embed_in_page",
        "id",
        "name",
        "preview_embed_code",
        "publish_request",
        "preview_url",
        "repository_url",
        "url"
      ]
    },
    "publish_request": {
      "properties": {
        "author": {
          "type": "string",
          "description": "email address of person requesting embed creation "
        },
        "buildLog": {
          "type": "string",
          "description": "URL to build information "
        },
        "comment": {
          "type": "string",
          "description": "comment on action, e.g. Player created "
        },
        "elapsed_time": {
          "type": "string",
          "description": "time in milliseconds of embed creation "
        },
        "errorCode": {
          "type": "string",
          "description": "error code, if no error value is null "
        },
        "errorMessage": {
          "type": "string",
          "description": "error message, if no error value is null "
        },
        "queue_msg_id": {
          "type": "string",
          "description": "unique identifier of message "
        },
        "requested_at": {
          "type": "string",
          "description": "time of embed creation request "
        },
        "retries": {
          "type": "string",
          "description": "number of retries to create embed "
        },
        "status": {
          "type": "string",
          "description": "status of request, for e.g. COMPLETE "
        }
      },
      "required": [
        "author",
        "buildLog",
        "comment",
        "elapsed_time",
        "errorCode",
        "errorMessage",
        "queue_msg_id",
        "requested_at",
        "retries",
        "status"
      ]
    },
    "Publish_an_EmbedResponseFields": {
      "properties": {
        "id": {
          "type": "string",
          "description": "embed ID "
        },
        "url": {
          "type": "string",
          "description": "URL to published embed "
        },
        "embed_code": {
          "type": "string",
          "description": "published embed iframe tag "
        },
        "embed_in_page": {
          "type": "string",
          "description": "URL to browse to retrieve the in-page embed code for published embed "
        }
      },
      "required": [
        "id",
        "url",
        "embed_code",
        "embed_in_page"
      ]
    },
    "Create_a_PlayerResponseFields": {
      "properties": {
        "id": {
          "type": "string",
          "description": "player ID "
        },
        "url": {
          "type": "string",
          "description": "URL to published player "
        },
        "embed_code": {
          "type": "string",
          "description": "published player iframe tag "
        },
        "embed_in_page": {
          "type": "string",
          "description": "URL to browse to retrieve the in-page embed code for published player "
        },
        "preview_url": {
          "type": "string",
          "description": "URL to preview player "
        },
        "preview_embed_code": {
          "type": "string",
          "description": "preview player iframe tag "
        }
      },
      "required": [
        "id",
        "url",
        "embed_code",
        "embed_in_page",
        "preview_url",
        "preview_embed_code"
      ]
    },
    "items.branches.master.configuration.css": {
      "properties": {
        "controlBarColor": {
          "type": "object",
          "description": "background color of control bar ",
          "$ref": "#/definitions/items.branches.master.configuration.css.controlBarColor"
        },
        "controlColor": {
          "type": "object",
          "description": "color of buttons and text in control bar ",
          "$ref": "#/definitions/items.branches.master.configuration.css.controlColor"
        },
        "progressColor": {
          "type": "object",
          "description": "color of progress bar ",
          "$ref": "#/definitions/items.branches.master.configuration.css.progressColor"
        }
      },
      "required": [
        "controlBarColor",
        "controlColor",
        "progressColor"
      ]
    },
    "items.branches.master.configuration.media": {
      "properties": {
        "sources": {
          "type": "array",
          "description": "array of media source objects ",
          "items": {
            "$ref": "#/definitions/items.branches.master.configuration.media.sources"
          }
        },
        "src": {
          "type": "string",
          "description": "URL to media asset "
        },
        "tracks": {
          "type": "array",
          "description": "array of track objects ",
          "items": {
            "type": "objects"
          }
        }
      },
      "required": [
        "sources",
        "src",
        "tracks"
      ]
    },
    "items.branches.master.configuration.media.sources": {
      "properties": {
        "height": {
          "type": "string",
          "description": "height of the video "
        },
        "src": {
          "type": "string",
          "description": "URL to media asset "
        },
        "title": {
          "type": "string",
          "description": "content of the &lt;title&gt; element of the page "
        },
        "tracks": {
          "type": "array",
          "description": "array of track objects ",
          "items": {
            "$ref": "#/definitions/items.branches.master.configuration.media.sources.tracks"
          }
        },
        "type": {
          "type": "string",
          "description": "MIME type of the video, as specified in the HTML5 standard, for instance video/mp4 form MP4 or application/x-mpegURL for HLS "
        },
        "width": {
          "type": "string",
          "description": "width of the video "
        }
      },
      "required": [
        "height",
        "src",
        "title",
        "tracks",
        "type",
        "width"
      ]
    },
    "items.branches.master.configuration.media.sources.poster": {
      "properties": {
        "highres": {
          "type": "string",
          "description": "URL to the poster image "
        }
      },
      "required": [
        "highres"
      ]
    },
    "items.branches.master.configuration.media.tracks": {
      "properties": {
        "label": {
          "type": "string",
          "description": "text label for the track, for instance English for an English language text track "
        },
        "src": {
          "type": "string",
          "description": "URL to source of track, required in a track object "
        },
        "srclang": {
          "type": "string",
          "description": "2 letter code (valid BCP 47 language tag) for the language of the text track, for example "
        }
      },
      "required": [
        "label",
        "src",
        "srclang"
      ]
    },
    "items.branches.master.configuration.player": {
      "properties": {
        "inactive": {
          "type": "boolean",
          "description": "indicates if a player is inactive "
        },
        "template": {
          "type": "object",
          "description": "specific template details ",
          "$ref": "#/definitions/items.branches.master.configuration.player.template"
        }
      },
      "required": [
        "inactive",
        "template"
      ]
    },
    "items.branches.master.configuration.player.template": {
      "properties": {
        "name": {
          "type": "string",
          "description": "name of player template "
        },
        "version": {
          "type": "string",
          "description": "version of player template "
        }
      },
      "required": [
        "name",
        "version"
      ]
    },
    "items.branches.master.configuration.playlist": {
      "properties": {
        "playOnSelect": {
          "type": "boolean",
          "description": "indicates if a video loaded from a playlist should play on load "
        }
      },
      "required": [
        "playOnSelect"
      ]
    },
    "items.branches.master.configuration.plugins": {
      "properties": {
        "name": {
          "type": "string",
          "description": "name of plugin "
        },
        "options": {
          "type": "json",
          "description": "configuration options for plugin "
        }
      },
      "required": [
        "name",
        "options"
      ]
    },
    "items.branches.master.configuration.studio_configuration": {
      "properties": {
        "player": {
          "type": "object",
          "description": "object containing playlist information ",
          "$ref": "#/definitions/items.branches.master.configuration.studio_configuration.player"
        }
      },
      "required": [
        "player"
      ]
    },
    "items.branches.master.configuration.studio_configuration.player": {
      "properties": {
        "adjusted": {
          "type": "boolean",
          "description": "indicates if player dimensions should be adjusted for playlist "
        },
        "height": {
          "type": "string",
          "description": "player height when displayed with playlist; if the height and width are not assigned values, the sizes of the player and playlist are automatically adjusted "
        },
        "width": {
          "type": "string",
          "description": "player width when displayed with playlist; if the height and width are not assigned values, the sizes of the player and playlist are automatically adjusted "
        }
      },
      "required": [
        "adjusted",
        "height",
        "width"
      ]
    },
    "items.branches.master.configuration.video_cloud": {
      "properties": {
        "policy_key": {
          "type": "string",
          "description": "policy key for Video Cloud account "
        },
        "video": {
          "type": "string",
          "description": "if using a Video Cloud video asset, that asset&#39;s ID "
        }
      },
      "required": [
        "policy_key",
        "video"
      ]
    },
    "items.branches.preview.configuration.css": {
      "properties": {
        "controlBarColor": {
          "type": "object",
          "description": "background color of control bar ",
          "$ref": "#/definitions/items.branches.preview.configuration.css.controlBarColor"
        },
        "controlColor": {
          "type": "object",
          "description": "color of buttons and text in control bar ",
          "$ref": "#/definitions/items.branches.preview.configuration.css.controlColor"
        },
        "progressColor": {
          "type": "object",
          "description": "color of progress bar ",
          "$ref": "#/definitions/items.branches.preview.configuration.css.progressColor"
        }
      },
      "required": [
        "controlBarColor",
        "controlColor",
        "progressColor"
      ]
    },
    "items.branches.preview.configuration.media": {
      "properties": {
        "sources": {
          "type": "array",
          "description": "array of media source objects ",
          "items": {
            "$ref": "#/definitions/items.branches.preview.configuration.media.sources"
          }
        },
        "src": {
          "type": "string",
          "description": "URL to media asset "
        },
        "tracks": {
          "type": "array",
          "description": "array of track objects ",
          "items": {
            "type": "objects"
          }
        }
      },
      "required": [
        "sources",
        "src",
        "tracks"
      ]
    },
    "items.branches.preview.configuration.media.sources": {
      "properties": {
        "height": {
          "type": "string",
          "description": "height of the video "
        },
        "src": {
          "type": "string",
          "description": "URL to media asset "
        },
        "title": {
          "type": "string",
          "description": "content of the &lt;title&gt; element of the page "
        },
        "tracks": {
          "type": "array",
          "description": "array of track objects ",
          "items": {
            "$ref": "#/definitions/items.branches.preview.configuration.media.sources.tracks"
          }
        },
        "type": {
          "type": "string",
          "description": "MIME type of the video, as specified in the HTML5 standard, for instance video/mp4 form MP4 or application/x-mpegURL for HLS "
        },
        "width": {
          "type": "string",
          "description": "width of the video "
        }
      },
      "required": [
        "height",
        "src",
        "title",
        "tracks",
        "type",
        "width"
      ]
    },
    "items.branches.preview.configuration.media.sources.poster": {
      "properties": {
        "highres": {
          "type": "string",
          "description": "URL to the poster image "
        }
      },
      "required": [
        "highres"
      ]
    },
    "items.branches.preview.configuration.media.tracks": {
      "properties": {
        "label": {
          "type": "string",
          "description": "text label for the track, for instance English for an English language text track "
        },
        "src": {
          "type": "string",
          "description": "URL to source of track, required in a track object "
        },
        "srclang": {
          "type": "string",
          "description": "2 letter code (valid BCP 47 language tag) for the language of the text track, for example "
        }
      },
      "required": [
        "label",
        "src",
        "srclang"
      ]
    },
    "items.branches.preview.configuration.player": {
      "properties": {
        "inactive": {
          "type": "boolean",
          "description": "indicates if a player is inactive "
        },
        "template": {
          "type": "object",
          "description": "specific template details ",
          "$ref": "#/definitions/items.branches.preview.configuration.player.template"
        }
      },
      "required": [
        "inactive",
        "template"
      ]
    },
    "items.branches.preview.items.branches.preview.configuration.player.template": {
      "properties": {
        "name": {
          "type": "string",
          "description": "name of player template "
        }
      },
      "required": [
        "name"
      ]
    },
    "items.branches.preview.configuration.player.template": {
      "properties": {
        "version": {
          "type": "string",
          "description": "version of player template "
        }
      },
      "required": [
        "version"
      ]
    },
    "items.branches.preview.configuration.playlist": {
      "properties": {
        "playOnSelect": {
          "type": "boolean",
          "description": "indicates if a video loaded from a playlist should play on load "
        }
      },
      "required": [
        "playOnSelect"
      ]
    },
    "items.branches.preview.configuration.plugins": {
      "properties": {
        "name": {
          "type": "string",
          "description": "name of plugin "
        },
        "options": {
          "type": "json",
          "description": "configuration options for plugin "
        }
      },
      "required": [
        "name",
        "options"
      ]
    },
    "items.branches.preview.configuration.studio_configuration": {
      "properties": {
        "player": {
          "type": "object",
          "description": "object containing playlist information ",
          "$ref": "#/definitions/items.branches.preview.configuration.studio_configuration.player"
        }
      },
      "required": [
        "player"
      ]
    },
    "items.branches.preview.configuration.studio_configuration.player": {
      "properties": {
        "adjusted": {
          "type": "boolean",
          "description": "indicates if player dimensions should be adjusted for playlist "
        },
        "height": {
          "type": "string",
          "description": "player height when displayed with playlist; if the height and width are not assigned values, the sizes of the player and playlist are automatically adjusted "
        },
        "width": {
          "type": "string",
          "description": "player width when displayed with playlist; if the height and width are not assigned values, the sizes of the player and playlist are automatically adjusted "
        }
      },
      "required": [
        "adjusted",
        "height",
        "width"
      ]
    },
    "items.branches.preview.configuration.video_cloud": {
      "properties": {
        "policy_key": {
          "type": "string",
          "description": "policy key for Video Cloud account "
        },
        "video": {
          "type": "string",
          "description": "if using a Video Cloud video asset, that asset&#39;s ID "
        }
      },
      "required": [
        "policy_key",
        "video"
      ]
    },
    "Get_All_PlayersResponseFields-Note:FieldsInConfigurationObjectsWillBeDisplayedInTheResponseOnlyIfExplicitlySet": {
      "properties": {
        "item_count": {
          "type": "number",
          "description": "number of player objects in array "
        }
      },
      "required": [
        "item_count"
      ]
    },
    "Delete_a_PlayerResponseFields": {
      "properties": {
        "message": {
          "type": "string",
          "description": "report of player deletion "
        }
      },
      "required": [
        "message"
      ]
    },
    "Get_Single_PlayerResponseFields-Note:FieldsInConfigurationObjectsWillBeDisplayedInTheResponseOnlyIfExplicitlySet": {
      "properties": {
        "accountId": {
          "type": "string",
          "description": "account ID "
        },
        "branches": {
          "type": "object",
          "description": "contains objects for the preview and master (published) player ",
          "$ref": "#/definitions/branches"
        },
        "created_at": {
          "type": "string",
          "description": "player creation time "
        },
        "description": {
          "type": "string",
          "description": "player description "
        },
        "embed_count": {
          "type": "string",
          "description": "number of embeds, will always be at least 1 "
        },
        "id": {
          "type": "string",
          "description": "video id "
        },
        "name": {
          "type": "string",
          "description": "name give to player "
        },
        "url": {
          "type": "string",
          "description": "URL to player "
        }
      },
      "required": [
        "accountId",
        "branches",
        "created_at",
        "description",
        "embed_count",
        "id",
        "name",
        "url"
      ]
    },
    "Update_a_PlayerResponseFields": {
      "properties": {
        "id": {
          "type": "string",
          "description": "player ID "
        },
        "preview_url": {
          "type": "string",
          "description": "URL to preview player "
        },
        "preview_embed_code": {
          "type": "string",
          "description": "preview player iframe tag "
        }
      },
      "required": [
        "id",
        "preview_url",
        "preview_embed_code"
      ]
    },
    "Publish_a_PlayerResponseFields": {
      "properties": {
        "id": {
          "type": "string",
          "description": "player ID "
        },
        "url": {
          "type": "string",
          "description": "URL to published player "
        },
        "embed_code": {
          "type": "string",
          "description": "published player iframe tag "
        },
        "embed_in_page": {
          "type": "string",
          "description": "URL to browse to retrieve the in-page embed code for published player "
        }
      },
      "required": [
        "id",
        "url",
        "embed_code",
        "embed_in_page"
      ]
    },
    "versions": {
      "properties": {
        "version_number": {
          "type": "string",
          "description": "the version number "
        },
        "minimum_template_version": {
          "type": "string",
          "description": "the minimum player version required to use this plugin "
        },
        "stylesheets": {
          "type": "array",
          "description": "URLs for the plungin stylesheet(s) ",
          "items": {
            "type": "string"
          }
        },
        "scripts": {
          "type": "array",
          "description": "URLs for the plungin script(s) ",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "version_number",
        "minimum_template_version",
        "stylesheets",
        "scripts"
      ]
    },
    "Get_All_PluginsResponseFields": {
      "properties": {
        "documentation": {
          "type": "string",
          "description": "URLs for the plungin documentation "
        },
        "description": {
          "type": "string",
          "description": "Description of the plugin "
        },
        "id": {
          "type": "string",
          "description": "The plugin id "
        },
        "name": {
          "type": "string",
          "description": "The plugin name "
        },
        "current_version": {
          "type": "string",
          "description": "The current version of the plugin "
        }
      },
      "required": [
        "documentation",
        "description",
        "id",
        "name",
        "current_version"
      ]
    },
    "Get_Single_PluginResponseFields": {
      "properties": {
        "documentation": {
          "type": "string",
          "description": "URLs for the plungin documentation "
        },
        "description": {
          "type": "string",
          "description": "Description of the plugin "
        },
        "id": {
          "type": "string",
          "description": "The plugin id "
        },
        "name": {
          "type": "string",
          "description": "The plugin name "
        },
        "current_version": {
          "type": "string",
          "description": "The current version of the plugin "
        }
      },
      "required": [
        "documentation",
        "description",
        "id",
        "name",
        "current_version"
      ]
    }
  },
  "schemes": [
    "https"
  ],
  "host": "players.api.brightcove.com",
  "basePath": "/v2"
}