{
  "swagger": "2.0",
  "info": {
    "title": "Data Collection API Reference",
    "version": "2.0.0",
    "description": "Reference for the Brightcove Data Collection API, used to send analytics data to the Brightcove analytics system."
  },
  "paths": {
    "/tracker": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Send Event",
        "description": "Send event information to the data collector for Brightcove Analytics ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "400": {
            "description": "BAD_REQUEST: The message fields of the response contains information about what caused the error such as invalid value for sort parameter \nUNSUPPORTED_FIELD_COMBINATION_ERROR: The message fields of the response contains information about what invalid fields were specifed "
          },
          "404": {
            "description": "RESOURCE_NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "405": {
            "description": "METHOD_NOT_ALLOWED: This error occurs when the api request is made with an HTTP method other than GET "
          },
          "500": {
            "description": "SERVER_ERROR: Issue in Brightcove system; try again later "
          }
        },
        "operationId": "Send_Event"
      }
    }
  },
  "definitions": {
    "URL Parameters: All Requests": {
      "properties": {
        "account": {
          "type": "string",
          "description": "account id "
        },
        "domain": {
          "type": "string",
          "description": "always equal to videocloud "
        },
        "device_os": {
          "type": "string",
          "description": "Override to specify the OS of the device that originated the event in cases where the User Agent is unreliable (ignored unless both device os and device type are included or if the value submitted is not in the list of values shown here. Not typically included) "
        },
        "device_manufacturer": {
          "type": "string",
          "description": "Override to specify the manufacturer of the device that originated the event in cases where the User Agent is unreliable (Not typically included) "
        },
        "device_os_version": {
          "type": "string",
          "description": "The version of os being used by the device. When not specified, this will be calculated by parsing the user agent string for the tracking request "
        },
        "device_type": {
          "type": "string",
          "description": "Override to specify the type of the device that originated the event in cases where the User Agent is unreliable (ignored unless both device os and device type are included or if the value submitted is not in the list of values shown here. Not typically included) "
        },
        "event": {
          "type": "string",
          "description": "the event type "
        },
        "destination": {
          "type": "string",
          "description": "URI that originated the event "
        },
        "source": {
          "type": "string",
          "description": "URI that sent the end-user to the destination URI "
        },
        "time": {
          "type": "number",
          "description": "the timestamp for the event in epoch time (milliseconds) "
        },
        "country": {
          "type": "string",
          "description": "ISO-3166 (alpha 2) region cISO-3166 (alpha 2) region code (override in case the system can not detect geographic information from the IP address) Not typically included "
        },
        "country_name": {
          "type": "string",
          "description": "Human readable country name (override in case the system can not detect geographic information from the IP address) Not typically included "
        },
        "region": {
          "type": "string",
          "description": "ISO-3166 (alpha 2) region code (override in case the system can not detect geographic information from the IP address) Not typically included "
        },
        "region_name": {
          "type": "string",
          "description": "Human readable region name (override in case the system can not detect geographic information from the IP address) Not typically included "
        },
        "city": {
          "type": "string",
          "description": "City name Not typically included "
        },
        "user": {
          "type": "string",
          "description": "A unique user identifier - if not provided or blank, Video Cloud uses the fallback method of using the Source IP address + the User-Agent String as the unique identifier; Note that Brightcove uses this information only to calculate unique users. The user data itself cannot retrieved via the API or Analytics module "
        }
      },
      "required": [
        "account",
        "domain",
        "event"
      ]
    },
    "URL Parameters: `catalog_request` Events": {
      "properties": {
        "catalog_url": {
          "type": "string",
          "description": "The destination url associated with the catalog_request event "
        }
      },
      "required": []
    },
    "URL Parameters: `catalog_response` Events": {
      "properties": {
        "catalog_url": {
          "type": "string",
          "description": "The destination url associated with the catalog_request event that initiated this response "
        },
        "response_time_ms": {
          "type": "number",
          "description": "The time, in milliseconds, between the catalog_request event and the catalog_response event "
        }
      },
      "required": []
    },
    "URL Parameters: `error` Events": {
      "properties": {
        "error_code": {
          "type": "number",
          "description": "A platform specific error code associated with the event "
        }
      },
      "required": []
    },
    "URL Parameters: `video_impression` Events": {
      "properties": {
        "video": {
          "type": "string",
          "description": "the video id "
        },
        "video_name": {
          "type": "string",
          "description": "the video name "
        }
      },
      "required": []
    },
    "URL Parameters: `video_view` Events": {
      "properties": {
        "video": {
          "type": "string",
          "description": "the video id "
        },
        "video_name": {
          "type": "string",
          "description": "the video name "
        },
        "start_time_ms": {
          "type": "string",
          "description": "The time, in milliseconds, between initiation of playback and the first frame of the video being rendered. This can be different depending on the experience, for instance, if there are no pre-roll ads configured, this measurement is the time between the play_request and video_view events. If there is a preroll ad, the time between ad_mode_begin and ad_mode_complete should not be included "
        }
      },
      "required": []
    },
    "URL Parameters: `video_engagement` Events": {
      "properties": {
        "video": {
          "type": "string",
          "description": "the video id "
        },
        "video_name": {
          "type": "string",
          "description": "the video name "
        },
        "range": {
          "type": "string",
          "description": "the range of the video video viewed for video_engagement events in the format StartSecond..EndSecond - range can be left out of an engagement event to show that during the period covered by the event, there was no viewing activity. (for example, when there is only re-buffering activity) "
        },
        "rendition_url": {
          "type": "string",
          "description": "The url to the most recently selected rendition. For example, for an HLS stream this would be the url to the most recently selected variant "
        },
        "rendition_indicated_bps": {
          "type": "string",
          "description": "The indicated bitrate, in bits per second, of the most recently selected rendition "
        },
        "rendition_mime_type": {
          "type": "string",
          "description": "The mime type of the most recently selected rendition "
        },
        "rendition_height": {
          "type": "string",
          "description": "The encoded height of the video rendition in pixels "
        },
        "rendition_width": {
          "type": "string",
          "description": "The encoded width of the video rendition in pixels "
        },
        "rebuffering_seconds": {
          "type": "string",
          "description": "The number of seconds the user spent waiting for video to playback due to un-requested delay during the engagement period "
        },
        "rebuffering_count": {
          "type": "string",
          "description": "The number of times playback stopped due to re-buffering during the represented engagement period delay during the engagement period "
        },
        "forward_buffer_seconds": {
          "type": "string",
          "description": "The number of seconds of video currently residing in the forward buffer "
        },
        "measured_bps": {
          "type": "string",
          "description": "The ratio of the number of bits included in the most recently downloaded segment to the time spend downloading that segment, in bits per second "
        },
        "player_width": {
          "type": "string",
          "description": "The current pixel width of the player at the end of the engagement range "
        },
        "player_height": {
          "type": "string",
          "description": "The current pixel height of the player at the end of the engagement range "
        },
        "dropped_frames": {
          "type": "string",
          "description": "dropped_frames "
        },
        "video_duration": {
          "type": "number",
          "description": "the duration of the video in seconds "
        },
        "video_seconds_viewed": {
          "type": "number",
          "description": "count of watched seconds since the last update for video_engagement events "
        }
      },
      "required": []
    }
  },
  "schemes": [
    "http"
  ],
  "host": "metrics.brightcove.com",
  "basePath": "/v2"
}