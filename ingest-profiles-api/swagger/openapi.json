{
  "openapi": "3.0.0",
  "info": {
    "title": "Ingest Profiles API Reference",
    "description": "Reference for the Brightcove Ingest Profiles API, used to create and manage ingest profiles that specify video and image renditions to be created, along with instructions for archiving masters. To test API requests, you can use our <a href=\"https://support.brightcove.com/getting-access-tokens\" target=\"_blank\">API Testing Tools</a>",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://ingestion.api.brightcove.com/v1",
      "variables": {}
    }
  ],
  "paths": {
    "/accounts/{account_id}/configuration": {
      "get": {
        "tags": [
          "Account_Configuration"
        ],
        "summary": "Get_Default_Profile",
        "description": "Get the default ingest profile for the account. ",
        "operationId": "GetDefaultProfile",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "Video Cloud account ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type: application/json",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "description": "200",
                  "$ref": "#/components/schemas/GetDefaultProfile200"
                }
              }
            }
          },
          "401": {
            "description": "NOT_AUTHORIZED: Credentials are required to access this resource "
          },
          "404": {
            "description": "NOT_FOUND: The api couldn&#39;t find the resource you requested "
          }
        },
        "deprecated": false,
        "security": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "put": {
        "tags": [
          "Account_Configuration"
        ],
        "summary": "Update_Default_Profile",
        "description": "Updates the default ingest profile for the account. ",
        "operationId": "UpdateDefaultProfile",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "Video Cloud account ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type: application/json",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updates the default ingest profile for the account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Updates the default ingest profile for the account.",
                "$ref": "#/components/schemas/UpdateDefaultProfilebody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "description": "200",
                  "$ref": "#/components/schemas/UpdateDefaultProfile200"
                }
              }
            }
          },
          "400": {
            "description": "BAD_REQUEST: The JSON was not valid "
          },
          "401": {
            "description": "NOT_AUTHORIZED: Credentials are required to access this resource. "
          },
          "404": {
            "description": "NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "409": {
            "description": "CONFLICT: Account configuration already exists for 57838016001; please delete the configuration first, or update it instead. "
          }
        },
        "deprecated": false,
        "security": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "post": {
        "tags": [
          "Account_Configuration"
        ],
        "summary": "Set_Default_Profile",
        "description": "Sets an ingest profile as the default for the account. ",
        "operationId": "SetDefaultProfile",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "Video Cloud account ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type: application/json",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Sets an ingest profile as the default for the account.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Sets an ingest profile as the default for the account.",
                "$ref": "#/components/schemas/SetDefaultProfilebody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "description": "200",
                  "$ref": "#/components/schemas/SetDefaultProfile200"
                }
              }
            }
          },
          "400": {
            "description": "BAD_REQUEST: The JSON was not valid "
          },
          "401": {
            "description": "NOT_AUTHORIZED: Credentials are required to access this resource. "
          },
          "404": {
            "description": "NOT_FOUND: The api couldn&#39;t find the resource you requested "
          },
          "409": {
            "description": "CONFLICT: Account configuration already exists for 57838016001; please delete the configuration first, or update it instead. "
          }
        },
        "deprecated": false,
        "security": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/accounts/{account_id}/profiles": {
      "get": {
        "tags": [
          "Profile"
        ],
        "summary": "Get_All_Ingest_Profiles",
        "description": "Get an array of all the profiles valid for the account ",
        "operationId": "GetAllIngestProfiles",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "Video Cloud account ID.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type: application/json",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "NOT_AUTHORIZED: Credentials are required to access this resource. "
          },
          "404": {
            "description": "NOT_FOUND:    Error 404 NOT_FOUND  HTTP ERROR 404 Problem accessing /v1/accounts/578380001/profiles. Reason"
          },
          "409": {
            "description": "PROFILE_ERROR: profile rendition count exceeds configured rendition limit "
          }
        },
        "deprecated": false,
        "security": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "post": {
        "tags": [
          "Profile"
        ],
        "summary": "Create_Ingest_Profile",
        "description": "Create a custom ingest profile for the account. Note that you can also do this through Video Cloud Studio ",
        "operationId": "CreateIngestProfile",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "Video Cloud account ID.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type: application/json",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization: Bearer access_token (see Getting Access Tokens)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Create a custom ingest profile for the account. Note that you can also do this through Video Cloud Studio",
          "content": {
            "application/json": {
              "schema": {
                "description": "Create a custom ingest profile for the account. Note that you can also do this through Video Cloud Studio",
                "$ref": "#/components/schemas/CreateIngestProfilebody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "BAD_REQUEST: Invalid JSON &mdash; message varies according to the problem "
          },
          "401": {
            "description": "NOT_AUTHORIZED: Credentials are required to access this resource. "
          },
          "404": {
            "description": "NOT_FOUND:  Resource not found "
          },
          "409": {
            "description": "CONFLICT: Could not create profile with this name and id (profile name or id already exists) "
          },
          "422": {
            "description": "UNPROCESSABLE_ENTITY: required field missing &mdash; message varies according to the issue "
          }
        },
        "deprecated": false,
        "security": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    }
  },
  "components": {
    "schemas": {
      "GetDefaultProfile200": {
        "title": "Get_Default_Profile200",
        "required": [
          "account_id",
          "id",
          "default_profile_id",
          "default_live_profile_id",
          "date_created",
          "date_last_modified",
          "max_profile_count",
          "max_rendition_count",
          "version"
        ],
        "type": "object",
        "properties": {
          "account_id": {
            "type": "number",
            "description": "Video Cloud account id"
          },
          "id": {
            "type": "string",
            "description": "configuration id"
          },
          "default_profile_id": {
            "type": "string",
            "description": "profile name for video-on-demand"
          },
          "default_live_profile_id": {
            "type": "string",
            "description": "default profile name for live streams"
          },
          "date_created": {
            "type": "number",
            "description": "when the profile was created (epoch time in milliseconds)"
          },
          "date_last_modified": {
            "type": "number",
            "description": "when the profile was last modified (epoch time in milliseconds)"
          },
          "max_profile_count": {
            "type": "number",
            "description": "maximum number of custom profiles for the account"
          },
          "max_rendition_count": {
            "type": "number",
            "description": "maximum number of renditions per profile"
          },
          "version": {
            "type": "number",
            "description": "system-managed version number"
          }
        }
      },
      "SetDefaultProfilebody": {
        "title": "Set_Default_ProfileBody",
        "required": [
          "account_id",
          "default_profile_id"
        ],
        "type": "object",
        "properties": {
          "account_id": {
            "type": "number",
            "description": "Video Cloud account ID"
          },
          "default_profile_id": {
            "type": "string",
            "description": "The id or name of the profile you want to set as the default",
            "example": "multi-platform-standard-static"
          },
          "default_live_profile_id": {
            "type": "string",
            "description": "The id or name of the live profile you want to set as the default"
          }
        }
      },
      "SetDefaultProfile200": {
        "title": "Set_Default_Profile200",
        "required": [
          "account_id",
          "id",
          "default_profile_id",
          "default_live_profile_id",
          "date_created",
          "date_last_modified",
          "max_profile_count",
          "max_rendition_count",
          "version"
        ],
        "type": "object",
        "properties": {
          "account_id": {
            "type": "number",
            "description": "Video Cloud account id"
          },
          "id": {
            "type": "string",
            "description": "configuration id"
          },
          "default_profile_id": {
            "type": "string",
            "description": "profile name for video-on-demand"
          },
          "default_live_profile_id": {
            "type": "string",
            "description": "default profile name for live streams"
          },
          "date_created": {
            "type": "integer",
            "description": "when the profile was created (epoch time in milliseconds)",
            "format": "int32"
          },
          "date_last_modified": {
            "type": "integer",
            "description": "when the profile was last modified (epoch time in milliseconds)",
            "format": "int32"
          },
          "max_profile_count": {
            "type": "integer",
            "description": "maximum number of custom profiles for the account",
            "format": "int32"
          },
          "max_rendition_count": {
            "type": "integer",
            "description": "maximum number of renditions per profile",
            "format": "int32"
          },
          "version": {
            "type": "number",
            "description": "system-managed version number"
          }
        }
      },
      "UpdateDefaultProfilebody": {
        "title": "Update_Default_ProfileBody",
        "required": [
          "account_id",
          "id",
          "default_profile_id"
        ],
        "type": "object",
        "properties": {
          "account_id": {
            "type": "number",
            "description": "Video Cloud account ID"
          },
          "id": {
            "type": "string",
            "description": "the configuration id (if you don&#39;t have it, make a GET request to get it)"
          },
          "default_profile_id": {
            "type": "string",
            "description": "The id or name of the profile you want to set as the default",
            "example": "multi-platform-standard-static"
          },
          "default_live_profile_id": {
            "type": "string",
            "description": "The id or name of the live profile you want to set as the default"
          }
        }
      },
      "UpdateDefaultProfile200": {
        "title": "Update_Default_Profile200",
        "required": [
          "account_id",
          "id",
          "default_profile_id",
          "default_live_profile_id",
          "date_created",
          "date_last_modified",
          "max_profile_count",
          "max_rendition_count",
          "version"
        ],
        "type": "object",
        "properties": {
          "account_id": {
            "type": "number",
            "description": "Video Cloud account id"
          },
          "id": {
            "type": "string",
            "description": "configuration id"
          },
          "default_profile_id": {
            "type": "string",
            "description": "profile name for video-on-demand"
          },
          "default_live_profile_id": {
            "type": "string",
            "description": "default profile name for live streams"
          },
          "date_created": {
            "type": "integer",
            "description": "when the profile was created (epoch time in milliseconds)",
            "format": "int32"
          },
          "date_last_modified": {
            "type": "integer",
            "description": "when the profile was last modified (epoch time in milliseconds)",
            "format": "int32"
          },
          "max_profile_count": {
            "type": "integer",
            "description": "maximum number of custom profiles for the account",
            "format": "int32"
          },
          "max_rendition_count": {
            "type": "integer",
            "description": "maximum number of renditions per profile",
            "format": "int32"
          },
          "version": {
            "type": "number",
            "description": "system-managed version number"
          }
        }
      },
      "CreateIngestProfilebody": {
        "title": "Create_Ingest_ProfileBody",
        "required": [
          "name",
          "account_id",
          "dynamic_origin",
          "renditions",
          "packages"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "profile name (must be unique within the account)"
          },
          "account_id": {
            "type": "integer",
            "description": "Video Cloud account ID.",
            "format": "int32"
          },
          "dynamic_origin": {
            "$ref": "#/components/schemas/CreateIngestProfilebody.dynamicOrigin"
          },
          "renditions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateIngestProfilebody.renditions"
            },
            "description": "array of rendition maps **Legacy Ingest only**"
          },
          "packages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateIngestProfilebody.packages"
            },
            "description": "array of package maps for DRM (see Content Security) **Legacy Ingest only**"
          },
          "description": {
            "type": "string",
            "description": "description of the profile"
          },
          "digital_master": {
            "$ref": "#/components/schemas/CreateIngestProfilebody.digitalMaster"
          }
        }
      },
      "CreateIngestProfilebody.digitalMaster": {
        "title": "Create_Ingest_ProfileBody.digital_master",
        "type": "object",
        "properties": {
          "rendition": {
            "type": "string",
            "description": "rendition to use as master - either `passthrough` (the source optimized for online delivery) or `none` if you do not want to archive a master",
            "default": "none",
            "enum": [
              "passthrough",
              "none"
            ]
          },
          "distribute": {
            "type": "boolean",
            "description": "whether to make the master playable as a rendition by pushing it to the CDN(s)",
            "default": false
          }
        }
      },
      "CreateIngestProfilebody.dynamicOrigin": {
        "title": "Create_Ingest_ProfileBody.dynamic_origin",
        "required": [
          "renditions"
        ],
        "type": "object",
        "properties": {
          "renditions": {
            "type": "object",
            "description": "names of audio and video renditions to include (audio only for CAE profiles) - see [Standard Ingest Profiles - renditions](https://support.brightcove.com/standard-ingest-profiles-dynamic-delivery-and-context-aware-encoding#Renditions) for available renditions you can choose from"
          },
          "temporary_renditions": {
            "type": "object",
            "description": "names of video renditions for Fast Publish (only for CAE profiles) - see [Standard Ingest Profiles - renditions](https://support.brightcove.com/standard-ingest-profiles-dynamic-delivery-and-context-aware-encoding#Renditions) for available renditions you can choose from"
          },
          "dynamic_profile_options": {
            "description": "Defines rendition options for **CAE profiles only**",
            "$ref": "#/components/schemas/CreateIngestProfilebody.dynamicOrigin.dynamicProfileOptions"
          },
          "images": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateIngestProfilebody.dynamicOrigin.images"
            },
            "description": "array of image specifications for poster and thumbnail (if omitted, no images will be captured during ingestion)"
          }
        }
      },
      "CreateIngestProfilebody.dynamicOrigin.images": {
        "title": "Create_Ingest_ProfileBody.dynamic_origin.images",
        "type": "object",
        "properties": {
          "label": {
            "type": "string",
            "description": "the kind of image this will be",
            "enum": ["poster", "thumbnail"]
          },
          "height": {
            "type": "integer",
            "description": "the height of the image in pixels",
            "format": "int32"
          },
          "width": {
            "type": "integer",
            "description": "the width of the image in pixels",
            "format": "int32"
          }
        }
      },
      "CreateIngestProfilebody.dynamicOrigin.dynamicProfileOptions": {
        "title": "Create_Ingest_ProfileBody.dynamic_origin.dynamic_profile_options",
        "required": [
          "min_renditions",
          "max_renditions"
        ],
        "type": "object",
        "properties": {
          "min_renditions": {
            "type": "integer",
            "description": "Minimum number of renditions to create for **CAE profiles only**",
            "format": "int32"
          },
          "max_renditions": {
            "type": "integer",
            "description": "Maximum number of renditions to create for **CAE profiles only**",
            "format": "int32"
          },
          "min_resolution": {
            "description": "Defines the minimum resolution for for **CAE profiles only** renditions",
            "$ref": "#/components/schemas/CreateIngestProfilebody.dynamicOrigin.dynamicProfileOptions.minResolution"
          },
          "max_resolution": {
            "description": "Defines the maximum resolution for renditions for **CAE profiles only**",
            "$ref": "#/components/schemas/CreateIngestProfilebody.dynamicOrigin.dynamicProfileOptions.maxResolution"
          },
          "max_bitrate": {
            "type": "integer",
            "description": "Maximum bitrate for renditions in kbps for **CAE profiles only**",
            "format": "int32"
          },
          "max_first_rendition_bitrate": {
            "type": "integer",
            "description": "Maximum bitrate for lowest bitrate rendition in kbps for **CAE profiles only**",
            "format": "int32"
          },
          "max_frame_rate": {
            "type": "integer",
            "description": "Maximum framerate for renditions in fps for **CAE profiles only**",
            "format": "int32",
            "default": 30
          },
          "keyframe_rate": {
            "type": "number",
            "description": "The number of keyframes per second for renditions (So a value of 0.5 would result in one keyframe every two seconds; a value of 3 would result in three keyframes per second) for **CAE profiles only**",
            "default": 0.5
          },
          "select_baseline_profile_configuration": {
            "type": "boolean",
            "description": "At least one rendition used in the profile will be baseline profile for **CAE profiles only**",
            "default": false
          }
        }
      },
      "CreateIngestProfilebody.dynamicOrigin.dynamicProfileOptions.minResolution": {
        "title": "Create_Ingest_ProfileBody.dynamic_origin.dynamic_profile_options.min_resolution",
        "type": "object",
        "properties": {
          "height": {
            "type": "integer",
            "description": "Minimum height for renditions for **CAE profiles only**",
            "format": "int32"
          },
          "width": {
            "type": "integer",
            "description": "Minimum width for renditions for **CAE profiles only**",
            "format": "int32"
          }
        }
      },
      "CreateIngestProfilebody.dynamicOrigin.dynamicProfileOptions.maxResolution": {
        "title": "Create_Ingest_ProfileBody.dynamic_origin.dynamic_profile_options.max_resolution",
        "type": "object",
        "properties": {
          "height": {
            "type": "integer",
            "description": "Maximum height for renditions for **CAE profiles only** - defaults to the source height",
            "format": "int32"
          },
          "width": {
            "type": "integer",
            "description": "Maximum width for renditions for **CAE profiles only** - defaults to the source width",
            "format": "int32"
          }
        }
      },
      "CreateIngestProfilebody.renditions": {
        "title": "Create_Ingest_ProfileBody.renditions",
        "required": [
          "audio_bitrate",
          "audio_codec",
          "max_aac_profile",
          "format",
          "video_bitrate",
          "video_codec",
          "height",
          "width",
          "watermarks"
        ],
        "type": "object",
        "properties": {
          "audio_bitrate": {
            "type": "integer",
            "description": "audio bitrate in kbps **Legacy Ingest only**",
            "format": "int32"
          },
          "audio_codec": {
            "type": "string",
            "description": "audio codec, e.g. `aac` **Legacy Ingest only**"
          },
          "max_aac_profile": {
            "type": "string",
            "description": "max aaic profile - `aac-lc` is the recommended value **Legacy Ingest only**",
            "default": "aac-lc",
            "enum": ["aac-lc", "he-aac", "he-aac-v2"]
          },
          "format": {
            "type": "string",
            "description": "video format, e.g. `mp4`, `ts` (for HLS), `m4f` for video, `png` or `jpg` for images **Legacy Ingest only**"
          },
          "video_bitrate": {
            "type": "integer",
            "description": "target video bitrate in kbps **Legacy Ingest only**",
            "format": "int32"
          },
          "video_codec": {
            "type": "string",
            "description": "target video codec **Legacy Ingest only**"
          },
          "height": {
            "type": "integer",
            "description": "target frame height in pixels **Legacy Ingest only**",
            "format": "int32"
          },
          "width": {
            "type": "integer",
            "description": "target frame width in pixels **Legacy Ingest only**",
            "format": "int32"
          },
          "watermarks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateIngestProfilebody.renditions.watermarks"
            },
            "description": "array of watermark maps **Legacy Ingest only**"
          },
          "aspect_mode": {
            "type": "string",
            "description": "how to handle mismatch between source and rendition aspect ratio **Legacy Ingest only**",
            "default": "preserve",
            "enum":[
              "preserve", "stretch", "crop", "pad"
            ]
          },
          "audio_channels": {
            "type": "integer",
            "description": "number of audio channels **Legacy Ingest only**",
            "enum":[
              1, 2
            ]
          },
          "constant_bitrate": {
            "type": "boolean",
            "description": "whether to use constant bitrate for encoding **Legacy Ingest only**",
            "default": false
          },
          "crf": {
            "type": "integer",
            "description": "1-51, not used by default. **Legacy Ingest only**",
            "format": "int32",
            "minimum": 1,
            "maximum": 51
          },
          "decoder_bitrate_cap": {
            "type": "integer",
            "description": "In kbps, the max bitrate fed to the decoder **Legacy Ingest only**",
            "format": "int32"
          },
          "encryption_method": {
            "type": "string",
            "description": "encryption_method to use, e.g. `aes-128` **Legacy Ingest only**"
          },
          "encryption_key_rotation_period": {
            "type": "integer",
            "description": "use a different key for each set of segments, rotating to a new key after this many segments **Legacy Ingest only**",
            "format": "int32",
            "default": 10
          },
          "fixed_keyframe_interval": {
            "type": "integer",
            "description": "Forces a keyframe every X frames, but still allows additional keyframes &mdash; NOTE overrides `keyframe_interval` **Legacy Ingest only**",
            "format": "int32"
          },
          "forced_keyframe_rate": {
            "type": "number",
            "description": "Force the keyframe rate, h264 only, ignored if `forced_keyframe_interval` is used **Legacy Ingest only**"
          },
          "frame_rate": {
            "type": "integer",
            "description": "frame rate in frames per second **Legacy Ingest only** - default is the source framerate",
            "format": "int32"
          },
          "h264_bframes": {
            "type": "integer",
            "description": "number of bframes for h.264 **Legacy Ingest only**",
            "format": "int32",
            "default": 0
          },
          "h264_level": {
            "type": "integer",
            "description": "h.264 profile level **Legacy Ingest only**"
          },
          "h264_profile": {
            "type": "string",
            "description": "h.264 profile **Legacy Ingest only**",
            "default": "baseline",
            "enum":[
              "baseline", "main", "high"
            ]

          },
          "h264_reference_frames": {
            "type": "integer",
            "description": "number of h.264 reference frames to use **Legacy Ingest only**",
            "format": "int32"
          },
          "hls_optimized_ts": {
            "type": "boolean",
            "description": "Time segments optimized for HLS **Legacy Ingest only**"
          },
          "keyframe_interval": {
            "type": "integer",
            "description": "Maximum number of frames between keyframes (default is 250, and overrides keyframe_rate) **Legacy Ingest only**",
            "format": "int32"
          },
          "keyframe_rate": {
            "type": "integer",
            "description": "Maximum number of keyframes per second **Legacy Ingest only**",
            "format": "int32"
          },
          "label": {
            "type": "string",
            "description": "Image type for image renditions; required for image renditions **Legacy Ingest only**"
          },
          "live_stream": {
            "type": "boolean",
            "description": "Whether this will be for live streaming video **Legacy Ingest only**"
          },
          "live_sliding_window_duration": {
            "type": "number",
            "description": "Duration of stream to keep available for LiveDVR delivery (in seconds) **Legacy Ingest only**"
          },
          "max_video_bitrate": {
            "type": "integer",
            "description": "Maximum video bitrate (h.264 only) **Legacy Ingest only**",
            "format": "int32"
          },
          "max_frame_rate": {
            "type": "integer",
            "description": "Limits the frame rate rather than sets it, use as an alternative to frame rate **Legacy Ingest only**",
            "format": "int32"
          },
          "media_type": {
            "type": "string",
            "description": "the media type of the rendition **Legacy Ingest only**"
          },
          "one_pass": {
            "type": "boolean",
            "description": "force one-pass encoding **Legacy Ingest only**"
          },
          "reference_id": {
            "type": "string",
            "description": "A reference id for the rendition that is unique within the account - required for DRM packaging **Legacy Ingest only**"
          },
          "segment_seconds": {
            "type": "number",
            "description": "number of seconds of content to include in segments (the default for HLS is 10; for DASH: 2) **Legacy Ingest only**"
          },
          "skip": {
            "description": "A set of conditions for skippiung creation of this rendition see Conditional Output **Legacy Ingest only**",
            "$ref": "#/components/schemas/CreateIngestProfilebody.renditions.skip"
          },
          "skip_video": {
            "type": "boolean",
            "description": "Set to true to skip video encoding for audio-only renditions **Legacy Ingest only**"
          },
          "speed": {
            "type": "integer",
            "description": "a target transcoding speed. Slower transcoding allows for more advanced file compression, while faster transcoding is possible by skipping some advanced compression features **Legacy Ingest only**",
            "format": "int32"
          },
          "streaming_delivery_format": {
            "type": "string",
            "description": "Sets the format/protocol for an output that will be delivered using a specific streaming configuration, including necessary manifests, directory **Legacy Ingest only**"
          },
          "streaming_delivery_profile": {
            "type": "string",
            "description": "Sets the profile of the streaming delivery format, ensuring options are selected for compatibility with the profile **Legacy Ingest only**"
          },
          "type": {
            "type": "string",
            "description": "transmuxing type for HLS; typical value is segmented **Legacy Ingest only**"
          },
          "upscale": {
            "type": "boolean",
            "description": "whether to upsize the frames if the source frame size is smaller than the target **Legacy Ingest only**"
          }
        }
      },
      "CreateIngestProfilebody.renditions.skip": {
        "title": "Create_Ingest_ProfileBody.renditions.skip",
        "type": "object",
        "properties": {
          "min_audio_bitrate": {
            "type": "integer",
            "description": "the minimum audio bitrate that the source must have (kbps) **Legacy Ingest only**",
            "format": "int32"
          },
          "max_audio_bitrate": {
            "type": "integer",
            "description": "the maximum audio bitrate that the source must have (kbps) **Legacy Ingest only**",
            "format": "int32"
          },
          "min_video_bitrate": {
            "type": "integer",
            "description": "the minimum video bitrate that the source must have (kbps) **Legacy Ingest only**",
            "format": "int32"
          },
          "max_video_bitrate": {
            "type": "integer",
            "description": "the maximum video bitrate that the source must have (kbps) **Legacy Ingest only**",
            "format": "int32"
          },
          "require_audio": {
            "type": "boolean",
            "description": "if true the source must include an audio track **Legacy Ingest only**"
          },
          "require_video": {
            "type": "boolean",
            "description": "if true the source must include a video track **Legacy Ingest only**"
          },
          "min_size": {
            "type": "string",
            "description": "the source must be at least this resolution - string of the form &quot;widthxheight&quot; (e.g. &quot;400x225&quot;) **Legacy Ingest only**"
          },
          "max_size": {
            "type": "string",
            "description": "the source must be at most this resolution - string of the form &quot;widthxheight&quot; (e.g. &quot;1920x1080&quot;) **Legacy Ingest only**"
          }
        }
      },
      "CreateIngestProfilebody.renditions.watermarks": {
        "title": "Create_Ingest_ProfileBody.renditions.watermarks",
        "required": [
          "url",
          "width",
          "height",
          "x",
          "y"
        ],
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "URL for the watermark image **Legacy Ingest only**"
          },
          "width": {
            "type": "string",
            "description": "width in pixels or percent of frame width; e.g. 20 or 10% - decimal values like 10.5% are not permitted **Legacy Ingest only**"
          },
          "height": {
            "type": "string",
            "description": "height in pixels or percent of frame width; e.g. 20 or 10% - decimal values like 10.5% are not permitted **Legacy Ingest only**"
          },
          "x": {
            "type": "string",
            "description": "distance from left edge to center of image as pixels or precent of frame width; e.g. 20 or 10% (use negative values like -10 to position the watermark relative to the right edge) - decimal values like 10.5% are not permitted **Legacy Ingest only**"
          },
          "y": {
            "type": "string",
            "description": "distance from top edge to center if image as pixels or percent of frame height; e.g. 20 or 10% (use negative values like -10 to position the watermark relative to the bottom edge) - decimal values like 10.5% are not permitted **Legacy Ingest only**"
          }
        }
      },
      "CreateIngestProfilebody.packages": {
        "title": "Create_Ingest_ProfileBody.packages",
        "required": [
          "drm",
          "package_type",
          "renditions"
        ],
        "type": "object",
        "properties": {
          "drm": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "for MPEG-DASH, array of DRM types to apply, e.g. [&quot;widevine&quot;, &quot;playready&quot;] **Legacy Ingest only**"
          },
          "package_type": {
            "type": "string",
            "description": "for MPEG-DASH, the package type is dash; for other formats, the package type is the DRM type, e.g. widevine **Legacy Ingest only**"
          },
          "renditions": {
            "type": "object",
            "description": "for MPEG-DASH, the renditions will be set to the reference_id for a single rendition; for other formats, renditions is set equal to an array of rendition reference_id&#39;s **Legacy Ingest only**"
          }
        }
      },
      "DigitalMaster": {
        "title": "digital_master",
        "required": [
          "rendition",
          "distribute"
        ],
        "type": "object",
        "properties": {
          "rendition": {
            "type": "string",
            "description": "rendition that will be used as master (passthrough = source optimized for online delivery)"
          },
          "distribute": {
            "type": "boolean",
            "description": "whether source is available for playback as a rendition"
          }
        }
      },
      "DynamicOrigin": {
        "title": "dynamic_origin",
        "required": [
          "renditions",
          "images",
          "dynamic_profile_options"
        ],
        "type": "object",
        "properties": {
          "renditions": {
            "type": "object",
            "description": "audio and video renditions to be created"
          },
          "images": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicOrigin.images"
            },
            "description": "specification for poster and thumbnail images"
          },
          "dynamic_profile_options": {
            "description": "defines rendition options for CAE profiles",
            "$ref": "#/components/schemas/DynamicOrigin.dynamicProfileOptions"
          }
        }
      },
      "DynamicOrigin.images": {
        "title": "dynamic_origin.images",
        "required": [
          "label",
          "height",
          "width"
        ],
        "type": "object",
        "properties": {
          "label": {
            "type": "string",
            "description": "the image type"
          },
          "height": {
            "type": "integer",
            "description": "the image height",
            "format": "int32"
          },
          "width": {
            "type": "integer",
            "description": "the image width",
            "format": "int32"
          }
        }
      },
      "DynamicOrigin.dynamicProfileOptions": {
        "title": "dynamic_origin.dynamic_profile_options",
        "required": [
          "min_renditions",
          "max_renditions",
          "min-resolution",
          "max-resolution",
          "max_bitrate",
          "max_first_rendition_bitrate",
          "max_frame_rate",
          "keyframe_rate",
          "select_baseline_profile_configuration"
        ],
        "type": "object",
        "properties": {
          "min_renditions": {
            "type": "integer",
            "description": "minimum number of renditions",
            "format": "int32"
          },
          "max_renditions": {
            "type": "integer",
            "description": "maximum number of renditions",
            "format": "int32"
          },
          "min-resolution": {
            "description": "defines the minimum resolution for renditions",
            "$ref": "#/components/schemas/DynamicOrigin.dynamicProfileOptions.min-resolution"
          },
          "max-resolution": {
            "description": "defines the maximum resolution for renditions",
            "$ref": "#/components/schemas/DynamicOrigin.dynamicProfileOptions.max-resolution"
          },
          "max_bitrate": {
            "type": "integer",
            "description": "maximum bitrate for renditions",
            "format": "int32"
          },
          "max_first_rendition_bitrate": {
            "type": "integer",
            "description": "maximum bitrate for the lowest bitrate rendition",
            "format": "int32"
          },
          "max_frame_rate": {
            "type": "integer",
            "description": "maximum framerate for the renditions",
            "format": "int32"
          },
          "keyframe_rate": {
            "type": "integer",
            "description": "keyframes per second for the renditions",
            "format": "int32"
          },
          "select_baseline_profile_configuration": {
            "type": "boolean",
            "description": "whether at least one rendition used in the profile will be baseline profile"
          }
        }
      },
      "DynamicOrigin.dynamicProfileOptions.min-resolution": {
        "title": "dynamic_origin.dynamic_profile_options.min-resolution",
        "required": [
          "width",
          "height"
        ],
        "type": "object",
        "properties": {
          "width": {
            "type": "integer",
            "description": "defines the minimum width for renditions",
            "format": "int32"
          },
          "height": {
            "type": "integer",
            "description": "defines the minimum height for renditions",
            "format": "int32"
          }
        }
      },
      "DynamicOrigin.dynamicProfileOptions.max-resolution": {
        "title": "dynamic_origin.dynamic_profile_options.max-resolution",
        "required": [
          "width",
          "height"
        ],
        "type": "object",
        "properties": {
          "width": {
            "type": "integer",
            "description": "defines the maximum width for renditions",
            "format": "int32"
          },
          "height": {
            "type": "integer",
            "description": "defines the maximum height for renditions",
            "format": "int32"
          }
        }
      },
      "Renditions": {
        "title": "renditions",
        "required": [
          "aspect_mode",
          "audio_bitrate",
          "audio_channels",
          "id",
          "audio_codec",
          "constant_bitrate",
          "crf",
          "decoder_bitrate_cap",
          "encryption_method",
          "encryption_key_rotation_period",
          "fixed_keyframe_interval",
          "forced_keyframe_rate",
          "format",
          "frame_rate",
          "h264_bframes",
          "h264_level",
          "h264_profile",
          "h264_reference_frames",
          "hls_optimized_ts",
          "keyframe_interval",
          "keyframe_rate",
          "label",
          "live_stream",
          "live_sliding_window_duration",
          "max_video_bitrate",
          "max_frame_rate",
          "media_type",
          "one_pass",
          "package_format",
          "reference_id",
          "skip",
          "skip_video",
          "speed",
          "streaming_delivery_format",
          "streaming_delivery_profile",
          "type",
          "upscale",
          "video_bitrate",
          "video_codec",
          "height",
          "width",
          "watermarks"
        ],
        "type": "object",
        "properties": {
          "aspect_mode": {
            "type": "string",
            "description": "how to handle mismatch between source and rendition aspect ratio"
          },
          "audio_bitrate": {
            "type": "integer",
            "description": "audio bitrate in kbps",
            "format": "int32"
          },
          "audio_channels": {
            "type": "integer",
            "description": "number of audio channels",
            "format": "int32"
          },
          "id": {
            "type": "string",
            "description": "the rendition id"
          },
          "audio_codec": {
            "type": "string",
            "description": "audio codec, e.g. aac"
          },
          "constant_bitrate": {
            "type": "boolean",
            "description": "whether to use constant bitrate for encoding &mdash; this field is not relevant for h.264 video and will be ignored"
          },
          "crf": {
            "type": "integer",
            "description": "1-51, not used by default.",
            "format": "int32"
          },
          "decoder_bitrate_cap": {
            "type": "integer",
            "description": "In kbps, the max bitrate fed to the decoder",
            "format": "int32"
          },
          "encryption_method": {
            "type": "string",
            "description": "encryption_method to use, e.g. aes-128"
          },
          "encryption_key_rotation_period": {
            "type": "integer",
            "description": "use a different key for each set of segments, rotating to a new key after this many segments",
            "format": "int32"
          },
          "fixed_keyframe_interval": {
            "type": "integer",
            "description": "Forces a keyframe every X frames, but still allows additional keyframes",
            "format": "int32"
          },
          "forced_keyframe_rate": {
            "type": "integer",
            "description": "Force the keyframe rate, h264 only, ignored if forced_keyframe_interval is used",
            "format": "int32"
          },
          "format": {
            "type": "string",
            "description": "video format, e.g. mp4, ts (for HLS), flv, m4f for video, png or jpg for images"
          },
          "frame_rate": {
            "type": "integer",
            "description": "frame rate in frames per second",
            "format": "int32"
          },
          "h264_bframes": {
            "type": "integer",
            "description": "number of bframes for h.264",
            "format": "int32"
          },
          "h264_level": {
            "type": "integer",
            "description": "h.264 profile level",
            "format": "int32"
          },
          "h264_profile": {
            "type": "string",
            "description": "h.264 profile"
          },
          "h264_reference_frames": {
            "type": "integer",
            "description": "number of h.264 reference frames to use",
            "format": "int32"
          },
          "hls_optimized_ts": {
            "type": "boolean",
            "description": "Time segments optimized for HLS"
          },
          "keyframe_interval": {
            "type": "integer",
            "description": "Maximum number of frames between keyframes (default is 250, and overrides keyframe_rate)",
            "format": "int32"
          },
          "keyframe_rate": {
            "type": "integer",
            "description": "Maximum number of keyframes per second",
            "format": "int32"
          },
          "label": {
            "type": "string",
            "description": "Image type for image renditions; required for image renditions"
          },
          "live_stream": {
            "type": "boolean",
            "description": "Whether this will be for live streaming video"
          },
          "live_sliding_window_duration": {
            "type": "integer",
            "description": "Duration of stream to keep available for LiveDVR delivery (in seconds)",
            "format": "int32"
          },
          "max_video_bitrate": {
            "type": "integer",
            "description": "Maximum video bitrate (h.264 only)",
            "format": "int32"
          },
          "max_frame_rate": {
            "type": "integer",
            "description": "Limits the frame rate rather than sets it, use as an alternative to frame rate",
            "format": "int32"
          },
          "media_type": {
            "type": "string",
            "description": "the media type of the rendition"
          },
          "one_pass": {
            "type": "boolean",
            "description": "force one-pass encoding"
          },
          "package_format": {
            "type": "string",
            "description": "Creates a zip or tar file containing all the media files of an output, and uploads this single package rather than all the individual files"
          },
          "reference_id": {
            "type": "string",
            "description": "A reference id for the rendition that is unique within the account - required for DRM packaging"
          },
          "skip": {
            "description": "A set of conditions for skippiung creation of this rendition see Conditional Output",
            "$ref": "#/components/schemas/Renditions.skip"
          },
          "skip_video": {
            "type": "boolean",
            "description": "Set to true to skip video encoding for audio-only renditions"
          },
          "speed": {
            "type": "integer",
            "description": "a target transcoding speed. Slower transcoding allows for more advanced file compression, while faster transcoding is possible by skipping some advanced compression features",
            "format": "int32"
          },
          "streaming_delivery_format": {
            "type": "string",
            "description": "Sets the format/protocol for an output that will be delivered using a specific streaming configuration, including necessary manifests, directory"
          },
          "streaming_delivery_profile": {
            "type": "string",
            "description": "Sets the profile of the streaming delivery format, ensuring options are selected for compatibility with the profile"
          },
          "type": {
            "type": "string",
            "description": "transmuxing type for HLS; typical value is segmented"
          },
          "upscale": {
            "type": "boolean",
            "description": "whether to upsize the frames if the source frame size is smaller than the target"
          },
          "video_bitrate": {
            "type": "integer",
            "description": "target video bitrate in kbps",
            "format": "int32"
          },
          "video_codec": {
            "type": "string",
            "description": "target video codec"
          },
          "height": {
            "type": "integer",
            "description": "target frame height in pixels",
            "format": "int32"
          },
          "width": {
            "type": "integer",
            "description": "target frame width in pixels",
            "format": "int32"
          },
          "watermarks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Renditions.watermarks"
            },
            "description": "array of watermark maps"
          }
        }
      },
      "Renditions.skip": {
        "title": "renditions.skip",
        "required": [
          "min_audio_bitrate",
          "max_audio_bitrate",
          "min_video_bitrate",
          "max_video_bitrate",
          "require_audio",
          "require_video",
          "min_size",
          "max_size"
        ],
        "type": "object",
        "properties": {
          "min_audio_bitrate": {
            "type": "integer",
            "description": "the minimum audio bitrate that the source must have (kbps)",
            "format": "int32"
          },
          "max_audio_bitrate": {
            "type": "integer",
            "description": "the maximum audio bitrate that the source must have (kbps)",
            "format": "int32"
          },
          "min_video_bitrate": {
            "type": "integer",
            "description": "the minimum video bitrate that the source must have (kbps)",
            "format": "int32"
          },
          "max_video_bitrate": {
            "type": "integer",
            "description": "the maximum video bitrate that the source must have (kbps)",
            "format": "int32"
          },
          "require_audio": {
            "type": "boolean",
            "description": "if true the source must include an audio track"
          },
          "require_video": {
            "type": "boolean",
            "description": "if true the source must include a video track"
          },
          "min_size": {
            "type": "string",
            "description": "the source must be at least this resolution - string of the form &quot;widthxheight&quot; (e.g. &quot;400x225&quot;)"
          },
          "max_size": {
            "type": "string",
            "description": "the source must be at most this resolution - string of the form &quot;widthxheight&quot; (e.g. &quot;1920x1080&quot;)"
          }
        }
      },
      "Renditions.watermarks": {
        "title": "renditions.watermarks",
        "required": [
          "url",
          "width",
          "height",
          "x",
          "y"
        ],
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "URL for the watermark image"
          },
          "width": {
            "type": "string",
            "description": "width in pixels or percent of frame width; e.g. 20 or 10%"
          },
          "height": {
            "type": "string",
            "description": "height in pixels or percent of frame width; e.g. 20 or 10%"
          },
          "x": {
            "type": "string",
            "description": "distance from left edge to center of image as pixels or precent of frame width; e.g. 20 or 10%"
          },
          "y": {
            "type": "string",
            "description": "distance from top edge to center if image as pixels or percent of frame height; e.g. 20 or 10%"
          }
        }
      },
      "UpdateIngestProfilebody.digitalMaster": {
        "title": "Update_Ingest_ProfileBody.digital_master",
        "type": "object",
        "properties": {
          "rendition": {
            "type": "string",
            "description": "rendition to use as master - either passthrough (the source optimized for online delivery) or none if you do not want to archive a master"
          },
          "distribute": {
            "type": "boolean",
            "description": "whether to make the master playable as a rendition by pushing it to the CDN(s)"
          }
        }
      },
      "UpdateIngestProfilebody.dynamicOrigin": {
        "title": "Update_Ingest_ProfileBody.dynamic_origin",
        "required": [
          "renditions",
          "dynamic_profile_options"
        ],
        "type": "object",
        "properties": {
          "renditions": {
            "type": "object",
            "description": "names of audio and video renditions to include - see Standard Ingest Profiles - renditions for available renditions you can choose from"
          },
          "dynamic_profile_options": {
            "description": "Defines rendition options for CAE profiles",
            "$ref": "#/components/schemas/UpdateIngestProfilebody.dynamicOrigin.dynamicProfileOptions"
          },
          "images": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateIngestProfilebody.dynamicOrigin.images"
            },
            "description": "array of image specifications for poster and thumbnail (if omitted, no images will be captured during ingestion)"
          }
        }
      },
      "UpdateIngestProfilebody.dynamicOrigin.images": {
        "title": "Update_Ingest_ProfileBody.dynamic_origin.images",
        "type": "object",
        "properties": {
          "label": {
            "type": "string",
            "description": "the kind of image this will be"
          },
          "height": {
            "type": "number",
            "description": "the height of the image in pixels"
          },
          "width": {
            "type": "number",
            "description": "the width of the image in pixels"
          }
        }
      },
      "UpdateIngestProfilebody.dynamicOrigin.dynamicProfileOptions": {
        "title": "Update_Ingest_ProfileBody.dynamic_origin.dynamic_profile_options",
        "required": [
          "min_renditions",
          "max_renditions"
        ],
        "type": "object",
        "properties": {
          "min_renditions": {
            "type": "integer",
            "description": "Minimum number of renditions to create",
            "format": "int32"
          },
          "max_renditions": {
            "type": "integer",
            "description": "Maximum number of renditions to create",
            "format": "int32"
          },
          "min_resolution": {
            "description": "Defines the minimum resolution for renditions",
            "$ref": "#/components/schemas/UpdateIngestProfilebody.dynamicOrigin.dynamicProfileOptions.minResolution"
          },
          "max_resolution": {
            "description": "Defines the maximum resolution for renditions",
            "$ref": "#/components/schemas/UpdateIngestProfilebody.dynamicOrigin.dynamicProfileOptions.maxResolution"
          },
          "max_bitrate": {
            "type": "number",
            "description": "Maximum bitrate for renditions in kbps"
          },
          "max_first_rendition_bitrate": {
            "type": "number",
            "description": "Maximum bitrate for lowest bitrate rendition in kbps"
          },
          "max_frame_rate": {
            "type": "number",
            "description": "Maximum framerate for renditions in fps"
          },
          "keyframe_rate": {
            "type": "number",
            "description": "The number of keyframes per second for renditions (So a value of 0.5 would result in one keyframe every two seconds; a value of 3 would result in three keyframes per second)"
          },
          "select_baseline_profile_configuration": {
            "type": "boolean",
            "description": "At least one rendition used in the profile will be baseline profile"
          }
        }
      },
      "UpdateIngestProfilebody.dynamicOrigin.dynamicProfileOptions.minResolution": {
        "title": "Update_Ingest_ProfileBody.dynamic_origin.dynamic_profile_options.min_resolution",
        "type": "object",
        "properties": {
          "height": {
            "type": "number",
            "description": "Minimum height for renditions"
          },
          "width": {
            "type": "number",
            "description": "Minimum width for renditions"
          }
        }
      },
      "UpdateIngestProfilebody.dynamicOrigin.dynamicProfileOptions.maxResolution": {
        "title": "Update_Ingest_ProfileBody.dynamic_origin.dynamic_profile_options.max_resolution",
        "type": "object",
        "properties": {
          "height": {
            "type": "number",
            "description": "Maximum height for renditions"
          },
          "width": {
            "type": "number",
            "description": "Maximum width for renditions"
          }
        }
      },
      "UpdateIngestProfilebody.renditions": {
        "title": "Update_Ingest_ProfileBody.renditions",
        "required": [
          "audio_bitrate",
          "audio_codec",
          "max_aac_profile",
          "format",
          "video_bitrate",
          "video_codec",
          "height",
          "width",
          "watermarks"
        ],
        "type": "object",
        "properties": {
          "audio_bitrate": {
            "type": "integer",
            "description": "audio bitrate in kbps",
            "format": "int32"
          },
          "audio_codec": {
            "type": "string",
            "description": "audio codec, e.g. aac"
          },
          "max_aac_profile": {
            "type": "string",
            "description": "max aaic profile - aac-lc is the recommended value"
          },
          "format": {
            "type": "string",
            "description": "video format, e.g. mp4, ts (for HLS), flv, m4f for video, png or jpg for images"
          },
          "video_bitrate": {
            "type": "integer",
            "description": "target video bitrate in kbps",
            "format": "int32"
          },
          "video_codec": {
            "type": "string",
            "description": "target video codec"
          },
          "height": {
            "type": "integer",
            "description": "target frame height in pixels",
            "format": "int32"
          },
          "width": {
            "type": "integer",
            "description": "target frame width in pixels",
            "format": "int32"
          },
          "watermarks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateIngestProfilebody.renditions.watermarks"
            },
            "description": "array of watermark maps"
          },
          "aspect_mode": {
            "type": "string",
            "description": "how to handle mismatch between source and rendition aspect ratio"
          },
          "audio_channels": {
            "type": "number",
            "description": "number of audio channels"
          },
          "constant_bitrate": {
            "type": "boolean",
            "description": "whether to use constant bitrate for encoding"
          },
          "crf": {
            "type": "number",
            "description": "1-51, not used by default."
          },
          "decoder_bitrate_cap": {
            "type": "integer",
            "description": "In kbps, the max bitrate fed to the decoder",
            "format": "int32"
          },
          "encryption_method": {
            "type": "string",
            "description": "encryption_method to use, e.g. aes-128"
          },
          "encryption_key_rotation_period": {
            "type": "number",
            "description": "use a different key for each set of segments, rotating to a new key after this many segments"
          },
          "fixed_keyframe_interval": {
            "type": "number",
            "description": "Forces a keyframe every X frames, but still allows additional keyframes &mdash; NOTE overrides keyframe_interval"
          },
          "forced_keyframe_rate": {
            "type": "number",
            "description": "Force the keyframe rate, h264 only, ignored if forced_keyframe_interval is used"
          },
          "frame_rate": {
            "type": "number",
            "description": "frame rate in frames per second"
          },
          "h264_bframes": {
            "type": "number",
            "description": "number of bframes for h.264"
          },
          "h264_level": {
            "type": "number",
            "description": "h.264 profile level"
          },
          "h264_profile": {
            "type": "string",
            "description": "h.264 profile"
          },
          "h264_reference_frames": {
            "type": "number",
            "description": "number of h.264 reference frames to use"
          },
          "hls_optimized_ts": {
            "type": "boolean",
            "description": "Time segments optimized for HLS"
          },
          "keyframe_interval": {
            "type": "number",
            "description": "Maximum number of frames between keyframes (default is 250, and overrides keyframe_rate)"
          },
          "keyframe_rate": {
            "type": "number",
            "description": "Maximum number of keyframes per second"
          },
          "label": {
            "type": "string",
            "description": "Image type for image renditions; required for image renditions"
          },
          "live_stream": {
            "type": "boolean",
            "description": "Whether this will be for live streaming video"
          },
          "live_sliding_window_duration": {
            "type": "number",
            "description": "Duration of stream to keep available for LiveDVR delivery (in seconds)"
          },
          "max_video_bitrate": {
            "type": "number",
            "description": "Maximum video bitrate (h.264 only)"
          },
          "max_frame_rate": {
            "type": "number",
            "description": "Limits the frame rate rather than sets it, use as an alternative to frame rate"
          },
          "media_type": {
            "type": "string",
            "description": "the media type of the rendition"
          },
          "one_pass": {
            "type": "boolean",
            "description": "force one-pass encoding"
          },
          "reference_id": {
            "type": "string",
            "description": "A reference id for the rendition that is unique within the account - required for DRM packaging"
          },
          "segment_seconds": {
            "type": "number",
            "description": "number of seconds of content to include in segments (the default for HLS is 10; for DASH: 2)"
          },
          "skip": {
            "description": "A set of conditions for skippiung creation of this rendition see Conditional Output",
            "$ref": "#/components/schemas/UpdateIngestProfilebody.renditions.skip"
          },
          "skip_video": {
            "type": "boolean",
            "description": "Set to true to skip video encoding for audio-only renditions"
          },
          "speed": {
            "type": "number",
            "description": "a target transcoding speed. Slower transcoding allows for more advanced file compression, while faster transcoding is possible by skipping some advanced compression features"
          },
          "streaming_delivery_format": {
            "type": "string",
            "description": "Sets the format/protocol for an output that will be delivered using a specific streaming configuration, including necessary manifests, directory"
          },
          "streaming_delivery_profile": {
            "type": "string",
            "description": "Sets the profile of the streaming delivery format, ensuring options are selected for compatibility with the profile"
          },
          "type": {
            "type": "string",
            "description": "transmuxing type for HLS; typical value is segmented"
          },
          "upscale": {
            "type": "boolean",
            "description": "whether to upsize the frames if the source frame size is smaller than the target"
          }
        }
      },
      "UpdateIngestProfilebody.renditions.skip": {
        "title": "Update_Ingest_ProfileBody.renditions.skip",
        "type": "object",
        "properties": {
          "min_audio_bitrate": {
            "type": "number",
            "description": "the minimum audio bitrate that the source must have (kbps)"
          },
          "max_audio_bitrate": {
            "type": "number",
            "description": "the maximum audio bitrate that the source must have (kbps)"
          },
          "min_video_bitrate": {
            "type": "number",
            "description": "the minimum video bitrate that the source must have (kbps)"
          },
          "max_video_bitrate": {
            "type": "number",
            "description": "the maximum video bitrate that the source must have (kbps)"
          },
          "require_audio": {
            "type": "boolean",
            "description": "if true the source must include an audio track"
          },
          "require_video": {
            "type": "boolean",
            "description": "if true the source must include a video track"
          },
          "min_size": {
            "type": "string",
            "description": "the source must be at least this resolution - string of the form &quot;widthxheight&quot; (e.g. &quot;400x225&quot;)"
          },
          "max_size": {
            "type": "string",
            "description": "the source must be at most this resolution - string of the form &quot;widthxheight&quot; (e.g. &quot;1920x1080&quot;)"
          }
        }
      },
      "UpdateIngestProfilebody.renditions.watermarks": {
        "title": "Update_Ingest_ProfileBody.renditions.watermarks",
        "required": [
          "url",
          "width",
          "height",
          "x",
          "y"
        ],
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "URL for the watermark image"
          },
          "width": {
            "type": "string",
            "description": "width in pixels or percent of frame width; e.g. 20 or 10% - decimal values like 10.5% are not permitted"
          },
          "height": {
            "type": "string",
            "description": "height in pixels or percent of frame width; e.g. 20 or 10% - decimal values like 10.5% are not permitted"
          },
          "x": {
            "type": "string",
            "description": "distance from left edge to center of image as pixels or precent of frame width; e.g. 20 or 10% (use negative values like -10 to position the watermark relative to the right edge) - decimal values like 10.5% are not permitted"
          },
          "y": {
            "type": "string",
            "description": "distance from top edge to center if image as pixels or percent of frame height; e.g. 20 or 10% (use negative values like -10 to position the watermark relative to the bottom edge) - decimal values like 10.5% are not permitted"
          }
        }
      }
    }
  }
}
